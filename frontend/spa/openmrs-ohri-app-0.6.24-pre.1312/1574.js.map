{"version":3,"file":"1574.js","mappings":"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","sources":["webpack://openmrs-ohri-app/./src/pages/common.scss?c6c4","webpack://openmrs-ohri-app/./src/pages/program-management/tabs/hiv-enrolment-tab.component.tsx","webpack://openmrs-ohri-app/./src/pages/program-management/tabs/service-delivery-tab.component.tsx","webpack://openmrs-ohri-app/./src/pages/program-management/tabs/art-therapy-tab.component.tsx","webpack://openmrs-ohri-app/./src/pages/program-management/tabs/death-tab.component.tsx","webpack://openmrs-ohri-app/./src/pages/program-management/tabs/transfer-out-tab.component.tsx","webpack://openmrs-ohri-app/./src/pages/program-management/program-management-summary.component.tsx","webpack://openmrs-ohri-app/./src/pages/common.scss"],"sourcesContent":["\n      import API from \"!../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./common.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./common.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport EmptyState from '../../../components/empty-state/empty-state.component';\nimport EncounterList, {\n  EncounterListColumn,\n  getObsFromEncounter,\n} from '../../../components/encounter-list/encounter-list.component';\nimport {\n  dateOfServiceEnrollmentConcept,\n  studyPopulationTypeConcept,\n  dateOfHIVDiagnosisConcept,\n  careAndTreatmentEncounterType,\n  entryPointConcept,\n  patientTypeEnrollmentConcept,\n  re_enrolmentDateConcept,\n} from '../../../constants';\n\ninterface HIVEnrolmentTabListProps {\n  patientUuid: string;\n}\n\nconst columns: EncounterListColumn[] = [\n  {\n    key: 'date',\n    header: 'Enrollment/Re-enrollment Date',\n    getValue: encounter => {\n      return getObsFromEncounter(encounter, re_enrolmentDateConcept, true) !== '--'\n        ? getObsFromEncounter(encounter, re_enrolmentDateConcept, true)\n        : getObsFromEncounter(encounter, dateOfServiceEnrollmentConcept, true);\n    },\n  },\n  {\n    key: 'clientDescription',\n    header: 'Patient Type at Enrollment',\n    getValue: encounter => {\n      return getObsFromEncounter(encounter, patientTypeEnrollmentConcept);\n    },\n  },\n  {\n    key: 'dateConfirmedPositive',\n    header: 'Date Confirmed HIV Positive',\n    getValue: encounter => {\n      return getObsFromEncounter(encounter, dateOfHIVDiagnosisConcept, true);\n    },\n  },\n  {\n    key: 'entryPoint',\n    header: 'Entry Point',\n    getValue: encounter => {\n      return getObsFromEncounter(encounter, entryPointConcept);\n    },\n  },\n  {\n    key: 'populationType',\n    header: 'Population Type',\n    getValue: encounter => {\n      return getObsFromEncounter(encounter, studyPopulationTypeConcept);\n    },\n  },\n  {\n    key: 'actions',\n    header: 'Actions',\n    getValue: encounter => [\n      {\n        form: { name: 'service_enrolment', package: 'hiv' },\n        encounterUuid: encounter.uuid,\n        intent: '*',\n        label: 'View Details',\n        mode: 'view',\n      },\n      {\n        form: { name: 'service_enrolment', package: 'hiv' },\n        encounterUuid: encounter.uuid,\n        intent: '*',\n        label: 'Edit',\n        mode: 'edit',\n      },\n    ],\n  },\n];\n\nconst HIVEnrolmentTabList: React.FC<HIVEnrolmentTabListProps> = ({ patientUuid }) => {\n  const { t } = useTranslation();\n\n  const headerTitle = t('hivEnrolment', 'HIV Enrolment');\n  const displayText = t('hivEnrolment', 'HIV Enrolment');\n\n  return (\n    <EncounterList\n      patientUuid={patientUuid}\n      encounterUuid={careAndTreatmentEncounterType}\n      form={{ package: 'hiv', name: 'service_enrolment' }}\n      columns={columns}\n      description={displayText}\n      headerTitle={headerTitle}\n      dropdownText=\"Add\"\n    />\n  );\n};\n\nexport default HIVEnrolmentTabList;\n","import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport EmptyState from '../../../components/empty-state/empty-state.component';\n\ninterface ServiceDeliveryTabListProps {\n  patientUuid: string;\n}\n\nconst ServiceDeliveryTabList: React.FC<ServiceDeliveryTabListProps> = ({ patientUuid }) => {\n  const { t } = useTranslation();\n\n  const headerTitle = t('serviceDelivery', 'Service Delivery');\n  const displayText = t('serviceDelivery', 'Service Delivery');\n\n  return (\n    <>\n      <EmptyState displayText={displayText} headerTitle={headerTitle} />\n    </>\n  );\n};\n\nexport default ServiceDeliveryTabList;\n","import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport EmptyState from '../../../components/empty-state/empty-state.component';\nimport styles from '../../common.scss';\nimport { DataTableSkeleton } from 'carbon-components-react';\n\nimport EncounterList, {\n  EncounterListColumn,\n  getObsFromEncounter,\n  getEncounterValues,\n  getLatestARTDateConcept,\n  getARTReasonConcept,\n} from '../../../components/encounter-list/encounter-list.component';\nimport {\n  artTherapyDateTime_UUID,\n  art_Therapy_EncounterUUID,\n  therapyPlanConcept,\n  regimenLine_UUID,\n  regimenConcept,\n  artStopDateUUID,\n  substitutionDateUUID,\n  switchDateUUID,\n} from '../../../constants';\n\ninterface ArtTherapyTabListProps {\n  patientUuid: string;\n}\n\nconst ARTDates: string[] = [artTherapyDateTime_UUID, switchDateUUID, substitutionDateUUID, artStopDateUUID];\n\nconst columns: EncounterListColumn[] = [\n  {\n    key: 'initiationDate',\n    header: 'Date(ART Start, Stopped, Switched, Change)',\n    getValue: encounter => {\n      return getObsFromEncounter(\n        encounter,\n        getLatestARTDateConcept(encounter, {\n          artTherapyDateTime_UUID,\n          switchDateUUID,\n          substitutionDateUUID,\n          artStopDateUUID,\n        }),\n        true,\n      );\n    },\n  },\n  {\n    key: 'therapyPlan',\n    header: 'Therapy Plan',\n    getValue: encounter => {\n      return getObsFromEncounter(encounter, therapyPlanConcept);\n    },\n  },\n  {\n    key: 'regimen',\n    header: 'Regimen',\n    getValue: encounter => {\n      return getObsFromEncounter(encounter, regimenConcept);\n    },\n  },\n  {\n    key: 'regimenInitiated',\n    header: 'Regimen line',\n    getValue: encounter => {\n      return getObsFromEncounter(encounter, regimenLine_UUID);\n    },\n  },\n  {\n    key: 'reason',\n    header: 'Reason',\n    getValue: encounter => {\n      return getObsFromEncounter(\n        encounter,\n        getARTReasonConcept(encounter, {\n          artTherapyDateTime_UUID,\n          switchDateUUID,\n          substitutionDateUUID,\n          artStopDateUUID,\n        }),\n      );\n    },\n  },\n  {\n    key: 'actions',\n    header: 'Actions',\n    getValue: encounter => [\n      {\n        form: { name: 'art_therapy', package: 'hiv' },\n        encounterUuid: encounter.uuid,\n        intent: '*',\n        label: 'View Details',\n        mode: 'view',\n      },\n      {\n        form: { name: 'art_therapy', package: 'hiv' },\n        encounterUuid: encounter.uuid,\n        intent: '*',\n        label: 'Edit Form',\n        mode: 'edit',\n      },\n    ],\n  },\n];\n\nconst ArtTherapyTabList: React.FC<ArtTherapyTabListProps> = ({ patientUuid }) => {\n  const { t } = useTranslation();\n\n  const headerTitle = t('artTherapy', 'ART Therapy');\n  const displayText = t('artTherapy', 'ART Therapy');\n\n  return (\n    // <>\n    //   <EmptyState displayText={displayText} headerTitle={headerTitle} />\n    // </>\n    <EncounterList\n      patientUuid={patientUuid}\n      encounterUuid={art_Therapy_EncounterUUID}\n      form={{ package: 'hiv', name: 'art_therapy' }}\n      columns={columns}\n      description={displayText}\n      headerTitle={headerTitle}\n      dropdownText=\"Add\"\n    />\n  );\n};\n\nexport default ArtTherapyTabList;\n","import { Tab } from 'carbon-components-react';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport styles from '../program-management-summary.scss';\nimport EmptyState from '../../../components/empty-state/empty-state.component';\nimport EncounterList, {\n  EncounterListColumn,\n  getObsFromEncounter,\n} from '../../../components/encounter-list/encounter-list.component';\nimport {\n  causeOFDeath_UUID,\n  deathFormEncounterType_UUID,\n  deathSpecific_UUID,\n  hivDeathDate_UUID,\n} from '../../../constants';\n\ninterface DeathTabListProps {\n  patientUuid: string;\n}\n\nconst columnsLab: EncounterListColumn[] = [\n  {\n    key: 'deathDate',\n    header: 'Death Date',\n    getValue: encounter => {\n      return getObsFromEncounter(encounter, hivDeathDate_UUID, true);\n    },\n  },\n  {\n    key: 'deathCause',\n    header: 'Cause of Death',\n    getValue: encounter => {\n      return getObsFromEncounter(encounter, causeOFDeath_UUID);\n    },\n  },\n  {\n    key: 'specificDeathCause',\n    header: 'Specific cause of Death',\n    getValue: encounter => {\n      return getObsFromEncounter(encounter, deathSpecific_UUID);\n    },\n  },\n\n  {\n    key: 'actions',\n    header: 'Actions',\n    getValue: encounter => {\n      const baseActions = [\n        {\n          form: { name: 'death_form', package: 'hiv' },\n          encounterUuid: encounter.uuid,\n          intent: '*',\n          label: 'View Details',\n          mode: 'view',\n        },\n        {\n          form: { name: 'death_form', package: 'hiv' },\n          encounterUuid: encounter.uuid,\n          intent: '*',\n          label: 'Edit Death Form',\n          mode: 'edit',\n        },\n      ];\n      return baseActions;\n    },\n  },\n];\n\nconst DeathTabList: React.FC<DeathTabListProps> = ({ patientUuid }) => {\n  const { t } = useTranslation();\n  const headerTitle = t('DeathTabList', 'Death');\n  const displayText = t('DeathTabList', 'Death');\n  return (\n    <EncounterList\n      patientUuid={patientUuid}\n      encounterUuid={deathFormEncounterType_UUID}\n      form={{ package: 'hiv', name: 'death_form' }}\n      columns={columnsLab}\n      description={displayText}\n      headerTitle={headerTitle}\n      dropdownText=\"Add\"\n    />\n  );\n};\n\nexport default DeathTabList;\n","import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport EmptyState from '../../../components/empty-state/empty-state.component';\nimport EncounterList, {\n  EncounterListColumn,\n  findObs,\n  getObsFromEncounter,\n} from '../../../components/encounter-list/encounter-list.component';\nimport {\n  receivingFacility_UUID,\n  TransferOutDate_UUID,\n  transferOutEncounterType_UUID,\n  verified_UUID,\n  visitDate_UUID,\n} from '../../../constants';\n\ninterface TransferOutTabListProps {\n  patientUuid: string;\n}\n\nconst columnsLab: EncounterListColumn[] = [\n  {\n    key: 'visitDate',\n    header: 'Visit Date',\n    getValue: encounter => {\n      return getObsFromEncounter(encounter, visitDate_UUID, true);\n    },\n  },\n  {\n    key: 'reasonsForTesting',\n    header: 'Receiving Facility',\n    getValue: encounter => {\n      return getObsFromEncounter(encounter, receivingFacility_UUID);\n    },\n  },\n  {\n    key: 'tranferOutDate',\n    header: 'Transfer-Out Date',\n    getValue: encounter => {\n      return getObsFromEncounter(encounter, TransferOutDate_UUID, true);\n    },\n  },\n  {\n    key: 'verified',\n    header: 'Verified',\n    getValue: encounter => {\n      const obs = findObs(encounter, verified_UUID);\n      return obs?.value?.name?.name === 'FALSE' ? 'No' : obs?.value?.name?.name;\n    },\n  },\n\n  {\n    key: 'actions',\n    header: 'Actions',\n    getValue: encounter => {\n      const baseActions = [\n        {\n          form: { name: 'transfer_out', package: 'hiv' },\n          encounterUuid: encounter.uuid,\n          intent: '*',\n          label: 'View Details',\n          mode: 'view',\n        },\n        {\n          form: { name: 'transfer_out', package: 'hiv' },\n          encounterUuid: encounter.uuid,\n          intent: '*',\n          label: 'Edit Transfer Out Form',\n          mode: 'edit',\n        },\n      ];\n      return baseActions;\n    },\n  },\n];\n\nconst TransferOutTabList: React.FC<TransferOutTabListProps> = ({ patientUuid }) => {\n  const { t } = useTranslation();\n\n  const headerTitle = t('transferOut', 'Transfer Out');\n  const displayText = t('transferOut', 'Transfer Out');\n\n  return (\n    <EncounterList\n      patientUuid={patientUuid}\n      encounterUuid={transferOutEncounterType_UUID}\n      form={{ package: 'hiv', name: 'transfer_out' }}\n      columns={columnsLab}\n      description={displayText}\n      headerTitle={headerTitle}\n      dropdownText=\"Add\"\n    />\n  );\n};\n\nexport default TransferOutTabList;\n","import React from 'react';\nimport { Tabs, Tab } from 'carbon-components-react';\nimport styles from '../common.scss';\nimport HIVEnrolmentTabList from './tabs/hiv-enrolment-tab.component';\nimport ServiceDeliveryTabList from './tabs/service-delivery-tab.component';\nimport ArtTherapyTabList from './tabs/art-therapy-tab.component';\nimport DeathTabList from './tabs/death-tab.component';\nimport TransferOutTabList from './tabs/transfer-out-tab.component';\n\ninterface OverviewListProps {\n  patientUuid: string;\n}\n\nconst ProgramManagementSummary: React.FC<OverviewListProps> = ({ patientUuid }) => (\n  <div className={styles.tabContainer}>\n    <Tabs type=\"container\">\n      <Tab label=\"HIV Enrolment\">\n        <HIVEnrolmentTabList patientUuid={patientUuid} />\n      </Tab>\n      <Tab label=\"Service Delivery\" style={{ padding: 0 }}>\n        <ServiceDeliveryTabList patientUuid={patientUuid} />\n      </Tab>\n      <Tab label=\"ART Therapy\" style={{ padding: 0 }}>\n        <ArtTherapyTabList patientUuid={patientUuid} />\n      </Tab>\n      <Tab label=\"Death\" style={{ padding: 0 }}>\n        <DeathTabList patientUuid={patientUuid} />\n      </Tab>\n      <Tab label=\"Transfer - Out\" style={{ padding: 0 }}>\n        <TransferOutTabList patientUuid={patientUuid} />\n      </Tab>\n    </Tabs>\n  </div>\n);\n\nexport default ProgramManagementSummary;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.openmrs-ohri__common__productiveHeading01___bv-gs{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.openmrs-ohri__common__productiveHeading02___tnK2j{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.openmrs-ohri__common__productiveHeading03___2QBGb{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.openmrs-ohri__common__productiveHeading04___3v3sF{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.openmrs-ohri__common__productiveHeading05___1WcpW{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}.openmrs-ohri__common__productiveHeading06___1Okm5{font-size:2rem;font-weight:300;line-height:1.199;letter-spacing:0}.openmrs-ohri__common__bodyShort01___1k59w{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.openmrs-ohri__common__helperText01___8sMfk{font-size:.75rem;line-height:1.34;letter-spacing:.32px}.openmrs-ohri__common__bodyShort02___2XmkL{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.openmrs-ohri__common__bodyLong01___2OmNT{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.openmrs-ohri__common__bodyLong02___3kAwu{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}.openmrs-ohri__common__label01___39RGk{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.openmrs-ohri__common__text01___1Ka9U{color:#161616}.openmrs-ohri__common__text02___2SXOl{color:#525252}aside{background-color:#fff !important}div[class*=-esm-login__styles__center]>img{width:140px}.tab-12rem>button{width:12rem !important}.tab-14rem>button{width:14rem !important}.tab-16rem>button{width:16rem !important}.openmrs-ohri__common__widgetContainer___25Ts7{background-color:#fff}.openmrs-ohri__common__widgetHeaderContainer___U-aiE{display:flex;justify-content:space-between;align-items:center;padding:.75rem 0 .75rem 1rem}.openmrs-ohri__common__widgetHeaderContainer___U-aiE>h4:after{content:\\\"\\\";display:block;width:2rem;padding-top:.188rem;border-bottom:.375rem solid #1a3054}.openmrs-ohri__common__toggleButtons___2CgRv{width:fit-content;margin:0 .5rem}.openmrs-ohri__common__tabContainer___3ZhSP div[role=tabpanel]{padding:0 !important}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"productiveHeading01\": \"openmrs-ohri__common__productiveHeading01___bv-gs\",\n\t\"productiveHeading02\": \"openmrs-ohri__common__productiveHeading02___tnK2j\",\n\t\"productiveHeading03\": \"openmrs-ohri__common__productiveHeading03___2QBGb\",\n\t\"productiveHeading04\": \"openmrs-ohri__common__productiveHeading04___3v3sF\",\n\t\"productiveHeading05\": \"openmrs-ohri__common__productiveHeading05___1WcpW\",\n\t\"productiveHeading06\": \"openmrs-ohri__common__productiveHeading06___1Okm5\",\n\t\"bodyShort01\": \"openmrs-ohri__common__bodyShort01___1k59w\",\n\t\"helperText01\": \"openmrs-ohri__common__helperText01___8sMfk\",\n\t\"bodyShort02\": \"openmrs-ohri__common__bodyShort02___2XmkL\",\n\t\"bodyLong01\": \"openmrs-ohri__common__bodyLong01___2OmNT\",\n\t\"bodyLong02\": \"openmrs-ohri__common__bodyLong02___3kAwu\",\n\t\"label01\": \"openmrs-ohri__common__label01___39RGk\",\n\t\"text01\": \"openmrs-ohri__common__text01___1Ka9U\",\n\t\"text02\": \"openmrs-ohri__common__text02___2SXOl\",\n\t\"widgetContainer\": \"openmrs-ohri__common__widgetContainer___25Ts7\",\n\t\"widgetHeaderContainer\": \"openmrs-ohri__common__widgetHeaderContainer___U-aiE\",\n\t\"toggleButtons\": \"openmrs-ohri__common__toggleButtons___2CgRv\",\n\t\"tabContainer\": \"openmrs-ohri__common__tabContainer___3ZhSP\"\n};\nmodule.exports = exports;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","columns","key","header","getValue","encounter","getObsFromEncounter","re_enrolmentDateConcept","dateOfServiceEnrollmentConcept","patientTypeEnrollmentConcept","dateOfHIVDiagnosisConcept","entryPointConcept","studyPopulationTypeConcept","form","name","package","encounterUuid","uuid","intent","label","mode","patientUuid","useTranslation","headerTitle","t","displayText","careAndTreatmentEncounterType","description","dropdownText","artTherapyDateTime_UUID","switchDateUUID","substitutionDateUUID","artStopDateUUID","getLatestARTDateConcept","therapyPlanConcept","regimenConcept","regimenLine_UUID","getARTReasonConcept","art_Therapy_EncounterUUID","columnsLab","hivDeathDate_UUID","causeOFDeath_UUID","deathSpecific_UUID","deathFormEncounterType_UUID","visitDate_UUID","receivingFacility_UUID","TransferOutDate_UUID","obs","findObs","verified_UUID","value","transferOutEncounterType_UUID","className","styles","Tabs","type","Tab","style","padding","exports","___CSS_LOADER_API_IMPORT___","push","module","id","locals"],"sourceRoot":""}