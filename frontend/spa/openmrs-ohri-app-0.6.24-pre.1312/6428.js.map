{"version":3,"file":"6428.js","mappings":"2TAaA,MAAMA,EAAkB,eAGjB,SAASC,EAAeC,GAC7B,OAAOC,EAAAA,EAAAA,cAAc,kCAAiCD,0BAGjD,SAASE,EAAiBC,EAAiB,EAAGC,EAAmB,IACtE,OAAOH,EAAAA,EAAAA,cAAc,wCAAuCE,YAAiBC,KAGxE,SAASC,IACd,IAAIC,EAAOC,GAAAA,GAASC,OAAO,cAC3B,OAAOP,EAAAA,EAAAA,cAAc,+BAA8BK,KAAQG,MAAK,EAAGC,KAAAA,KAC7DA,EAAKC,OAAOC,OACPC,EAAgCH,GAElC,KAIJ,SAASI,EACdC,EACAC,EACAC,GAEA,IAAIC,EAAUX,GAAAA,GAASC,OAAO,cAC1BW,EAAYZ,GAAAA,GACba,SAASH,EAAY,QACrBT,OAAO,cAEV,OAAOP,EAAAA,EAAAA,cACJ,iCAAgCc,IAAcC,EAAgB,kBAAiBA,IAAiB,KAC/FC,EAAc,mBAAkBE,oBAA4BD,IAAY,MAE1ET,MAAK,EAAGC,KAAAA,KACJA,EAAKC,OAAOC,OACPC,EAAgCH,GAElC,KAIX,SAASG,EAAgCH,GACvC,IAAIW,EAAcX,EAAKC,MAAMW,KAAIC,GACxBA,EAAIC,SAASC,QAAQC,YAI9B,OAFAL,EAAc,IAAIM,IAAI,IAAIN,IAC1BA,EAAcO,MAAMC,KAAKR,GAClBS,QAAQC,IACbV,EAAYC,KAAIU,IACP/B,EAAAA,EAAAA,cAlDa,gBAkDoB+B,MAsBvCC,eAAeC,EAAUC,EAAoBC,GAClD,MAAM,KAAE1B,SAAeT,EAAAA,EAAAA,cACF,8BAAiBkC,IAAaC,EAAW,MAAKA,IAAa,MAGhF,OADA1B,EAAK2B,cAAgB3B,EAAK2B,cAAcC,QAAOC,IAAWA,EAAOC,SAC1D9B,EAGFuB,eAAeQ,EAAmBN,EAAoBO,GAC3D,MAAMC,EAASD,EAAcA,EAAYE,KAAK,KAAO,GAC/CC,EAAMF,EAAU,wBAAuBR,KAAcQ,IAAY,wBAAuBR,KACxF,KAAEzB,SAAeT,EAAAA,EAAAA,cAAaH,EAAkB+C,GACtD,OAAOnC,EAGFuB,eAAea,EAA0BX,EAAoBO,GAClE,MAAMC,EAASD,EAAcA,EAAYE,KAAK,KAAO,GAC/CC,EAAMF,EAAU,wBAAuBR,KAAcQ,IAAY,wBAAuBR,KACxF,KAAEzB,SAAeT,EAAAA,EAAAA,cAAaH,EAAkB+C,GACtD,OAAOf,QAAQC,IACbrB,EAAKqC,QAAQzB,KAAIiB,IACRtC,EAAAA,EAAAA,cAAgC,uBAAUsC,EAAOvC,kBAKvDiC,eAAee,EAAWC,GAC/B,MACEvC,MAAM,QAAEwC,EAAF,MAAWC,UACTlD,EAAAA,EAAAA,cACRH,0DAC+CmD,EAAkB,eAAcA,IAAmB,KAEpG,GAAIE,EACF,MAAMA,EAER,OAAOD,EAAQZ,QAAOc,IAAWA,EAAOZ,SAGnC,SAASa,EAAmBC,EAAqBnB,GACtD,OAAOlC,EAAAA,EAAAA,cAAc,mCAAyC,CAC5DsD,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAM,CACJC,QAASJ,EACTF,OAAQjB,EACRhB,UAAW,IAAIwC,QAKd,SAASC,EAAsBC,GACpC,OAAO5D,EAAAA,EAAAA,cAAc,oCAAyC4D,IAAkB,CAAEN,OAAQ,WAGrFtB,eAAe6B,EAA0BR,GAC9C,MACE5C,MAAM,QAAEwC,EAAF,MAAWC,UACTlD,EAAAA,EAAAA,cAAc,4CAAiDqD,YACzE,GAAIH,EACF,MAAMA,EAER,OAAOD,EAAQZ,QAAOyB,IAAeA,EAAWvB,SAG3C,SAASwB,EAA4BC,GAC1C,OAAOhE,EAAAA,EAAAA,cACJ,iCAAgCiE,EAAAA,oBAAqCC,EAAAA,cAAwCF,0BAC9GxD,MAAK,EAAGC,KAAAA,KACJA,EAAKC,OAAOC,OACPF,EAAKC,MAAM,GAAGa,SAAS4C,qBAAqBC,OAAO,GAAGC,QAExD,KAcJ,SAASC,EAAuCN,GACrD,OAAOhE,EAAAA,EAAAA,cACJ,iCAAgCuE,EAAAA,oBAA2CA,EAAAA,cAAqCP,0BACjHxD,MAAK,EAAGC,KAAAA,KACJA,EAAKC,OAAOC,OACPF,EAAKC,MAAM,GAAGa,SAAS4C,qBAAqBC,OAAO,GAAGC,QAExD,KAKJ,SAASG,EAA0BnB,EAAqBoB,GAC7D,MAAMC,EAAS,iBAAgBD,aAAyBpB,IACxD,OAAOrD,EAAAA,EAAAA,cAAc,yBAAwB0E,OAAWC,EAAAA,MAA2BnE,MAAK,EAAGC,KAAAA,KACrFA,EAAKwC,QAAQtC,OACRF,EAAKwC,QAAQxC,EAAKwC,QAAQtC,OAAS,GAGrC,OAIJ,SAASiE,IACd,OAAO5E,EAAAA,EAAAA,cAAc,oCAAmC6E,EAAAA,MAA2BrE,MAAK,EAAGC,KAAAA,MACzF,GAAIA,EAAKqC,SAASnC,OAAQ,CACxB,IAAIS,EAAcX,EAAKqC,QAAQzB,KAAIiB,GAC1BA,EAAOvC,OAIhB,OAFAqB,EAAc,IAAIM,IAAI,IAAIN,IAC1BA,EAAcO,MAAMC,KAAKR,GAClBS,QAAQC,IACbV,EAAYC,KAAIU,IACP/B,EAAAA,EAAAA,cAAa8E,wBAAiC/C,MAI3D,MAAO,MAIJ,SAASgD,EAAuBC,GACrC,OAAOhF,EAAAA,EAAAA,cAAc,uBAAsBgF,kBAA4BxE,MAAK,EAAGC,KAAAA,MAC7E,GAAIA,EAAKwC,QAAQtC,OAEf,OADgBF,EAAKwC,QAAQxC,EAAKwC,QAAQtC,OAAS,GACpC0D,a,4NChNjBY,EAAU,GAEdA,EAAQC,kBAAoB,IAC5BD,EAAQE,cAAgB,IAElBF,EAAQG,OAAS,SAAc,KAAM,QAE3CH,EAAQI,OAAS,IACjBJ,EAAQK,mBAAqB,IAEhB,IAAI,IAASL,GAKnB,QAAe,KAAW,WAAiB,gBAAiBM,EChBnE,EAN8B,IAC5B,yBAAKC,UAAWC,EAAAA,kBACd,kBAACC,EAAA,EAAD,CAASC,YAAY,2BAA2BC,aAAa,EAAOC,OAAK,M,4NCKzEZ,EAAU,GAEdA,EAAQC,kBAAoB,IAC5BD,EAAQE,cAAgB,IAElBF,EAAQG,OAAS,SAAc,KAAM,QAE3CH,EAAQI,OAAS,IACjBJ,EAAQK,mBAAqB,IAEhB,IAAI,IAASL,GAKnB,QAAe,KAAW,WAAiB,gBAAiBM,ECtBtDO,EAAuE,EAClFrC,QAAAA,EACAsC,oBAAAA,KAGE,yBAAKP,UAAWC,EAAAA,wBACd,kBAAC,EAAAO,cAAD,CACEC,kBAAkB,sBAClBC,MAAO,CACLzC,QAAAA,EACAJ,YAAaI,EAAQ0C,GACrBJ,oBAAAA,O,wDCfH,MACMK,EAAc,uCACdC,EAAe,wC,+NCSxBpB,EAAU,GAEdA,EAAQC,kBAAoB,IAC5BD,EAAQE,cAAgB,IAElBF,EAAQG,OAAS,SAAc,KAAM,QAE3CH,EAAQI,OAAS,IACjBJ,EAAQK,mBAAqB,IAEhB,IAAI,IAASL,GAKnB,QAAe,KAAW,WAAiB,gBAAiBM,E,6ECf/D,EAAU,GAEd,EAAQL,kBAAoB,IAC5B,EAAQC,cAAgB,IAElB,EAAQC,OAAS,SAAc,KAAM,QAE3C,EAAQC,OAAS,IACjB,EAAQC,mBAAqB,IAEhB,IAAI,IAAS,GAKnB,QAAe,KAAW,WAAiB,gBAAiBC,EC1B5D,SAASe,EAAeC,GAC7BC,SAASC,eAAeF,GAAQD,eAAe,CAC7CI,SAAU,SACVC,MAAO,QACPC,OAAQ,U,qCC2GZ,QAzGA,UAAyB,gBACvBC,EADuB,aAEvBC,EAFuB,KAGvBC,EAHuB,SAIvBC,EAJuB,YAKvBC,EALuB,OAMvBC,EANuB,UAOvBC,EAPuB,oBAQvBC,EARuB,YASvBC,IAEA,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAASV,IAE7CW,EAAAA,EAAAA,YAAU,KACJJ,GAAe,IAAIR,GAAiBa,MAAK,EAAGC,MAAAA,EAAOC,SAAAA,KAAeD,IAAUN,IAAgBO,KAC9FtB,EAAeuB,EAASR,MAEzB,CAACA,IAEJ,MAAMQ,EAAWC,GACRA,EAAMC,QAAQ,MAAO,IAGxBC,GAAoBC,EAAAA,EAAAA,UAAQ,IAE9BC,OAAOC,KAAKjB,GACT7E,QAAO+F,GAAOA,EAAIC,SAAS,kBAE3BhH,KAAI+G,GAAOA,EAAIE,MAAM,gBAAgB,KAErCjG,QAAO+F,IAAOG,EAAAA,EAAAA,IAAQrB,EAAOkB,MAE7B/G,KAAI+G,GAAQ,GAAEA,mBAElB,CAAClB,IAQEsB,GAAuBC,EAAAA,EAAAA,cAC3BC,IACMA,EACFV,EAAkBW,SAAQC,IACxB1B,EAAO0B,IAAS,KAGlBZ,EAAkBW,SAAQC,IACxB1B,EAAO0B,IAAS,KAGpBzB,EAAUD,KAEZ,CAACc,IAEH,OACE,yBAAKxC,UAAWC,EAAAA,SACb,IAAIoB,GAAiBxF,KAAI,CAACwH,EAAMC,KAE5BD,EAAKjB,UACJ,yBACE,cAAY,OACZpC,UAAWqC,EAASgB,EAAKlB,SAAWb,EAAerB,EAAAA,qBAA8BA,EAAAA,eACjF2C,IAAKU,EACLC,QAAS,IA9BDC,CAAAA,IAClB,MAAMC,EAAWD,EAASjB,QAAQ,MAAO,IACzCR,EAAcyB,GACd1C,EAAe2C,IA2BUC,CAAYL,EAAKlB,QAEhC,yBAAKnC,UAAWC,EAAAA,oBAA4BoD,EAAKlB,UAKzD,wBAAInC,UAAWC,EAAAA,wBACf,yBAAKD,UAAWC,EAAAA,gBACb2B,GACC,yBAAK+B,MAAO,CAAEC,aAAc,UAC1B,kBAACC,EAAA,EAAD,CACEC,UAAU,GACVnD,GAAG,mBACHoD,OAAO,gBACPC,OAAO,SACPC,SAAUjB,KAIP,QAARzB,GACC,kBAAC2C,EAAA,EAAD,CAAQP,MAAO,CAAEC,aAAc,WAAYO,MAAO,SAAWC,KAAK,UAAlE,QAIF,kBAACF,EAAA,EAAD,CACEP,MAAO,CAAEQ,MAAO,SAChBE,KAAK,WACLd,QAAS,KACP/B,GAAYA,IACZC,GAAeA,MAER,QAARF,EAAiB,QAAU,a,yBC/E/B,MAAM+C,EAAkBC,IAAAA,mBAAsDxE,G,cCN9E,SAASyE,EAAWhF,EAAqBiF,GAC9C,OAAOC,EAAAA,EAAAA,wBAAwB,uBAAsBlF,OAAiBiF,KAAKE,MAAK9I,EAAAA,EAAAA,IAAI+I,GAAYA,EAAQ,Q,8CCTtG,EAAU,GAEd,EAAQlF,kBAAoB,IAC5B,EAAQC,cAAgB,IAElB,EAAQC,OAAS,SAAc,KAAM,QAE3C,EAAQC,OAAS,IACjB,EAAQC,mBAAqB,IAEhB,IAAI,IAAS,GAKnB,QAAe,KAAW,WAAiB,gBAAiBC,E,eCjB5D,MAAM8E,EAER,EAAGC,SAAAA,MACN,MAAO1B,EAAO2B,IAAQC,EAAAA,EAAAA,IAAU,GAAEF,EAASnE,mBACrC,cAAEsE,GAAkBV,IAAAA,WAAiBD,IACpCY,EAAuBC,IAA4BnD,EAAAA,EAAAA,WAAS,IAEnEC,EAAAA,EAAAA,YAAU,KACR,GAAImB,EAAMd,MAAO,CACf6C,GAAyB,GACzBL,EAAQ,WAAiB,CACvBM,aAAa,EACbC,OAAQ,IAEV,IAAIC,EAAa,KACjB,OAAQR,EAASS,gBAAgBC,WAC/B,IAAK,OACHF,EAAa,GACb,MACF,IAAK,WACHA,EAAa,GAEjBL,EAAcH,EAASnE,GAAI2E,GAC3BR,EAASxC,MAAQ,UACR4C,IAA0BJ,EAASxC,QAC5CwC,EAAQ,WAAiB,CACvBM,aAAa,EACbC,OAAQI,EAAAA,GAAAA,SAA4BX,EAAU,UAGjD,CAAC1B,EAAMd,SAEVL,EAAAA,EAAAA,YAAU,KACJ6C,EAASxC,OACX2C,EAAe,GAAEH,EAASnE,kBAAkB,KAE7C,CAACmE,EAASxC,QAEb,MAAMoD,GAAiBzC,EAAAA,EAAAA,cAAYX,IACjC2C,EAAe,GAAEH,EAASnE,iBAAkB2B,KAC3C,IAEH,OACGwC,EAAS1C,YACTuD,EAAAA,EAAAA,GAAOb,EAASc,WACf,yBAAK5F,UAAWC,EAAAA,aACd,kBAAC4F,EAAA,EAAD,CACElF,GAAK,GAAEmE,EAASnE,gBAChBmD,UAAU,cACVxB,MAAM,cACNwD,SAAUJ,EACVK,QAAS3C,EAAMd,MACf0D,SAAUlB,EAASkB,a,wBClDzB,EAAU,GAEd,EAAQtG,kBAAoB,IAC5B,EAAQC,cAAgB,IAElB,EAAQC,OAAS,SAAc,KAAM,QAE3C,EAAQC,OAAS,IACjB,EAAQC,mBAAqB,IAEhB,IAAI,IAAS,GAKnB,QAAe,KAAW,WAAiB,gBAAiBC,ECnBtDkG,EAAmBnB,GAET,OAAjBA,EAASV,MAAkBU,EAASS,gBAAgBW,QAMjDC,GAAkBrB,EAASS,gBAAgBC,YAJhDV,EAASkB,UAAW,EAEbG,GAAkB,SAKhBC,EAAsBtB,IAE/Ba,EAAAA,EAAAA,GAAOb,EAASM,cACsB,UAAtCN,EAASS,gBAAgBC,WACa,sBAAtCV,EAASS,gBAAgBC,UA8B7B,GA3BwB,EAAGa,OAAAA,EAAQC,cAAAA,EAAeC,aAAAA,EAAcC,UAAAA,KAE5D,yBAAKxG,UAAWC,EAAAA,kBACboG,EAAOxK,KAAI,CAACyG,EAAOgB,KAClB,MAAMmD,EAAYR,EAAgB3D,GAClC,GAAImE,EAAW,CACb,MAAMC,EAAanC,IAAAA,cAAoBkC,EAAW,CAChD3B,SAAUxC,EACVwD,SAAUQ,EACV1D,IAAKU,EACLqD,QAASC,GAAWtE,EAAM8B,QAG5B,OAAOgC,EAAoB9D,IAA6C,SAAnCA,EAAMiD,gBAAgBC,UACzD,yBAAKxF,UAAWC,EAAAA,mBACbyG,EACD,kBAAC7B,EAAD,CAAiBC,SAAUxC,KAG7B,yBAAKtC,UAAWC,EAAAA,mBAA2ByG,QCjC1CG,GAAwC,EAAG/B,SAAAA,EAAUgB,SAAAA,EAAUgB,cAAAA,MAC1E,MAAMC,EAAejC,EAASkC,UAC3BnK,QAAOoK,IAAgBA,EAAY7E,WACnCvG,KAAI,CAACoL,EAAa3D,KACjB,MAAMmD,EAAYR,EAAgBgB,GAClC,GAAIR,EAAW,CACb,MAAMC,EAAanC,IAAAA,cAAoBkC,EAAW,CAChD3B,SAAUmC,EACVnB,SAAUA,EACVlD,IAAKU,EACLqD,QAASC,GAAWK,EAAY7C,QAElC,OACE,kBAAC,KAAD,CAAQpE,UAAWC,EAAAA,gBAChBmG,EAAoBa,GACnB,oCACGP,EACD,kBAAC7B,EAAD,CAAiBC,SAAUmC,KAG7BP,OASZ,OAHIK,GACFA,EAAaG,KAAKJ,GAEb,kBAAC,KAAD,KAAMC,I,2EChCR,SAASI,GACdC,EACAC,EACAC,GAEA,MAAMC,EAAeF,EAAQL,UAAUnL,KAAI2L,GAAKA,EAAE7G,KAClD2G,EACGzK,QAAOuG,GAASmE,EAAaE,SAASrE,EAAMzC,MAC5CwC,SAAQC,IACPA,EAAMsE,eAAiBN,KAItB,SAASO,GACdvE,EACAwE,EACAjB,GAEA,MAAuC,UAAnCvD,EAAMmC,gBAAgBC,UACjBpC,EAAMmC,gBAAgBsC,cAAgBjH,EAAAA,GCvBrC,EAACwC,EAAsBd,IACZ,CAAC,QAAS,WAAY,SAAU,oBACpCmF,SAASrE,EAAMmC,gBAAgBC,aAEvCpC,EAAMmC,gBAAgBuC,SAAS5F,MAAK6F,GAAUA,EAAO7B,SAAW5D,IAC5D,CAAC,CAAE0F,QAAS,uBAAwBC,WAAY,0CAGpB,QAAnC7E,EAAMmC,gBAAgBC,WAEnB1K,IAAAA,CAAOwH,EAAOxH,KAAAA,UAAiB,GAAMoN,UAIL,UAAnC9E,EAAMmC,gBAAgBC,WACpB2C,MAAM7F,GACD,CAAC,CAAE0F,QAAS,uBAAwBC,WAAa,8BAA6B3F,OAGlF,GARI,CAAC,CAAE0F,QAAS,uBAAwBC,WAAa,wBAAuB3F,ODehF8F,CAAwChF,EAAOA,EAAMmC,gBAAgBsC,cAAc1M,YAAxF,GAEEwL,EAAQ0B,sBAAsBjF,EAAOA,EAAMmC,gBAAgBsC,aAAcD,GAClExE,EAAMmC,gBAAgBsC,cAI1B,SAASS,GAAsB9I,GACpC,OAAOD,EAAAA,GAAAA,IAAuBC,GAAaxE,MAAKuN,GACtC,iBAAgBA,cAAwB/I,MAI7C,SAASgJ,GACdC,EACAC,EACAC,GAEA,MAAqB,aAAjBF,EACwB,aAAnBE,GAAgD,WAAdD,EAEnB,eAAjBD,E,gBE/CF,MAAMG,GAA+D,EAAGtG,MAAAA,EAAOuG,YAAAA,KAElF,yBAAK7I,UAAWC,EAAAA,WACd,kBAAC6I,GAAA,EAAD,CAAmBC,UAAU,SAASC,SAAU,EAAGH,YAAaA,GAC9D,0BAAM7I,UAAU,YAAY2D,MAAO,CAAEsF,WAAY,WAC9C3G,KCPE4G,GAAiB,IAE1B,6BACE,0BAAMvF,MAAO,CAAEwF,SAAU,UAAWC,MAAO,YAA3C,YAKOC,GAAmB,EAAG/G,MAAAA,KAC7BnG,MAAMmN,QAAQhH,GACT,kBAACiH,GAAD,CAAiBC,WAAYlH,IAGpC,6BACE,0BAAMqB,MAAO,CAAEwF,SAAU,YAAc7G,IAKvCiH,GAAkB,EAAGC,WAAAA,KAEvB,4BACGA,EAAW3N,KAAI4N,GACd,wBAAI9F,MAAO,CAAEwF,SAAU,UAAWvF,aAAc,UAAY6F,M,kDCdhE,GAAU,GAEd,GAAQ/J,kBAAoB,IAC5B,GAAQC,cAAgB,IAElB,GAAQC,OAAS,SAAc,KAAM,QAE3C,GAAQC,OAAS,IACjB,GAAQC,mBAAqB,IAEhB,IAAI,KAAS,IAKnB,SAAe,MAAW,YAAiB,iBAAiBC,ECZtD2J,GAAwD,EAAGvH,MAAAA,EAAOoG,YAAAA,EAAajG,MAAAA,EAAOqH,SAAAA,KACjG,yBAAK3J,UAAWC,GAAAA,eACb0J,GACC,yBAAK3J,UAAW4J,EAAAA,WACd,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAQC,GAAI,EAAGC,GAAI,GACjB,kBAACpB,GAAD,CAAWtG,MAAOH,EAAO0G,YAAaN,KAExC,kBAACuB,GAAA,EAAD,CAAQ9J,UAAWC,GAAAA,gBACf8C,EAAAA,EAAAA,IAAQT,GAA8C,kBAAC4G,GAAD,MAArC,kBAACG,GAAD,CAAkB/G,MAAOA,QAKlDqH,GACA,yBAAK3J,UAAW4J,EAAAA,WACd,kBAAChB,GAAD,CAAWtG,MAAOH,EAAO0G,YAAaN,IACtC,yBAAKvI,UAAWC,GAAAA,eAAuBqC,EAAQ,kBAAC+G,GAAD,CAAkB/G,MAAOA,IAAY,kBAAC4G,GAAD,S,q0BCdrF,MCRMe,GAA0C,CACrD5B,sBAAuB,CAACjF,EAAsBd,EAAYsF,KACxD,GAAuC,YAAnCxE,EAAMmC,gBAAgBC,UACxB,OAAO0E,GAAsB9G,EAAOd,EAAOsF,GAE7C,GAAuC,UAAnCxE,EAAMmC,gBAAgBC,UACxB,OAAO2E,GAAa7H,EAAOsF,EAASxE,GAEtC,GAAIA,EAAMd,MACmB,QAAvBsF,EAAQwC,aAA0B9H,EAE1BA,GAG6B,QAAnCc,EAAMmC,gBAAgBC,UACxBpC,EAAMd,MAAMA,MAAQxH,IAAAA,CAAOwH,GAAOvH,OAAO,oBAEzCqI,EAAMd,MAAMA,MAAQA,EAEtBc,EAAMd,MAAMvF,QAAS,GAPrBqG,EAAMd,WAAQvC,EAFdqD,EAAMd,MAAMvF,QAAS,MAWlB,CACL,GAAuC,QAAnCqG,EAAMmC,gBAAgBC,UAExB,OADApC,EAAMd,MAAQ6H,GAAarP,IAAAA,CAAOwH,GAAOvH,OAAO,oBAAqB6M,EAASxE,GACvEA,EAAMd,MAEfc,EAAMd,MAAQ6H,GAAa7H,EAAOsF,EAASxE,GAE7C,OAAOA,EAAMd,OAEf+H,gBAAiB,CAACC,EAAgBlH,EAAsBmH,KACtD,IAAIC,EAAMF,EAAUE,IAAItI,MAAKuI,GAAKA,EAAEvE,QAAQ3L,MAAQ6I,EAAMmC,gBAAgBW,UAC1E,MAAMV,EAAYpC,EAAMmC,gBAAgBC,UACxC,IAAIkF,EAAc,KACdC,EAAW,KAIf,OAAIH,GAAOpH,EAAK,QACP,KAEJoH,GAAOpH,EAAK,UACfsH,EAAcH,EAAcrI,MAAK0I,GAAKA,EAAEjK,IAAMyC,EAAK,UACnDuH,EAAWL,EAAUE,IAAItI,MAAKuI,GAAKA,EAAEvE,QAAQ3L,MAAQmQ,EAAYnF,gBAAgBW,UAC7EyE,IACFD,EAAYpI,MAAQqI,EACpBH,EAAMG,EAASE,cAAc3I,MAAKuI,GAAKA,EAAEvE,QAAQ3L,MAAQ6I,EAAMmC,gBAAgBW,YAG/EsE,GACFpH,EAAMd,MAAQwI,KAAKC,MAAMD,KAAKE,UAAUR,IACvB,SAAbhF,GAAqC,oBAAbA,GAC1BhB,EAAWpB,EAAMmC,gBAAgBW,QAAS,sDAAsD+E,WAC9FC,IAC8B,WAAxBA,EAAOC,SAASC,OAClBhI,EAAMd,MAAMA,MAAQkI,EAAIlI,MAAM/H,SAKd,iBAAbiQ,EAAIlI,OAAyC,iBAAbkI,EAAIlI,MACN,QAAnCc,EAAMmC,gBAAgBC,WACxBpC,EAAMd,MAAMA,MAAQxH,IAAAA,CAAOsI,EAAMd,MAAMA,OAAOvH,OAAO,oBAC9CD,IAAAA,CAAO0P,EAAIlI,OAAO+I,UAEpBb,EAAIlI,MAE0B,YAAnCc,EAAMmC,gBAAgBC,WACxBpC,EAAMd,MAAQgI,EAAUE,IAAI3N,QAAO4N,GAAKA,EAAEvE,QAAQ3L,MAAQ6I,EAAMmC,gBAAgBW,WAC3E9C,EAAMd,MAAMnH,QAAUiI,EAAK,UAC9BA,EAAMd,MAAQqI,EAASE,aAAahO,QAAO4N,GAAKA,EAAEvE,QAAQ3L,MAAQ6I,EAAMmC,gBAAgBW,WAEnF9C,EAAMd,MAAMzG,KAAI4O,GAAKA,EAAEnI,MAAM/H,QAEC,UAAnC6I,EAAMmC,gBAAgBC,WACxBpC,EAAMd,MAAMA,MAAQkI,EAAIlI,MAAM/H,KACvBiQ,EAAIlI,OAAS1B,EAAAA,IAEL,eAAb4E,EACKpC,EAAK,WAEPoH,EAAIlI,OAAO/H,MAEb,KAET+Q,gBAAiB,CAAClI,EAAsBd,KACtC,MAAMkD,EAAYpC,EAAMmC,gBAAgBC,UACxC,IAAKpC,EAAMd,MACT,OAAO,KAET,GAAuC,YAAnCc,EAAMmC,gBAAgBC,UACxB,OAAOlD,EAAMzG,KACX0P,GAAgBnI,EAAMmC,gBAAgBuC,QAAQ5F,MAAKsJ,GAAUA,EAAOtF,SAAWqF,KAAepJ,QAGlG,GAAiB,oBAAbqD,GAAgD,UAAbA,GAAsC,UAAbA,EAAuB,CACrF,MAAMU,EAAuC,iBAAtB9C,EAAMd,MAAMA,MAAqBc,EAAMd,MAAMA,MAAM/H,KAAO6I,EAAMd,MAAMA,MAC7F,OAAOc,EAAMmC,gBAAgBuC,QAAQ5F,MAAKsJ,GAAUA,EAAOtF,SAAWA,KAAU/D,MAElF,MAAiB,SAAbqD,EACKpC,EAAMmC,gBAAgBuC,QAAQ5F,MAAKsJ,GAAUA,EAAOtF,SAAW5D,KAAQH,MAEzEG,IA0BL6H,GAAe,CAAC7H,EAAYsF,EAA2BxE,KACpD,CACLqI,OAAQ7D,EAAQ3J,QAAQ0C,GACxB+K,YAAa9D,EAAQ/M,KACrBqL,QAAS9C,EAAMmC,gBAAgBW,QAC/ByF,SAAU/D,EAAQ+D,SAClBC,MAAO,KACPf,aAAc,GACd9N,QAAQ,EAGRuF,MAAOA,IAIL4H,GAAwB,CAAC9G,EAAsB1B,EAAuBkG,KACrExE,EAAMd,QACTc,EAAMd,MAAQ,IAEhBZ,EAAOyB,SAAQb,IACb,MAAMkI,EAAMpH,EAAMd,MAAMJ,MAAKuI,GACL,iBAAXA,EAAEnI,MACJmI,EAAEnI,OAASA,EAEbmI,EAAEnI,MAAM/H,MAAQ+H,IAErBkI,GAAOA,EAAIzN,OACbyN,EAAIzN,QAAS,EAEbyN,GAAOpH,EAAMd,MAAM4E,KAAKiD,GAAa7H,EAAOsF,EAASxE,OAKzDA,EAAMmC,gBAAgBuC,QACnBjL,QAAOgP,IAAQnK,EAAOoK,MAAKrH,GAAKA,GAAKoH,EAAI3F,YACzC/C,SAAQ0I,IACP,MAAME,EAAe3I,EAAMd,MAAMzF,QAAO4N,GAChB,iBAAXA,EAAEnI,MACJmI,EAAEnI,OAASuJ,EAAI3F,QAEjBuE,EAAEnI,MAAM/H,MAAQsR,EAAI3F,UAExB6F,EAAa5Q,QAGlB4Q,EAAa5I,SAAQqH,IACQ,QAAvB5C,EAAQwC,aAAyBI,EAAIjQ,KACvCiQ,EAAIzN,QAAS,EAEbqG,EAAMd,MAAQc,EAAMd,MAAMzF,QAAO4N,GAAKA,EAAEnI,QAAUuJ,EAAI3F,gBAIvD9C,EAAMd,O,gBC3Lf,MCAa0J,GAAoC,CAC/CC,SAAU,CAAC7I,EAAsBd,EAAa4J,KAC5C,MAAMC,EAAM,IAAIjO,KACVmH,EAAU/C,EAAoD,GAA5CmD,EAAAA,GAAAA,SAA4BrC,EAAOd,GAC3D,OAAI+C,EAAOlK,OACFkK,EAEL/C,KAAUqD,EAAAA,EAAAA,GAAOuG,GAAQE,mBACpB9J,EAAM+J,UAAYF,EAAIE,UACzB,CAAC,CAAErE,QAAS,gBAAiBC,WAAY,6BAGxC,K,gBCLJ,MAAMqE,GAA4C,CACvDL,SAAU,SAAS7I,EAAsBd,EAAY4J,GAEnD,OADAA,EAAOK,kBAAkBC,QAAUlK,EAC/B4J,EAAOO,sBACFC,EAAAA,GAAAA,GACLR,EAAOO,oBACP,CAAEnK,MAAOc,EAAOgB,KAAM,SACtB8H,EAAO7F,OACP,IAAK6F,EAAOxK,OAAQ,CAAC0B,EAAMzC,IAAK2B,GAChC4J,EAAOK,mBAEL,CAAC,CAAEvE,QAAS,gBAAiBC,WAAYiE,EAAOS,SAAW,kBAG1D,KCLLC,GAA2C,CAC/C,CACEjM,GAAI,WACJ8F,UCZ2C,EAAG3B,SAAAA,EAAUgB,SAAAA,EAAUa,QAAAA,MACpE,MAAOvD,EAAO2B,IAAQC,EAAAA,EAAAA,IAASF,EAASnE,KAClC,cAAEsE,EAAF,iBAAiB4H,EAAjB,WAAmCnE,EAAnC,gBAA+CC,GAAoBpE,IAAAA,WAAiBD,IACnFwI,EAAeC,IAAoB/K,EAAAA,EAAAA,aACnCqD,EAAQ2H,IAAahL,EAAAA,EAAAA,UAAS,KAC9BuG,EAAa0E,IAAkBjL,EAAAA,EAAAA,UAAS,cACzCkL,GAAuBzK,EAAAA,EAAAA,UAAQ,IAAM4C,EAAO,IAAI2C,SAAWmF,EAAAA,IAAsB,CAAC9H,KAExFpD,EAAAA,EAAAA,YAAU,KACJ6C,EAAQ,YAAgBO,QAC1B2H,EAAUlI,EAAQ,YAAgBO,UAEnC,CAACP,EAAQ,aAEZ1B,EAAMgK,OAAS,KACThK,EAAMd,OAASwC,EAASM,aAC1BH,EAAe,GAAEH,EAASnE,kBAAkB,GAE1CmM,IAAkB1J,EAAMd,QAC1BwD,EAAShB,EAASnE,GAAIyC,EAAMd,MAAO0K,GACnClI,EAASxC,MAAQqE,EAAQ0B,sBAAsBvD,EAAU1B,EAAMd,MAAOuK,MAI1E5K,EAAAA,EAAAA,YAAU,KACRqG,GAAsBxD,EAASS,gBAAgBW,SAASlL,MAAKqS,IAC3DJ,EAAeI,QAEhB,CAAC9E,IAEJ,MAAMoB,GAAWlH,EAAAA,EAAAA,UAAQ,MACa,QAAhCoK,EAAiBzC,eAAyBzE,EAAAA,EAAAA,GAAOb,EAASc,YACrD4C,GAAa1D,EAASwI,gBAAiB5E,EAAYC,IAG3D,CAACkE,EAAiBzC,YAAatF,EAASc,SAAUd,EAASwI,gBAAiB5E,EAAYC,IAE3F,MAAuC,QAAhCkE,EAAiBzC,cAAyBzE,EAAAA,EAAAA,GAAOb,EAASc,UAC/D,yBAAK5F,UAAWC,EAAAA,WACd,kBAACyJ,GAAD,CAAoBvH,MAAO2C,EAAS3C,MAAOG,MAAOc,EAAMd,MAAOiG,YAAaA,EAAaoB,SAAUA,MAGpG7E,EAAS1C,UACR,yBAAKpC,UAAWC,EAAAA,WACd,yBACED,UACEkN,EAAwB,GAAEjN,EAAAA,sBAA6BA,EAAAA,aAAsBA,EAAAA,oBAE/E,kBAACsN,GAAA,EAAD,MACMnK,EADN,CAEEzC,GAAImE,EAASnE,GACbmD,UAAWgB,EAAS3C,MACpBiJ,KAAMtG,EAASnE,GACf2B,MAAOc,EAAMd,OAAS,GACtBkL,QAAS,IAAMT,EAAiB3J,EAAMd,OACtC0D,SAAUlB,EAASkB,SACnByH,SAAUP,GAAwB7H,EAAOlK,OAAS,EAClDuS,YAAarI,EAAOlK,QAAUkK,EAAO,GAAG4C,iBD5ChD7D,KAAM,QAER,CACEzD,GAAI,YACJ8F,UEjB4C,EAAG3B,SAAAA,EAAUgB,SAAAA,EAAUa,QAAAA,MACrE,MAAOvD,EAAO2B,IAAQC,EAAAA,EAAAA,IAASF,EAASnE,KAClC,cAAEsE,EAAF,iBAAiB4H,EAAjB,WAAmCnE,EAAnC,gBAA+CC,GAAoBpE,IAAAA,WAAiBD,IACnFe,EAAQ2H,IAAahL,EAAAA,EAAAA,UAAS,KAC9BuG,EAAa0E,IAAkBjL,EAAAA,EAAAA,UAAS,cACzCkL,GAAuBzK,EAAAA,EAAAA,UAAQ,IAAM4C,EAAO,IAAI2C,SAAWmF,EAAAA,IAAsB,CAAC9H,KAExFpD,EAAAA,EAAAA,YAAU,KACJ6C,EAAQ,YAAgBO,QAC1B2H,EAAUlI,EAAQ,YAAgBO,UAEnC,CAACP,EAAQ,cAQZ7C,EAAAA,EAAAA,YAAU,KACRqG,GAAsBxD,EAASS,gBAAgBW,SAASlL,MAAKqS,IAC3DJ,EAAeI,QAEhB,CAAC9E,IAEJ,MAAMoB,GAAWlH,EAAAA,EAAAA,UAAQ,MACa,QAAhCoK,EAAiBzC,eAAyBzE,EAAAA,EAAAA,GAAOb,EAASc,YACrD4C,GAAa1D,EAASwI,gBAAiB5E,EAAYC,IAG3D,CAACkE,EAAiBzC,YAAatF,EAASc,SAAUd,EAASwI,gBAAiB5E,EAAYC,IAE3F,MAAuC,QAAhCkE,EAAiBzC,cAAyBzE,EAAAA,EAAAA,GAAOb,EAASc,UAC/D,yBAAK5F,UAAWC,EAAAA,WACd,kBAACyJ,GAAD,CACEvH,MAAO2C,EAAS3C,MAChBG,MAAOc,EAAMd,MAAQqE,EAAQ2E,gBAAgBxG,EAAU1B,EAAMd,OAASc,EAAMd,MAC5EiG,YAAaA,EACboB,SAAUA,MAIb7E,EAAS1C,UACR,kBAACuL,GAAA,EAAD,CACEhK,MAAO,CAAEiK,cAAe,QACxBC,WAAY/I,EAAS3C,MACrBnC,UAAWkN,GAAwBjN,EAAAA,YACnC+F,SAAUlB,EAASkB,SACnByH,SAAUP,GAAwB7H,EAAOlK,OAAS,GAClD,kBAAC2S,GAAA,EAAD,CACEC,gBAAgB,mBAChB3C,KAAMtG,EAASnE,GACfqN,cAAe5K,EAAMd,MACrBwD,SAxCaxD,IACnB2C,EAAcH,EAASnE,GAAI2B,GAC3BwD,EAAShB,EAASnE,GAAI2B,EAAO0K,GAC7BlI,EAASxC,MAAQqE,EAAQ0B,sBAAsBvD,EAAUxC,EAAOuK,IAsC1DoB,YAAY,YACXnJ,EAASS,gBAAgBuC,QAAQjM,KAAI,CAACkM,EAAQzE,IAE3C,kBAAC4K,GAAA,EAAD,CACEvN,GAAK,GAAEmE,EAASnE,MAAMoH,EAAO5F,QAC7B2B,UAAWiE,EAAO5F,MAClBG,MAAOyF,EAAO7B,QACdtD,IAAKU,QAKX4J,GAAwB7H,GAAQlK,OAAS,GACzC,yBAAK6E,UAAWC,EAAAA,YACd,yBAAKD,UAAY,wBAAwBqF,EAAO,GAAG4C,eFlD3D7D,KAAM,SAER,CACEzD,GAAI,WACJ8F,UGtB2C,EAAG3B,SAAAA,EAAUgB,SAAAA,EAAUa,QAAAA,MACpE,MAAOvD,EAAO2B,IAAQC,EAAAA,EAAAA,IAASF,EAASnE,KAClC,cAAEsE,EAAF,iBAAiB4H,EAAjB,WAAmCnE,EAAnC,gBAA+CC,GAAoBpE,IAAAA,WAAiBD,IACnFe,EAAQ2H,IAAahL,EAAAA,EAAAA,UAAS,KAC9BuG,EAAa0E,IAAkBjL,EAAAA,EAAAA,UAAS,cACzCkL,GAAuBzK,EAAAA,EAAAA,UAAQ,IAAM4C,EAAO,IAAI2C,SAAWmF,EAAAA,IAAsB,CAAC9H,KAExFpD,EAAAA,EAAAA,YAAU,KACJ6C,EAAQ,YAAgBO,QAC1B2H,EAAUlI,EAAQ,YAAgBO,UAEnC,CAACP,EAAQ,aAEZ,MAAM6E,GAAWlH,EAAAA,EAAAA,UAAQ,MACa,QAAhCoK,EAAiBzC,eAAyBzE,EAAAA,EAAAA,GAAOb,EAASc,YACrD4C,GAAa1D,EAASwI,gBAAiB5E,EAAYC,IAG3D,CAACkE,EAAiBzC,YAAatF,EAASc,SAAUd,EAASwI,gBAAiB5E,EAAYC,KAQrF,YAAEwF,EAAF,iBAAeC,IAAqB3L,EAAAA,EAAAA,UAAQ,KAChD,MAAM4L,EAAY,IAAIC,KAAKC,eAAeC,OAAOC,UAAUC,UAAUC,cAAc,IAAIzQ,MA6BvF,MAAO,CAAEiQ,YA5BWE,EACjBxS,KAAI+S,IACH,OAAQA,EAAIxK,MACV,IAAK,MACH,MAAO,KACT,IAAK,QACH,MAAO,KACT,IAAK,OACH,MAAO,OACT,QACE,OAAOwK,EAAItM,UAGhBnF,KAAK,IAe2BiR,iBAdVC,EACtBxS,KAAI+S,IACH,OAAQA,EAAIxK,MACV,IAAK,MACH,MAAO,IACT,IAAK,QACH,MAAO,IACT,IAAK,OACH,MAAO,IACT,QACE,OAAOwK,EAAItM,UAGhBnF,KAAK,OAEP,IAQH,OANA8E,EAAAA,EAAAA,YAAU,KACRqG,GAAsBxD,EAASS,gBAAgBW,SAASlL,MAAKqS,IAC3DJ,EAAeI,QAEhB,CAAC9E,IAEmC,QAAhCsE,EAAiBzC,cAAyBzE,EAAAA,EAAAA,GAAOb,EAASc,UAC/D,kBAAC8D,GAAD,CACEvH,MAAO2C,EAAS3C,MAChBG,MAAOc,EAAMd,iBAAiBpE,KAAOkF,EAAMd,MAAMuM,mBAAmBL,OAAOC,UAAUC,UAAYtL,EAAMd,MACvGiG,YAAaA,EACboB,SAAUA,KAGX7E,EAAS1C,UACR,yBAAKpC,UAAWC,EAAAA,WACd,kBAAC6O,GAAA,EAAD,CACEC,eAAe,SACfjJ,SAzDa,EAAEjL,MACrB,MAAMmU,EAAcnU,aAAgBqD,KAAO,IAAIA,KAAKrD,EAAKwR,UAAuC,IAA3BxR,EAAKoU,qBAA+BpU,EACzGoK,EAAcH,EAASnE,GAAIqO,GAC3BlJ,EAAShB,EAASnE,GAAIqO,EAAahC,GACnClI,EAASxC,MAAQqE,EAAQ0B,sBAAsBvD,EAAUkK,EAAanC,IAsDhE7M,UAAY,GAAEC,EAAAA,uBAA8BiN,EAAuBjN,EAAAA,WAAoB,MACrF6E,EAASkB,WAAYL,EAAAA,EAAAA,GAAOb,EAASc,UAAY3F,EAAAA,uBAAgC,KAEnFiP,WAAYd,GACZ,kBAACe,GAAA,EAAD,CACExO,GAAImE,EAASnE,GACbyO,YAAajB,EACbrK,UAAWgB,EAAS3C,MACpBG,MACEc,EAAMd,iBAAiBpE,KAAOkF,EAAMd,MAAMuM,mBAAmBL,OAAOC,UAAUC,UAAYtL,EAAMd,MAElG0D,SAAUlB,EAASkB,SACnByH,SAAUP,GAAwB7H,EAAOlK,OAAS,EAClDuS,YAAarI,EAAO,IAAI4C,gBHpEhC7D,KAAM,QAER,CACEzD,GAAI,aACJ8F,UI3B6C,EAAG3B,SAAAA,EAAUgB,SAAAA,EAAUa,QAAAA,MACtE,MAAOvD,EAAO2B,IAAQC,EAAAA,EAAAA,IAASF,EAASnE,KAClC,cAAEsE,EAAF,iBAAiB4H,EAAjB,WAAmCnE,EAAnC,gBAA+CC,GAAoBpE,IAAAA,WAAiBD,IACnFwI,EAAeC,IAAoB/K,EAAAA,EAAAA,aACnCuG,EAAa0E,IAAkBjL,EAAAA,EAAAA,UAAS,eACxCqD,EAAQ2H,IAAahL,EAAAA,EAAAA,UAAS,IAC/BkL,GAAuBzK,EAAAA,EAAAA,UAAQ,IAAM4C,EAAO,IAAI2C,SAAWmF,EAAAA,IAAsB,CAAC9H,KAExFpD,EAAAA,EAAAA,YAAU,KACJ6C,EAAQ,YAAgBO,QAC1B2H,EAAUlI,EAAQ,YAAgBO,UAEnC,CAACP,EAAQ,aAEZ1B,EAAMgK,OAAS,KACThK,EAAMd,OAASwC,EAASM,aAC1BH,EAAe,GAAEH,EAASnE,kBAAkB,GAE1CmM,IAAkB1J,EAAMd,QAC1BwD,EAAShB,EAASnE,GAAIyC,EAAMd,MAAO0K,GACnClI,EAASxC,MAAQqE,EAAQ0B,sBAAsBvD,EAAU1B,EAAMd,MAAOuK,MAI1E5K,EAAAA,EAAAA,YAAU,KACRqG,GAAsBxD,EAASS,gBAAgBW,SAASlL,MAAKqS,IAC3DJ,EAAeI,QAEhB,CAAC9E,IAEJ,MAAMoB,GAAWlH,EAAAA,EAAAA,UAAQ,MACa,QAAhCoK,EAAiBzC,eAAyBzE,EAAAA,EAAAA,GAAOb,EAASc,YACrD4C,GAAa1D,EAASwI,gBAAiB5E,EAAYC,IAG3D,CAACkE,EAAiBzC,YAAatF,EAASc,SAAUd,EAASwI,gBAAiB5E,EAAYC,IAE3F,MAAuC,QAAhCkE,EAAiBzC,cAAyBzE,EAAAA,EAAAA,GAAOb,EAASc,UAC/D,yBAAK5F,UAAWC,EAAAA,WACd,kBAACyJ,GAAD,CACEvH,MAAO2C,EAAS3C,MAChBG,MAAOc,EAAMd,MAAQqE,EAAQ2E,gBAAgBxG,EAAU1B,EAAMd,OAASc,EAAMd,MAC5EiG,YAAaA,EACboB,SAAUA,MAIb7E,EAAS1C,UACR,yBAAKpC,UAAWC,EAAAA,oBACd,kBAACoP,GAAA,GAAD,MACMjM,EADN,CAEEzC,GAAImE,EAASnE,GACb8M,SAAUP,GAAwB7H,EAAOlK,OAAS,EAClDuS,YAAarI,EAAO,IAAI4C,WACxB9F,MAAO2C,EAAS3C,MAChBmN,IAAKxK,EAASS,gBAAgB+J,UAAOvP,EACrCwP,IAAKzK,EAASS,gBAAgBgK,UAAOxP,EACrCqL,KAAMtG,EAASnE,GACf2B,MAAOc,EAAMd,OAAS,GACtBkL,QAAS,IAAMT,EAAiB3J,EAAMd,OACtCkN,YAAY,EACZC,KAAK,KACLzJ,SAAUlB,EAASkB,SACnBhG,UAAWkN,EAAuBjN,EAAAA,WAAoB,QJnC5DmE,KAAM,UAER,CACEzD,GAAI,kBACJ8F,UK7ByD,EAAG3B,SAAAA,EAAUgB,SAAAA,EAAUa,QAAAA,MAClF,MAAM,EAAE+I,IAAMC,EAAAA,EAAAA,mBACPvM,EAAO2B,IAAQC,EAAAA,EAAAA,IAASF,EAASnE,KAClC,cAAEsE,EAAF,iBAAiB4H,EAAjB,WAAmCnE,EAAnC,gBAA+CC,GAAoBpE,IAAAA,WAAiBD,IACnFe,EAAQ2H,IAAahL,EAAAA,EAAAA,UAAS,KAC9B4N,EAASC,IAAc7N,EAAAA,EAAAA,UAAS,IAChC8N,EAASC,IAAc/N,EAAAA,EAAAA,WAAS,IAChCuG,EAAa0E,IAAkBjL,EAAAA,EAAAA,UAAS,cACzCkL,GAAuBzK,EAAAA,EAAAA,UAAQ,IAAM4C,EAAO,IAAI2C,SAAWmF,EAAAA,IAAsB,CAAC9H,KAExFpD,EAAAA,EAAAA,YAAU,MAGJmB,EAAMd,OAA+B,GAAtBc,EAAMd,MAAMnH,SAInB2U,GAAWhL,EAASxC,QAD9BuN,EAAWD,EAAU,KAItB,CAACxM,EAAMd,SAEVL,EAAAA,EAAAA,YAAU,KACJ6C,EAAQ,YAAgBO,QAC1B2H,EAAUlI,EAAQ,YAAgBO,UAEnC,CAACP,EAAQ,aAEZ,MAAMkL,EAAgBlL,EAASS,gBAAgBuC,QAAQjM,KAAI,CAAC2P,EAAQlI,KAAT,CACzD3C,GAAK,GAAEmE,EAASnE,MAAM6K,EAAOtF,UAC7BA,QAASsF,EAAOtF,QAChB/D,MAAOqJ,EAAOrJ,MACdS,IAAKU,MAGD2M,EAAiC,GACvCD,EAAc7M,SAAQsG,IAChBrG,EAAMd,OAAOmF,SAASgC,EAAKvD,UAC7B+J,EAA+B/I,KAAKuC,OAYxCxH,EAAAA,EAAAA,YAAU,KACRqG,GAAsBxD,EAASS,gBAAgBW,SAASlL,MAAKqS,IAC3DJ,EAAeI,QAEhB,CAAC9E,IAEJ,MAAMoB,GAAWlH,EAAAA,EAAAA,UAAQ,MACa,QAAhCoK,EAAiBzC,eAAyBzE,EAAAA,EAAAA,GAAOb,EAASc,YACrD4C,GAAa1D,EAASwI,gBAAiB5E,EAAYC,IAG3D,CAACkE,EAAiBzC,YAAatF,EAASc,SAAUd,EAASwI,gBAAiB5E,EAAYC,IAE3F,MAAuC,QAAhCkE,EAAiBzC,cAAyBzE,EAAAA,EAAAA,GAAOb,EAASc,UAC/D,yBAAK5F,UAAWC,EAAAA,WACd,kBAACyJ,GAAD,CACEvH,MAAO2C,EAAS3C,MAChBG,MAAOc,EAAMd,MAAQqE,EAAQ2E,gBAAgBxG,EAAU1B,EAAMd,OAASc,EAAMd,MAC5EiG,YAAaA,EACboB,SAAUA,MAIb7E,EAAS1C,UACR,oCACE,yBACEpC,UACEkN,EACK,GAAEjN,EAAAA,uBAA8BA,EAAAA,aAChC,GAAEA,EAAAA,uBAET,kBAACiQ,GAAA,aAAD,CACEd,YAAaM,EAAE,2BAA4B,aAC3C5J,SAzCsB,EAAGqK,cAAAA,MACjCJ,GAAW,GACX,MAAMzN,EAAQ6N,EAActU,KAAIuU,GAAgBA,EAAalK,UAC7DjB,EAAcH,EAASnE,GAAI2B,GAC3BwD,EAAShB,EAASnE,GAAI2B,EAAO0K,GAC7BlI,EAASxC,MAAQqE,EAAQ0B,sBAAsBvD,EAAUxC,EAAOuK,IAqCxDlM,GAAImE,EAAS3C,MACbkO,MAAOL,EACPM,qBAAsBL,EACtB9N,MAAO,GACPoO,UAAWzL,EAAS3C,MACpBS,IAAKgN,EACLY,aAAc/G,GAASA,EAAOA,EAAKtH,MAAQ,IAC3C6D,SAAUlB,EAASkB,SACnByH,SAAUP,GAAwB7H,EAAOlK,OAAS,EAClDuS,YAAarI,EAAO,IAAI4C,cAG5B,yBAAKjI,UAAWC,EAAAA,UAAkB0D,MAAO,CAAE8M,UAAW,aACnDrN,EAAMd,OAAOnH,OACZ,kBAACuV,GAAA,EAAD,CAAe/M,MAAO,CAAEgN,WAAY,SACjChK,EAAQ2E,gBAAgBxG,EAAU1B,EAAMd,QAAQzG,KAAI+U,GAAgBA,EAAe,QAGtF,kBAAC1H,GAAD,SLxER9E,KAAM,YAER,CACEzD,GAAI,sBACJ8F,UMtC6D,EAAG3B,SAAAA,EAAUgB,SAAAA,EAAUa,QAAAA,MACtF,MAAOvD,EAAO2B,IAAQC,EAAAA,EAAAA,IAASF,EAASnE,KAClC,cAAEsE,EAAF,iBAAiB4H,EAAjB,WAAmCnE,EAAnC,gBAA+CC,GAAoBpE,IAAAA,WAAiBD,IACnFe,EAAQ2H,IAAahL,EAAAA,EAAAA,UAAS,KAC9BuG,EAAa0E,IAAkBjL,EAAAA,EAAAA,UAAS,eAE/CC,EAAAA,EAAAA,YAAU,KACJ6C,EAAQ,YAAgBO,QAC1B2H,EAAUlI,EAAQ,YAAgBO,UAEnC,CAACP,EAAQ,aAEZ,MAKM+L,GAAgBpO,EAAAA,EAAAA,UACpB,IAAMqC,EAASS,gBAAgBuC,QAAQgJ,WAAUtF,GAAUA,EAAOtF,SAAW9C,EAAMd,SACnF,CAACc,EAAMd,SAGTL,EAAAA,EAAAA,YAAU,KACRqG,GAAsBxD,EAASS,gBAAgBW,SAASlL,MAAKqS,IAC3DJ,EAAeI,QAEhB,CAAC9E,IAEJ,MAAMoB,GAAWlH,EAAAA,EAAAA,UAAQ,MACa,QAAhCoK,EAAiBzC,eAAyBzE,EAAAA,EAAAA,GAAOb,EAASc,YACrD4C,GAAa1D,EAASwI,gBAAiB5E,EAAYC,IAG3D,CAACkE,EAAiBzC,YAAatF,EAASc,SAAUd,EAASwI,gBAAiB5E,EAAYC,IAE3F,MAAuC,QAAhCkE,EAAiBzC,cAAyBzE,EAAAA,EAAAA,GAAOb,EAASc,UAC/D,yBAAK5F,UAAWC,EAAAA,WACd,kBAACyJ,GAAD,CACEvH,MAAO2C,EAAS3C,MAChBG,MAAOc,EAAMd,MAAQqE,EAAQ2E,gBAAgBxG,EAAU1B,EAAMd,OAASc,EAAMd,MAC5EiG,YAAaA,EACboB,SAAUA,MAIb7E,EAAS1C,UACR,yBAAKpC,UAAWC,EAAAA,eACd,kBAAC0N,GAAA,EAAD,CAAWE,WAAY/I,EAAS3C,MAAOnC,UAAWqF,EAAOlK,OAAS8E,EAAAA,YAAqB,IACrF,kBAAC8Q,GAAA,EAAD,CAAiBjL,SApCJxD,IACnB2C,EAAcH,EAASnE,GAAI2B,GAAO8I,MAClCtF,EAAShB,EAASnE,GAAI2B,GAAO8I,KAAM4B,GACnClI,EAASxC,MAAQqE,EAAQ0B,sBAAsBvD,EAAUxC,GAAO8I,KAAMyB,IAiCvBgE,cAAeA,EAAe7Q,UAAWC,EAAAA,gBAC/E6E,EAASS,gBAAgBuC,QAAQjM,KAAI,CAAC2P,EAAQlI,IAC7C,kBAAC0N,GAAA,EAAD,CACEhR,UAAW6Q,IAAkBvN,EAAQrD,EAAAA,gBAAyBA,EAAAA,oBAC9DmL,KAAMI,EAAOtF,SAAWsF,EAAOlJ,MAC/B2O,KAAMzF,EAAOrJ,MACbS,IAAKU,EACL0C,SAAUlB,EAASkB,iBNhB/B5B,KAAM,oBAER,CACEzD,GAAI,8BACJ8F,UOvC6F,EAAG3B,SAAAA,MAClG,MAAO1B,EAAO2B,IAAQC,EAAAA,EAAAA,IAASF,EAASnE,KAClC,qBAAEuQ,EAAF,cAAwBjM,EAAxB,iBAAuC4H,GAAqBtI,IAAAA,WAAiBD,IAC5E6M,EAAWC,IAAgBpP,EAAAA,EAAAA,UAAS,KACpCuG,EAAa0E,IAAkBjL,EAAAA,EAAAA,UAAS,cAsB/C,OApBAC,EAAAA,EAAAA,YAAU,KxBGL,IAA2BoP,EwBF1BvM,EAASS,gBAAgB+L,cxBECD,EwBA1BvM,EAASS,gBAAgB+L,YACtBC,OACAzO,MAAM,KACN3F,KAAK,QxBFPuH,EAAAA,EAAAA,wBAAwB,4BAA2B2M,6BAA+B1M,MACvF9I,EAAAA,EAAAA,IAAI,EAAGZ,KAAAA,KAAWA,EAAI,YwBElBgQ,WACAxN,GAAW2T,EAAa3T,KACxBC,IAAS8T,EAAAA,EAAAA,0BAGZ,KAEHvP,EAAAA,EAAAA,YAAU,KACRqG,GAAsBxD,EAASS,gBAAgBW,SAASlL,MAAKqS,IAC3DJ,EAAeI,QAEhB,CAAC9E,IAEmC,QAAhCsE,EAAiBzC,cAAyBzE,EAAAA,EAAAA,GAAOb,EAASc,UAC/D,yBAAK5F,UAAWC,EAAAA,WACd,kBAACyJ,GAAD,CACEvH,MAAO2C,EAAS3C,MAChBG,MAAOc,EAAMd,MAAQc,EAAMd,MAAMzD,QAAUuE,EAAMd,MACjDiG,YAAaA,EACboB,UAAQ,MAIX7E,EAAS1C,UACR,yBAAKpC,UAAWC,EAAAA,gBACd,kBAACwR,GAAA,EAAD,CACE9Q,GAAImE,EAASnE,GACb4P,UAAWzL,EAAS3C,MACpBA,MAAM,kBACNkO,MAAOc,EACPX,aAAc/G,GAAQA,EAAK5K,QAC3BuR,aAAchN,EAAMd,MACpBwD,SAAU,EAAGsK,aAAAA,MACXnL,EAAcH,EAASnE,GAAIyP,GAC3Bc,EAAqBd,IAEvBpK,SAAUlB,EAASkB,aPTzB5B,KAAM,sBAER,CACEzD,GAAI,eACJ8F,UQ/C+C,EAAG3B,SAAAA,EAAUgB,SAAAA,EAAUa,QAAAA,MACxE,MAAOvD,EAAO2B,IAAQC,EAAAA,EAAAA,IAASF,EAASnE,KAClC,cAAEsE,EAAF,iBAAiB4H,EAAjB,WAAmCnE,EAAnC,gBAA+CC,GAAoBpE,IAAAA,WAAiBD,IACnF+L,EAAOqB,GAAYnN,IAAAA,SAAe,KAClCc,EAAQ2H,IAAahL,EAAAA,EAAAA,UAAS,KAC9BuG,EAAa0E,IAAkBjL,EAAAA,EAAAA,UAAS,cACzCkL,GAAuBzK,EAAAA,EAAAA,UAAQ,IAAM4C,EAAO,IAAI2C,SAAWmF,EAAAA,IAAsB,CAAC9H,KAExFpD,EAAAA,EAAAA,YAAU,KACJ6C,EAAQ,YAAgBO,QAC1B2H,EAAUlI,EAAQ,YAAgBO,UAEnC,CAACP,EAAQ,cAYZ7C,EAAAA,EAAAA,YAAU,KACRyP,EAAS5M,EAASS,gBAAgBuC,QAAQjM,KAAI4N,GAAQA,EAAKnH,OAASmH,EAAKvD,aACxE,CAACpB,EAASS,gBAAgBuC,WAE7B7F,EAAAA,EAAAA,YAAU,KACRqG,GAAsBxD,EAASS,gBAAgBW,SAASlL,MAAKqS,IAC3DJ,EAAeI,QAEhB,CAAC9E,IAEJ,MAAMoB,GAAWlH,EAAAA,EAAAA,UAAQ,MACa,QAAhCoK,EAAiBzC,eAAyBzE,EAAAA,EAAAA,GAAOb,EAASc,YACrD4C,GAAa1D,EAASwI,gBAAiB5E,EAAYC,IAG3D,CAACkE,EAAiBzC,YAAatF,EAASc,SAAUd,EAASwI,gBAAiB5E,EAAYC,IAE3F,MAAuC,QAAhCkE,EAAiBzC,cAAyBzE,EAAAA,EAAAA,GAAOb,EAASc,UAC/D,kBAAC8D,GAAD,CACEvH,MAAO2C,EAAS3C,MAChBG,MAAOc,EAAMd,MAAQqE,EAAQ2E,gBAAgBxG,EAAU1B,EAAMd,OAASc,EAAMd,MAC5EiG,YAAaA,EACboB,SAAUA,KAGX7E,EAAS1C,UACR,yBAAKpC,UAAWC,EAAAA,gBACd,yBACED,UACEkN,EAAwB,GAAEjN,EAAAA,cAAqBA,EAAAA,mBAA4BA,EAAAA,kBAE7E,kBAACwR,GAAA,EAAD,CACE9Q,GAAImE,EAASnE,GACb4P,UAAWzL,EAAS3C,MACpBA,MAAM,mBACNkO,MAAOA,EACPG,aAxCW/G,GACJ3E,EAASS,gBAAgBuC,QAAQ5F,MAAK2J,GAAQA,EAAIvJ,MAAQuJ,EAAIvJ,OAASmH,EAAOoC,EAAI3F,SAAWuD,KAC7FtH,MAuCPiO,aAAchN,EAAMd,MACpBwD,SAAU,EAAGsK,aAAAA,MAAmBuB,OAhDrBrP,EAgDkC8N,EA/CrDnL,EAAcH,EAASnE,GAAI2B,GAC3BwD,EAAShB,EAASnE,GAAI2B,EAAO0K,QAC7BlI,EAASxC,MAAQqE,EAAQ0B,sBAAsBvD,EAAUxC,EAAOuK,IAH7CvK,IAAAA,GAiDX0D,SAAUlB,EAASkB,SACnByH,SAAUP,GAAwB7H,EAAOlK,OAAS,EAClDuS,YAAarI,EAAOlK,QAAUkK,EAAO,GAAG4C,gBRjBhD7D,KAAM,UAER,CACEzD,GAAI,eACJ8F,USpD+C,EAAG3B,SAAAA,EAAUgB,SAAAA,EAAUa,QAAAA,MACxE,MAAOvD,EAAO2B,IAAQC,EAAAA,EAAAA,IAASF,EAASnE,KAClC,cAAEsE,EAAF,iBAAiB4H,EAAjB,WAAmCnE,EAAnC,gBAA+CC,GAAoBpE,IAAAA,WAAiBD,IACnFwI,EAAeC,IAAoB/K,EAAAA,EAAAA,aACnCqD,EAAQ2H,IAAahL,EAAAA,EAAAA,UAAS,KAC9BuG,EAAa0E,IAAkBjL,EAAAA,EAAAA,UAAS,cACzCkL,GAAuBzK,EAAAA,EAAAA,UAAQ,IAAM4C,EAAO,IAAI2C,SAAWmF,EAAAA,IAAsB,CAAC9H,KAExFpD,EAAAA,EAAAA,YAAU,KACJ6C,EAAQ,YAAgBO,QAC1B2H,EAAUlI,EAAQ,YAAgBO,UAEnC,CAACP,EAAQ,aAEZ1B,EAAMgK,OAAS,KACThK,EAAMd,OAASwC,EAASM,aAC1BH,EAAe,GAAEH,EAASnE,kBAAkB,GAE1CmM,IAAkB1J,EAAMd,QAC1BwD,EAAShB,EAASnE,GAAIyC,EAAMd,MAAO0K,GACnClI,EAASxC,MAAQqE,EAAQ0B,sBAAsBvD,EAAU1B,EAAMd,MAAOuK,MAI1E5K,EAAAA,EAAAA,YAAU,KACRqG,GAAsBxD,EAASS,gBAAgBW,SAASlL,MAAKqS,IAC3DJ,EAAeI,QAEhB,CAAC9E,IAEJ,MAAMoB,GAAWlH,EAAAA,EAAAA,UAAQ,MACa,QAAhCoK,EAAiBzC,eAAyBzE,EAAAA,EAAAA,GAAOb,EAASc,YACrD4C,GAAa1D,EAASwI,gBAAiB5E,EAAYC,IAG3D,CAACkE,EAAiBzC,YAAatF,EAASc,SAAUd,EAASwI,gBAAiB5E,EAAYC,IAE3F,MAAuC,QAAhCkE,EAAiBzC,cAAyBzE,EAAAA,EAAAA,GAAOb,EAASc,UAC/D,yBAAK5F,UAAWC,EAAAA,WACd,kBAACyJ,GAAD,CAAoBvH,MAAO2C,EAAS3C,MAAOG,MAAOc,EAAMd,MAAOiG,YAAaA,EAAaoB,SAAUA,MAGpG7E,EAAS1C,UACR,yBAAKpC,UAAWC,EAAAA,WACd,yBACED,UACEkN,EAAwB,GAAEjN,EAAAA,sBAA6BA,EAAAA,aAAsBA,EAAAA,oBAE/E,kBAAC2R,GAAA,EAAD,MACMxO,EADN,CAEEzC,GAAImE,EAASnE,GACbmD,UAAWgB,EAAS3C,MACpBiJ,KAAMtG,EAASnE,GACf2B,MAAOc,EAAMd,OAAS,GACtBkL,QAAS,IAAMT,EAAiB3J,EAAMd,OACtCuP,KAAM/M,EAASS,gBAAgBsM,MAAQ,EACvC7L,SAAUlB,EAASkB,SACnByH,SAAUP,GAAwB7H,EAAOlK,OAAS,EAClDuS,YAAarI,EAAOlK,QAAUkK,EAAO,GAAG4C,iBTLhD7D,KAAM,YAER,CACEzD,GAAI,aACJ8F,UUzD6C,EAAG3B,SAAAA,EAAUgB,SAAAA,EAAUa,QAAAA,MACtE,MAAOvD,EAAO2B,IAAQC,EAAAA,EAAAA,IAASF,EAASnE,KAClC,cAAEsE,EAAF,iBAAiB4H,EAAjB,WAAmCnE,EAAnC,gBAA+CC,GAAoBpE,IAAAA,WAAiBD,IACnFiE,EAAa0E,IAAkBjL,EAAAA,EAAAA,UAAS,eAO/CC,EAAAA,EAAAA,YAAU,KAGH6C,EAASxC,OAAyC,SAAhCuK,EAAiBzC,cACtCtF,EAASxC,MAAQqE,EAAQ0B,sBAAsBvD,EAAU1B,EAAMd,QAAS,EAAOuK,MAEhF,KAEH5K,EAAAA,EAAAA,YAAU,KACRqG,GAAsBxD,EAASS,gBAAgBW,SAASlL,MAAKqS,IAC3DJ,EAAeI,QAEhB,CAAC9E,IAEJ,MAAMoB,GAAWlH,EAAAA,EAAAA,UAAQ,MACa,QAAhCoK,EAAiBzC,eAAyBzE,EAAAA,EAAAA,GAAOb,EAASc,YACrD4C,GAAa1D,EAASwI,gBAAiB5E,EAAYC,IAG3D,CAACkE,EAAiBzC,YAAatF,EAASc,SAAUd,EAASwI,gBAAiB5E,EAAYC,IAE3F,MAAuC,QAAhCkE,EAAiBzC,cAAyBzE,EAAAA,EAAAA,GAAOb,EAASc,UAC/D,yBAAK5F,UAAWC,EAAAA,WACd,kBAACyJ,GAAD,CACEvH,MAAO2C,EAAS3C,MAChBG,OAAQS,EAAAA,EAAAA,IAAQK,EAAMd,OAA0Dc,EAAMd,MAAvDqE,EAAQ2E,gBAAgBxG,EAAU1B,EAAMd,OACvEiG,YAAaA,EACboB,SAAUA,MAIb7E,EAAS1C,UACR,yBAAKpC,UAAWC,EAAAA,WACd,kBAAC4D,EAAA,EAAD,CACEC,UAAWgB,EAAS3C,MACpBxB,GAAImE,EAASnE,GACboD,OAAQe,EAASS,gBAAgBuM,cAAcC,WAC/C/N,OAAQc,EAASS,gBAAgBuM,cAAcE,UAC/C/N,SA5Ca3B,IACnB2C,EAAcH,EAASnE,GAAI2B,GAC3BwD,EAAShB,EAASnE,GAAI2B,EAAO,MAC7BwC,EAASxC,MAAQqE,EAAQ0B,sBAAsBvD,EAAUxC,EAAOuK,IA0C1D3J,UAAWE,EAAMd,MACjB0D,SAAUlB,EAASkB,aVQzB5B,KAAM,UAER,CACEzD,GAAI,eACJ8F,UAAWI,GACXzC,KAAM,SAER,CACEzD,GAAI,aACJ8F,UL/BoD,EAAG3B,SAAAA,EAAUgB,SAAAA,MACnE,MAAOkB,EAAWiL,IAAgBjQ,EAAAA,EAAAA,UAAS,CAAC8C,KACtC,OAAEuB,EAAF,iBAAUwG,EAAV,gBAA4BqF,GAAoB3N,IAAAA,WAAiBD,IACjE,OAAE5C,EAAF,UAAUC,IAAcwQ,EAAAA,EAAAA,OACvBvC,EAASC,IAAc7N,EAAAA,EAAAA,UAAS,GACjCoQ,GAAWC,EAAAA,EAAAA,iBAEXC,GAAW7P,EAAAA,EAAAA,UAAQ,IACP,SAAZ2P,GAAmC,UAAZA,EAClB,QAEF,SACN,CAACA,KAEJnQ,EAAAA,EAAAA,YAAU,KACR,GAAI4K,EAAiBvC,YAAcsF,EAAS,CAC1C,MAAM2C,EAAqBzN,EAASxC,OAAO/H,KACrCiY,EAAoB3F,EAAiBvC,UAAUE,IAAI3N,QACvD2N,GAAOA,EAAItE,QAAQ3L,OAASuK,EAASS,gBAAgBW,SAAWsE,EAAIjQ,MAAQgY,IAG9E,IAAIE,EAAc7C,EAClB4C,EAAkBrP,SAAQwH,IACxB8H,GAA4B,EAC5BC,EAAUD,EAAa9H,MAEzBkF,EAAW4C,MAEZ,CAAC/Q,KAEJO,EAAAA,EAAAA,YAAU,KACR+E,EAAU,GAAKlC,EACfmN,EAAa,IAAIjL,MAChB,CAAClC,IAEJ,MAAM4N,EAAY,CAACC,EAAehI,KAChC,MAAMiI,EAAWD,EACXE,GAAOC,EAAAA,GAAAA,WAAUhO,GACvB+N,EAAKvQ,MAAQqI,EACbkI,EAAKlS,GAAM,GAAEkS,EAAKlS,MAAMiS,IACxBC,EAAK7L,UAAU7D,SAAQqE,IACrBA,EAAE7G,GAAM,GAAE6G,EAAE7G,MAAMiS,IAClBpL,EAAC,QAAcqL,EAAKlS,GACpB6G,EAAElF,MAAQ,KACV,IAAIyQ,EAAepI,EA1Ea,EAACvH,EAAsBuH,KAC3D,MAAMnF,EAAYpC,EAAMmC,gBAAgBC,UAClCgF,EAAMG,EAASE,aAAahO,QAAO4N,GAAKA,EAAEvE,QAAQ3L,MAAQ6I,EAAMmC,gBAAgBW,UACtF,OAAIsE,EAAIrP,QACNiI,EAAMd,MAAQkI,EAAI,GACD,SAAbhF,GAAqC,oBAAbA,GAC1BhB,EAAWpB,EAAMmC,gBAAgBW,QAAS,sDAAsD+E,WAC9FC,IAC8B,WAAxBA,EAAOC,SAASC,OAClBhI,EAAMd,MAAMA,MAAQkI,EAAI,GAAGlI,MAAM/H,SAKd,iBAAhBiQ,EAAI,GAAGlI,OAA4C,iBAAhBkI,EAAI,GAAGlI,MACT,QAAnCc,EAAMmC,gBAAgBC,UAAsB1K,IAAAA,CAAO0P,EAAI,GAAGlI,OAAO+I,SAAWb,EAAI,GAAGlI,MAErD,YAAnCc,EAAMmC,gBAAgBC,WACxBpC,EAAMd,MAAQkI,EACPpH,EAAMd,MAAMzG,KAAI4O,GAAKA,EAAEnI,MAAM/H,QAEC,UAAnC6I,EAAMmC,gBAAgBC,WACxBpC,EAAMd,MAAMA,MAAQkI,EAAI,GAAGlI,MAAM/H,KAC1BiQ,EAAI,GAAGlI,OAAS1B,EAAAA,IAElB4J,EAAI,GAAGlI,OAAO/H,MAEhB,IA+C2ByY,CAAuBxL,EAAGmD,GAAY,KACpEjJ,EAAQ,GAAE8F,EAAE7G,MAAQoS,IAA6D,YAA/BvL,EAAEjC,gBAAgBC,UAA0B,GAAK,IACnGa,EAAOa,KAAKM,MAEd7F,EAAUD,GACV2E,EAAOa,KAAK2L,GACZ7L,EAAUE,KAAK2L,GACfZ,EAAajL,IAmBTiM,EAAQjM,EAAUnL,KAAI,CAACiJ,EAAUxB,KACrC,MAAMwD,EACM,IAAVxD,EACE,kBAACwG,GAAA,EAAD,CAAQnG,MAAO,CAAEuP,WAAY,SAAUvC,WAAY,UACjD,kBAAC,WAAD,CACEwC,WAAYC,GAAAA,IACZ/O,KAAK,mBACLd,QAAS,IAvBKuB,CAAAA,IAClBA,EAASxC,OAASwC,EAASxC,MAAM/H,OAEnCuK,EAASxC,MAAT,QAA2B,SACpBwC,EAASxC,MAAMA,MACtB4P,EAAgBhL,KAAKpC,EAASxC,QAEhC2P,EAAajL,EAAUnK,QAAO2K,GAAKA,EAAE7G,KAAOmE,EAASnE,MAEnC,CAACmE,EAASnE,MAAOmE,EAASkC,UAAUnL,KAAI2L,GAAKA,EAAE7G,MACvDwC,SAAQC,IAChB,MAAME,EAAQ+C,EAAOyK,WAAUlG,GAAKA,EAAEjK,KAAOyC,IAC7CiD,EAAOgN,OAAO/P,EAAO,UACd5B,EAAO0B,OAUOkQ,CAAexO,GAC9ByO,aAAW,KAGb,KACN,OACE,oCACE,kBAAC,WAAD,CAAK5P,MAAO,CAAE6P,OAAQ,IAAK5P,aAAc,OAAQ6M,UAAW,OAAQtM,MAAOmO,IACzE,kBAACzL,GAAD,CAAc/B,SAAUA,EAAUgB,SAAUA,EAAUa,QAASC,GAAW,cACzEE,OAsBT,OAhBAmM,EAAM/L,KACJ,kBAAC,WAAD,KACE,kBAAC4C,GAAA,EAAD,KACE,kBAAC,WAAD,CACEqJ,WAAYM,GAAAA,IACZpP,KAAK,QACLd,QAAS,KACP,MAAMmQ,EAAY9D,EAAU,EAC5B8C,EAAUgB,EAAW,MACrB7D,EAAW6D,KAEZ5O,EAASS,gBAAgBoO,eAAeC,SAAW,WAMzD9O,EAAS1C,UACR,yBAAKuB,MAAO,CAAE8M,UAAW,UAAW7M,aAAc,SAChD,kBAAC+J,GAAA,EAAD,CAAWE,WAAY/I,EAAS3C,OAAQ8Q,KK/E5C7O,KAAM,aAER,CACEzD,GAAI,iBACJ8F,UW9EiD,EAAG3B,SAAAA,EAAU6B,QAAAA,MAChE,MAAM,iBAAEkG,EAAF,8BAAoBgH,GAAkCtP,IAAAA,WAAiBD,GAW7E,OATArC,EAAAA,EAAAA,YAAU,KAYZ,IAAyBK,EAAekI,EAXhC1F,EAASxC,OAAkC,iBAAlBwC,EAASxC,OAAqBuR,UAClD/O,EAASxC,MAChBqE,EAAQ0B,sBAAsBvD,EAAUA,EAAQ,WAAgB+H,IAC9B,iBAAlB/H,EAASxC,QAQNA,EAR4CwC,EAAQ,WAShD,iBADW0F,EARqD1F,EAASxC,OASlFA,MAAoBkI,EAAIlI,OAAO/H,MAAQ+H,EAAQkI,EAAIlI,OAASA,IAP1EqE,EAAQ0B,sBAAsBvD,EAAUA,EAAQ,WAAgB+H,KAEjE,CAAC/H,EAASxC,MAAOuR,IACb,sCXmELzP,KAAM,eAER,CACEzD,GAAI,eACJ8F,UHpF+C,EAAG3B,SAAAA,MACnDA,EAAS1C,UAAY,kBAAC,KAAD,CAAe0R,SAAUhP,EAASxC,MAAMnF,KAAK,QGoFjEiH,KAAM,aAIJ2P,GAAoC,CACxC,CACEpT,GAAI,uBACJ8F,UAAWwD,GACX7F,KAAM,OAER,CACEzD,GAAI,kBACJ8F,UAAWwD,GACX7F,KAAM,YAER,CACEzD,GAAI,qCACJ8F,UJYiE,CACnE4B,sBAAuB,CAACjF,EAAsBd,EAAYsF,IACjD,KAETyC,gBAAiB,CAACC,EAAgBlH,KACzB,CACLvE,QAASyL,EAAUqB,SAASP,KAC5B7Q,KAAM+P,EAAUqB,SAASpR,OAG7B+Q,gBAAiB,CAAClI,EAAsBd,IAC/BA,EAAMzD,SItBbuF,KAAM,sBAIJ4P,GAAgD,CACpD,CACErT,GAAI,oBACJ8F,UAAWhB,EAAAA,IAEb,CACE9E,GAAI,OACJ8F,UAAWuF,IAEb,CACErL,GAAI,gBACJ8F,UAAW6F,KAIFnG,GAAoB8N,GACxBrH,GAAoB1K,MAAKuH,GAAQA,EAAKrF,MAAQ6P,KAAaxN,UAG7D,SAASG,GAAWxC,GACzB,OAAO2P,GAAa7R,MAAKyE,GAAWA,EAAQvC,MAAQA,KAAOqC,UAiBtD,SAASyN,GAAavT,GAC3B,OAAOqT,GAAgB9R,MAAKiS,GAAaA,EAAUxT,IAAMA,KAAK8F,WAAauN,GAAgB,GAAGvN,U,2BY1I5F,GAAU,GAEd,GAAQ/G,kBAAoB,IAC5B,GAAQC,cAAgB,IAElB,GAAQC,OAAS,SAAc,KAAM,QAE3C,GAAQC,OAAS,IACjB,GAAQC,mBAAqB,IAEhB,IAAI,KAAS,IAKnB,SAAe,MAAW,YAAiB,iBAAiBC,E,uCCgBnE,SApCA,UAAsB,KAAEsD,EAAF,cAAQiD,EAAR,gBAAuB8N,EAAvB,YAAwCC,IAC5D,IAAIC,EAAWjR,EAAKlB,MAAMI,QAAQ,MAAO,IAMzC,OACE,kBAAC,KAAD,CAAUgS,QAAS,KAJnBH,EAIqCE,IAAWE,UAAU,MAAMC,aAAa,OAC3E,yBAAK9T,GAAI2T,EAAUtU,UAAWC,GAAAA,aAC5B,yBAAK0D,MAAO,GAAI3D,UAAWC,GAAAA,YACzB,uBAAGD,UAAWC,GAAAA,WAAmBoD,EAAKlB,QAExC,kBAACuS,GAAA,GAAD,KAEGrR,EAAKsR,SAAS9Y,KAAI,CAAC+Y,EAAKtR,IAErB,kBAACuR,GAAA,EAAD,CAAeC,MAAOF,EAAIzS,MAAO4S,KAAMV,EAAarU,UAAWC,GAAAA,gBAC7D,yBAAKD,UAAWC,GAAAA,YAAoB2C,IAAKU,GACvC,kBAAC,GAAD,CACE+C,OAAQuO,EAAI5N,UACZR,UAAWnD,EAAKsR,SAASxZ,OAAS,EAClCmL,cAAeA,EACfC,aAAcqO,EAAIzS,MAClBS,IAAKU,YCxBlB,SAAS0R,IAAc,OAAEC,IAE9B,OADAhT,EAAAA,EAAAA,YAAU,IAAMgT,OAAY,CAACA,IACtB,KCqCF,MAAMC,GAAsD,EACjEC,SAAAA,EACAlX,QAAAA,EACAmX,cAAAA,EACAC,SAAAA,EACA1J,SAAAA,EACAjK,OAAAA,EACA2S,YAAAA,EACAjK,YAAAA,EACAkL,gBAAAA,EACA3M,gBAAAA,EACA4M,mBAAAA,EACAtQ,cAAAA,EACAmP,gBAAAA,EACAoB,SAAAA,EACAC,iBAAAA,EACAC,oBAAAA,MAEA,MAAOrP,EAAQsP,IAAa3T,EAAAA,EAAAA,UAA+B,KACpD4T,EAAmB1E,IAAwBlP,EAAAA,EAAAA,UAAS,OACpDsI,EAAWuL,IAAgB7T,EAAAA,EAAAA,UAA8B,OACzD8T,EAAMC,IAAW/T,EAAAA,EAAAA,UAAyBmT,IAC1CjD,EAAiB8D,IAAsBhU,EAAAA,EAAAA,UAAS,KAChDiU,EAAmBC,IAAwBlU,EAAAA,EAAAA,UAAS,KACpD6R,EAA+BsC,IAAoCnU,EAAAA,EAAAA,WAAS,GAC7E0G,GAAa2J,EAAAA,EAAAA,iBAEb+D,GAAqBnT,EAAAA,EAAAA,cAAY,KACrCkS,EAASkB,MAAMlT,SAAQE,IAChBA,EAAKiT,WACRhB,EAAgBiB,IAAIlT,MAGjB,KACL8R,EAASkB,MAAMlT,SAAQE,IAChBA,EAAKiT,WACRhB,EAAgBkB,OAAOnT,SAI5B,CAACiS,EAAiBH,IAEftI,EAAmB,CACvB5O,QAASA,EACTqM,UAAWA,EACXqB,SAAUA,EACVvB,YAAaA,IAAgB0L,GAAMxL,UAAY,OAAS,SACxDzP,KAAMua,IAGRnT,EAAAA,EAAAA,YAAU,KACH2T,GACH1E,EAAqBvF,KAEtB,CAACA,KAEJ1J,EAAAA,EAAAA,YAAU,KACR,MAAMsI,EAAsC,GACtCkM,EAAe,GACrB,IAAIC,GAAkC,EA0BtC,GAzBAZ,EAAKO,MAAMlT,SAAQE,GACjBA,EAAKsR,SAASxR,SAAQkE,IACpBA,EAAQL,UAAU7D,SAAQ2B,I1BrD3B,IACL1B,EACAuT,EACAC,EACAC,E0BoDQxP,EAAQiG,iBAAkBvK,EAAAA,EAAAA,IAAQsE,EAAQiG,iBAAmB,KAAOjG,EAAQiG,gBAC5EjK,EAAKiK,iBAAkBvK,EAAAA,EAAAA,IAAQM,EAAKiK,iBAAmB,KAAOjK,EAAKiK,gBACnEwI,EAAKxI,iBAAkBvK,EAAAA,EAAAA,IAAQ+S,EAAKxI,iBAAmB,KAAOwI,EAAKxI,gBACnExI,EAASwI,gBAAkBjG,EAAQiG,iBAAmBjK,EAAKiK,iBAAmBwI,EAAKxI,gB1B1D3FlK,E0B2DkC0B,E1B1DlC6R,E0B0D4CtP,EAAQzB,S1BzDpDgR,E0ByD8DvT,EAAKuC,S1BxDnEiR,E0BwD6Ef,EAAKlQ,U1BtD7E7C,EAAAA,EAAAA,IAAQK,EAAMwC,YAGnBxC,EAAMwC,WAAY7C,EAAAA,EAAAA,IAAQ4T,MAAqB5T,EAAAA,EAAAA,IAAQ6T,IAAiBC,G0BoDtB,eAAtC/R,EAASS,gBAAgBC,WAA+BV,EAAQ,aAClEA,EAAQ,WAAiBA,EAASxC,OAEpCiI,EAAcrD,KAAKpC,GACE,YAAjBA,EAASV,MACXU,EAASkC,UAAU7D,SAAQ2T,IAEzBA,EAAY,QAAchS,EAASnE,GACnC4J,EAAcrD,KAAK4P,cAOzBxM,EACFC,EAAcpH,SAAQC,IACpB,MAAMuD,EAAUC,GAAWxD,EAAMgB,MACjC,IAAI2S,EAAcpQ,GAAS0D,gBAAgBC,EAAWlH,EAAOmH,IACzDxH,EAAAA,EAAAA,IAAQgU,MAAiBhU,EAAAA,EAAAA,IAAQK,EAAMmC,gBAAgBsC,gBACzDkP,EAAcpP,GAAuCvE,EAAOyJ,EAAkBlG,IAEhF8P,EAAarT,EAAMzC,IAAMoW,MAAAA,EAAoD,GAAKA,EAC9E3T,EAAMgC,cACRqR,EAAc,GAAErT,EAAMzC,mBAAuBoW,MAGjD7F,EAAqB5G,EAAUqB,UAC/B+K,GAAkC,MAC7B,CACL,MAAMM,EAAc,CAClBC,SAAU,GACVC,QAAQ,EACRC,QAAS,IAEX5M,EAAcpH,SAAQC,IACpB,IAAId,EAAQ,MACPS,EAAAA,EAAAA,IAAQK,EAAMmC,gBAAgBsC,gBACjCvF,EAAQqF,GAAuCvE,EAAOyJ,EAAkBjG,GAAWxD,EAAMgB,SAEtFrB,EAAAA,EAAAA,IAAQT,GAGXmU,EAAarT,EAAMzC,IAC+BZ,MAAhDiX,EAAY5T,EAAMmC,gBAAgBC,WAC9BwR,EAAY5T,EAAMmC,gBAAgBC,WAClCwR,EAAYG,QALlBV,EAAarT,EAAMzC,IAAM2B,EAOvBc,EAAMgC,cACRqR,EAAc,GAAErT,EAAMzC,mBAAoB,MAKhDgV,EACEpL,EAAc1O,KAAIuH,IACZA,EAAMgU,KACRC,EAAS,CAAE/U,MAAOc,EAAOgB,KAAM,SAAWmG,EAAekM,GAEzDrT,EAAMhB,UAAW,EAEU,iBAAlBgB,EAAMwC,UAAwBxC,EAAMwC,UAAU9C,MAAM,MAAM3H,OAAS,IAE5EiI,EAAK,mBAAyBA,EAAMwC,SACpCxC,EAAMwC,UAAW8G,EAAAA,GAAAA,GACftJ,EAAMwC,SACN,CAAEtD,MAAOc,EAAOgB,KAAM,SACtBmG,EACAkM,EACA,CACElV,KAAM6I,KAILhH,MAGX0S,EAAKO,MAAMlT,SAAQE,IACbA,EAAK+T,KACPC,EAAS,CAAE/U,MAAOe,EAAMe,KAAM,QAAUmG,EAAekM,GAEvDpT,EAAKjB,UAAW,KAGpB2T,EAAQD,GACRI,EAAqBO,GACrBf,EAAoB,IAAKD,KAAqBgB,KAC3B,SAAfrM,GAEOsM,IADTP,GAAiC,KAIlC,CAAC7L,KAEJrI,EAAAA,EAAAA,YAAU,KACR,IAAIqV,EAQJ,OAPInC,EAAS7K,WAA0C,iBAAtB6K,EAAS7K,UACxCgN,GAAe5S,EAAAA,EAAAA,wBACZ,yBAAwByQ,EAAS7K,eAAenL,EAAAA,MACjD8L,WAAU,EAAGhQ,KAAAA,KAAW4a,EAAa5a,KACD,iBAAtBka,EAAS7K,WACzBuL,EAAaV,EAAS7K,WAEjB,IAAMgN,GAAcC,gBAC1B,CAACpC,EAAS7K,YAEb,MAAM+M,EAAW,CAACG,EAAMlQ,EAA4BmQ,KAClD,MAAM,MAAEnV,EAAF,KAAS8B,GAASoT,EAClBpV,GAAWsK,EAAAA,GAAAA,GAAmBpK,EAAK,MAAUoV,mBAAoBF,EAAMlQ,EAAWmQ,EAAW,CACjGlW,KAAM6I,IAERoN,EAAKlV,MAAMF,SAAWA,EAEV,QAARgC,GACF9B,EAAK,SAAaa,SAAQkE,IACxBA,EAAQK,eAAiBtF,EACzB+E,GAA6B/E,EAAUiF,EAASC,MAGxC,WAARlD,GACF+C,GAA6B/E,EAAUE,EAAOgF,IAI5CqQ,GAAS1U,EAAAA,EAAAA,cAAY,CAAC2U,EAAqBpN,KAC3CrO,MAAMmN,QAAQkB,GAChBA,EAAIrH,SAAQsH,WACHA,EAAEoN,0BACFpN,EAAEqN,eACLC,EAAAA,EAAAA,IAAatN,EAAEI,qBACVJ,EAAEI,aAETJ,EAAEI,aAAa1H,SAAQ6U,WACdA,EAASH,0BACTG,EAASF,eACZC,EAAAA,EAAAA,IAAaC,EAASnN,sBACjBmN,EAASnN,gBAItB+M,EAAQ1Q,KAAKuD,cAGRD,EAAIqN,0BACJrN,EAAIsN,eACPC,EAAAA,EAAAA,IAAavN,EAAIK,qBACZL,EAAIK,aAEXL,EAAIK,aAAa1H,SAAQ6U,WAChBA,EAASH,0BACTG,EAASF,eACZC,EAAAA,EAAAA,IAAaC,EAASnN,sBACjBmN,EAASnN,gBAItB+M,EAAQ1Q,KAAKsD,MAEd,IAEGyB,GAAWhJ,EAAAA,EAAAA,cACfvB,IACE,IAAIuW,GAAgB,EAgBpB,OAdA5R,EACGxJ,QAAOuG,KAAUA,EAAMsE,gBAAmBtE,EAAM4C,UAAa5C,EAAMhB,WAAauD,EAAAA,EAAAA,GAAOvC,EAAMwC,aAC7F/I,QAAOuG,GAA6C,GAApCA,EAAK,YAAgBgC,cACrCjC,SAAQC,IACP,MAAMiC,EAASI,EAAAA,GAAAA,SAA4BrC,EAAO1B,EAAO0B,EAAMzC,KAC/D,GAAI0E,EAAOlK,OAMT,OALAiI,EAAK,WAAiB,IACjBA,EAAK,WACRiC,OAAQA,QAEV4S,GAAgB,OAIdA,IAEV,CAAC5R,IA+EGC,EAAgB,CAAC4R,EAAmB5V,EAAY0K,KACpD,MAAM5J,EAAQiD,EAAOnE,MAAKkB,GAASA,EAAMzC,IAAMuX,IACzCC,EAAahc,MAAMmN,QAAQlG,EAAM+U,YACnC,CAAC,CAAE/T,KAAM,wBAA0BhB,EAAM+U,YACzC,CAAC,CAAE/T,KAAM,sBACTjI,MAAMmN,QAAQlG,EAAM+U,YAGxB,MAAMC,EAAsB,CAC1B7L,kBAAmB,CAAEhL,KAAM6I,GAC3B1I,OAAQ,IAAKA,EAAQ,CAACwW,GAAY5V,GAClC+D,OAAAA,GAEF,IAAK,IAAIgS,KAAmBF,EAAY,CACtC,MAAM9S,EACJ6O,GAAamE,EAAgBjU,OAAO6H,SAAS7I,EAAOd,EAAO,IAAK8V,KAAwBC,KACxF,GAEF,GADArL,GAAaA,EAAU3H,GACnBA,EAAOlK,OACT,OAGmC,UAAnCiI,EAAMmC,gBAAgBC,YACxBlD,EAAQA,EAAQ1B,EAAAA,GAAcC,EAAAA,IAE5BuC,EAAMkV,iBACRlV,EAAMkV,gBAAgBnV,SAAQoV,IAC5B,MAAMC,EAAYnS,EAAOnE,MAAK0I,GAAKA,EAAEjK,IAAM4X,IAC3ClB,EAAS,CAAE/U,MAAOkW,EAAWpU,KAAM,SAAWiC,EAAQ,IAAK3E,EAAQ,CAACwW,GAAY5V,IAC5EkW,EAAS,qBACXA,EAAU5S,UAAW8G,EAAAA,GAAAA,GACnB8L,EAAS,mBACT,CAAElW,MAAOkW,EAAWpU,KAAM,SAC1BiC,EACA,IAAK3E,EAAQ,CAACwW,GAAY5V,GAC1B,CACEf,KAAM6I,KAIZ,IAAIqO,EAAc,IAAIpS,GACtB,MAAM/C,EAAQmV,EAAY3H,WAAUlG,GAAKA,EAAEjK,IAAM4X,IACjDE,EAAYnV,GAASkV,EACrB7C,EAAU8C,MAGVrV,EAAMsV,gBACRtV,EAAMsV,gBAAgBvV,SAAQoV,IAC5B,MAAMC,EAAY1C,EAAKO,MAAMnU,MAAK0I,GAAKA,EAAEzI,OAASoW,IAClDlB,EAAS,CAAE/U,MAAOkW,EAAWpU,KAAM,QAAUiC,EAAQ,IAAK3E,EAAQ,CAACwW,GAAY5V,IAC/E,IAAIqW,EAAY7C,EAChB,MAAMxS,EAAQqV,EAAUtC,MAAMvF,WAAUzN,GAAQA,EAAKlB,OAASoW,IAC9DI,EAAUrV,GAASkV,EACnBzC,EAAQ4C,OAQd,OAFAnD,EAASoD,IAAI9C,EAAK1K,KAAM,CAAEa,SAAUA,EAAU4M,OAvIpBnX,IACxB,MAAMoX,EAAmB,GACzBzS,EACGxJ,QAAOuG,GAASA,EAAMd,OAAuB,YAAdc,EAAMgB,OACrCvH,QAAOuG,KAAUA,EAAMsE,gBAAmBtE,EAAMhB,UAA2B,OAAdgB,EAAMgB,MAA+B,YAAdhB,EAAMgB,QAC1FvH,QAAOuG,IAAUA,EAAK,UACtBD,SAAQC,IACP,GAAkB,YAAdA,EAAMgB,KAAoB,CAC5B,MAAMuG,EAAW,CACfc,OAAQxN,EAAQ0C,GAChB+K,YAAa0J,EACblP,QAAS9C,EAAMmC,gBAAgBW,QAC/ByF,SAAUiK,EACVhK,MAAO,KACPf,aAAc,GACdtQ,KAAM6I,GAAOd,OAAO/H,KACpBwC,QAAQ,GAEV,IAAIgc,GAAW,EACf3V,EAAM4D,UAAU7D,SAAQ2T,IAClBA,EAAaxU,QACfyW,GAAW,EACP5c,MAAMmN,QAAQwN,EAAaxU,OAC7BqI,EAASE,aAAa3D,QAAQ4P,EAAaxU,OAE3CqI,EAASE,aAAa3D,KAAK4P,EAAaxU,WAI9CyW,GAAYpB,EAAOmB,EAAkBnO,QAErCgN,EAAOmB,EAAkB1V,EAAMd,UAKrC4P,EAAgB/O,SAAQqH,GAAOmN,EAAOmB,EAAkBtO,KACxD,IAAIwO,EAA8C,GAiClD,GAhCI1O,GACF5H,OAAOuW,OAAOD,EAAwB1O,GACtC0O,EAAsB,SAAepD,EAAkBrb,MAIpD,IADDye,EAAsB,mBAAuBlI,WAAUoI,GAAeA,EAAY7D,SAAS9a,MAAQ8a,MAGnG2D,EAAsB,mBAAyB,IAC1CA,EAAuBG,mBAC1B,CACE9D,SAAUA,EACV+D,cAAe,0CAIrBJ,EAAsB,IAAUF,GAEhCE,EAAyB,CACvB/a,QAASA,EAAQ0C,GACjB0Y,kBAAmBjE,EACnBzJ,SAAUiK,EAAkBrb,KAC5B0E,cAAekW,EAASlW,cACxBka,mBAAoB,CAClB,CACE9D,SAAUA,EACV+D,cAAe,yCAGnB5O,IAAKsO,GAGLE,EAAuBxO,KAAKrP,QAAU6d,EAAuBM,QAAQne,OAEvE,OhC9WC,SAAuBoe,EAAkCC,EAASC,GACvE,IAAIrc,EAAM,wBAIV,OAHIqc,IACFrc,GAAa,IAAGqc,MAEXjf,EAAAA,EAAAA,cAAa4C,EAAK,CACvBW,QAAS,CACP,eAAgB,oBAElBD,OAAQ,OACRE,KAAMwb,EACNE,OAAQH,EAAgBG,SgCmWfC,CADI,IAAIC,gBACUZ,EAAwB1O,GAAW/P,SAkE9D,kBAAC+J,EAAgBuV,SAAjB,CACEvX,MAAO,CACLZ,OAAQA,EACRuD,cAAeA,EACfiM,qBAAsBA,EACtB8E,mBAAoBA,EACpB9D,gBAAiBA,EACjB7L,OAAQA,EACRwG,iBAAAA,EACAnE,WAAAA,EACAC,gBAAAA,EACAkL,8BAAAA,IAEF,kBAACmB,GAAD,CAAeC,OAAQmB,IACtBN,EAAKO,MAAMxa,KAAI,CAACwH,EAAMC,KACjBqC,EAAAA,EAAAA,GAAOtC,EAAKjB,UACP,MAELuD,EAAAA,EAAAA,GAAOtC,EAAKiT,YAAcjT,EAAKyW,SAAShE,KACvB,SAAf1L,GAA2B/G,EAAKyW,SAAShE,KAAKxL,WAIlDjH,EAAKyW,QAAQhE,KAAKO,MAAQhT,EAAKyW,QAAQhE,KAAKO,MAAMxZ,QAAOwG,KAASsC,EAAAA,EAAAA,GAAOtC,EAAKiT,aAE5E,kBAACpB,GAAD,CACEtS,IAAKU,EACL6R,SAAU9R,EAAKyW,SAAShE,KACxB7X,QAASA,EACTmX,cAAeA,EACfC,SAAUA,EACV1J,SAAUA,EACVjK,OAAQA,EACR2S,YAAaA,EACbjK,YAAaA,EACbkL,gBAAiBA,EACjBI,oBAAqBA,EACrBD,iBAAkBA,EAClBF,mBAAoBA,EACpBtQ,cAAeA,EACfmP,gBAAiBA,EACjBoB,SAAUA,EACV7M,gBAAiBA,KAtBZ,KA2BT,kBAAC,GAAD,CACEtF,KAAMA,EACNiD,cAAeA,EACf8N,gBAAiBA,EACjBC,YAAaA,Q,gBChczB,MA4MA,GA5M0C,EACxCc,SAAAA,EACAsE,cAAAA,EACAlY,KAAAA,EACAwY,SAAAA,EACAvY,SAAAA,EACAC,YAAAA,EACAjD,YAAAA,MAEA,MAAOwb,EAAiBC,IAAsBjY,EAAAA,EAAAA,UAAS,OAChD2J,EAAUuF,IAAwBlP,EAAAA,EAAAA,UAAS,OAC5C,QAAE/D,IAAYic,EAAAA,EAAAA,YAAW1b,GACzB2b,GAAUC,EAAAA,EAAAA,mBACTC,EAAeC,IAAoBtY,EAAAA,EAAAA,UAAS,IAC7CuY,EAAU,IAAIrc,MACbmD,EAAiBkU,IAAsBvT,EAAAA,EAAAA,UAAS,IAAI9F,MACpDoF,EAAc8S,IAAmBpS,EAAAA,EAAAA,UAAS,KAC1CwY,EAAWC,IAAgBzY,EAAAA,EAAAA,WAAS,IACrC,EAAE0N,IAAMC,EAAAA,EAAAA,kBACRpT,GAAMme,EAAAA,EAAAA,QAAO,MACb/R,ECxDD,SAA4BpM,GACjC,MAAOgF,EAAMoZ,IAAW3Y,EAAAA,EAAAA,UAAoC,aACtD4Y,GAASvI,EAAAA,EAAAA,iBAaf,OAXApQ,EAAAA,EAAAA,YAAU,KACR,GAAI1F,GAAKse,QAAS,CAChB,MAAM1W,EAAQ5H,EAAIse,QAAQC,YAExBH,EADY,WAAVC,GAAuBzW,EAAQ,IACzB,YAEA,gBAGX,CAAC5H,GAAKse,QAASte,GAAKse,SAASC,YAAaF,IAEtCrZ,EDyCiBwZ,CAAmBxe,GACrCiZ,EAAW,IAAIwF,IACflF,GAAOrT,EAAAA,EAAAA,UAAQ,KACnB,MAAMwY,EAAuBnQ,KAAKC,MAAMD,KAAKE,UAAUmK,IACnDsE,IAAkBwB,EAAK3Q,YAEzB2Q,EAAK3Q,UAAYmP,GAEnB,IAAIyB,EAAID,EAAK5E,MAAMlb,OAEnB,KAAO+f,KAAK,CACV,MAAM7X,EAAO4X,EAAK5E,MAAM6E,IACpBvV,EAAAA,EAAAA,GAAOtC,EAAKiT,cAAe3Q,EAAAA,EAAAA,GAAOtC,EAAKjB,WAAaiB,EAAKyW,SAAShE,MAAM7W,eAAiBgc,EAAKhc,eAChGgc,EAAK5E,MAAMhD,OAAO6H,EAAG,KAAM7X,EAAKyW,QAAQhE,KAAKO,MAAMxZ,QAAOwG,KAASsC,EAAAA,EAAAA,GAAOtC,EAAKiT,cAGnF,OAAO2E,IACN,CAACxB,IAEErP,GAAc3H,EAAAA,EAAAA,UAAQ,IACtBlB,IAGAkY,EACK,OAEF,UACN,CAAClY,IAEE4Z,GAAc1Y,EAAAA,EAAAA,UAAQ,IACA,aAAnBkG,GAAkCtH,EAAgBoO,KAAO,GAC/D,CAAC9G,EAAiBtH,EAAgBoO,OAwErC,OAtEAxN,EAAAA,EAAAA,YAAU,MAKAmZ,EAAAA,EAAAA,oBACJ,IAAM,iCACN,CACEC,YAAa,0BACbC,WAAY,0BAYX,MACLC,EAAAA,EAAAA,QAAO,sCApBH,kCAsBL,KAEHtZ,EAAAA,EAAAA,YAAU,KACJkY,IACGV,GACHvI,EAAqBiJ,EAAQqB,iBAE/BvB,EAAmBE,EAAQH,gBAAgBzf,SAE5C,CAAC4f,IAsCF,kBAAC,KAAD,CACEsB,oBAAkB,EAClBpB,cAAeA,EACfqB,iBAAkBC,EAAAA,GAAW,IAC7B5B,SAAU,CAACrY,GAAUka,cAAAA,MAxCCla,CAAAA,IAExB,IAAIma,GAAe,EAQnB,GAPArG,EAASrS,SAAQwD,IACf,MAAMuE,EAASvE,GAASsF,WAAWvK,GAC9BwJ,IACH2Q,GAAe,MAIfA,EAAc,CAChB,MAAMC,EAAc,IAAItG,GAAU3Z,KAAI,EAAE+G,EAAK+D,KACpCA,GAASkS,SAASnX,KAE3BrF,QAAQC,IAAIwf,GAAa9gB,MAAKyC,IAChB,QAAR8D,GACFwa,EAAAA,EAAAA,WAAU,CACR5b,YAAauP,EAAE,2BAA4B,qCAC3CoF,MAAOpF,EAAE,gBAAiB,kBAC1BrL,KAAM,UACN2X,UAAU,KAGZD,EAAAA,EAAAA,WAAU,CACR5b,YAAauP,EAAE,2BAA4B,+BAC3CoF,MAAOpF,EAAE,gBAAiB,kBAC1BrL,KAAM,UACN2X,UAAU,IAGdjC,WAWAkC,CAAiBva,GACjBka,GAAc,MAEfM,GACC,kBAAC,KAAD,CAAMlc,UAAY,2DAA0DC,EAAAA,WAAmB1D,IAAKA,GAChG0B,EAGA,yBAAK+B,UAAWC,EAAAA,mBACbkb,GACC,kBAAC,EAAD,CACE9Z,gBAAiBA,EACjBC,aAAcA,EACdC,KAAMA,EACNC,SAAUA,EACVC,YAAaA,EACbC,OAAQwa,EAAMxa,OACdC,UAAWua,EAAMva,UACjBC,oBAAqBuT,EAASvT,oBAC9BC,YAAasT,EAAStT,cAI1B,yBAAK7B,UAAWC,EAAAA,aACM,aAAnB0I,GAAkC,kBAAC,KAAD,CAAe1K,QAASA,EAASsC,qBAAqB,IACxFuV,EAAKqG,UACJ,yBAAKnc,UAAWC,EAAAA,mBACd,kBAAC,KAAD,CAAe6T,SAAUgC,EAAKqG,SAAShf,KAAK,SAGhD,yBACE6C,UAAY,GAAEC,EAAAA,wCACS,aAAnB0I,EAAkC,GAAE1I,EAAAA,0BAAmC,0BAE3E,kBAACiV,GAAD,CACEC,SAAUW,EACV7X,QAASA,EACTmX,cAAemF,EACflF,SAAU2E,EACVrO,SAAUA,EACVjK,OAAQwa,EAAMxa,OACd2S,YAAamG,EACbpQ,YAAaA,EACbkL,gBAAiBjU,EACjBqU,oBAAqB4E,EACrB7E,iBAAkB4E,EAClB9E,mBAAoBA,EACpBtQ,cAAeiX,EAAMjX,cACrBmP,gBAAiBA,EACjBoB,SAAUA,EACV7M,gBAAiBA,KAGD,aAAnBA,GACC,yBAAK3I,UAAWC,EAAAA,iBACd,kBAACiE,EAAA,EAAD,CACEG,KAAK,YACLd,QAAS,KACP/B,GAAYA,IACZC,GAAeA,MAER,QAARF,EAAiB,QAAU,UAErB,QAARA,GAAkB,kBAAC2C,EAAA,EAAD,CAAQE,KAAK,UAAb,WAzD3B,kBAAC,IAAD,W,6BEvKL,SAASuB,EAAOrD,GACrB,MAAoB,kBAATA,EACFA,EAEW,iBAATA,EACO,QAATA,IAGAA,E,ofCAJ,SAASoK,mBACd0P,WACA5E,KACAlQ,UACA+U,eACAzU,SAEA,MAAM0U,cAAgBhV,UAAUzL,KAAI+O,GAAKA,EAAEjK,KACrC4b,MAAQH,WAAW7K,OAAOzO,MAAM,MAEhC,cAAoB8E,QAE1B,SAAS7E,QAAQT,GACf,OAAIga,cAAc7U,SAASnF,IACzBka,mBACEhF,KACAlQ,UAAUpF,MAAKua,GAAaA,EAAU9b,IAAM2B,MAEvCyV,EAAAA,6DAAAA,IAAasE,eAAe/Z,MAE9ByV,EAAAA,6DAAAA,IAAazV,GAGtB,SAASoa,QACP,OAAO,IAAIxe,KAGb,SAASuJ,SAASkV,EAAYra,GAC5B,QAAIga,cAAc7U,SAASkV,KACzBH,mBACEhF,KACAlQ,UAAUpF,MAAKua,GAAaA,EAAU9b,KAAOgc,KAExCN,eAAeM,IAAalV,SAASnF,IAKhD,SAASsa,aAAaC,EAAYC,EAAsB/hB,GACtD,IAAIgiB,EAAiBD,EAIrB,MAHoB,iBAATA,IACTC,EAAYhiB,EAASD,6CAAAA,CAAOgiB,EAAO/hB,GAAQ,GAAMsQ,SAAWvQ,6CAAAA,CAAOgiB,EAAO,cAAc,GAAMzR,UAEzFwR,GAAMxQ,UAAY0Q,EAAU1Q,UAGrC,SAAS2Q,cAAcL,GACrB,OAAIL,cAAc7U,SAASkV,GAClBN,eAAeM,GAEjB,KAGTJ,MAAMpZ,SAAQ,CAAC8Z,EAAM3Z,KACnB,GAAIA,EAAQ,GAAK,GACXgZ,cAAc7U,SAASwV,GAAO,CAChC,MAAMC,EAAc5V,UAAUpF,MAAKkB,GAASA,EAAMzC,KAAOsc,IACzDT,mBAAmBhF,KAAM0F,GAEzB,IAAIC,EAAmBd,eAAeY,GACO,UAAzCC,EAAY3X,gBAAgBC,YAC9B2X,EAAmBA,EAAmBvc,wCAAAA,GAAcC,wCAAAA,IAEvB,iBAApBsc,IACTA,EAAoB,IAAGA,MAEzB,MAAMC,EAAO,IAAIC,OAAOJ,EAAM,KAC9Bb,WAAaA,WAAW7Z,QAAQ6a,EAAMD,OAI5C,IACE,OAAOG,KAAKlB,YACZ,MAAO1e,GACP6f,QAAQ7f,MAAMA,GAEhB,OAAO,EAGT,SAAS8e,mBAAmBhF,EAAgB0F,GAC1C,OAAQ1F,EAAKpT,MACX,IAAK,OACE8Y,EAAYxE,iBACfwE,EAAYxE,eAAiB,IAAIxc,KAEnCghB,EAAYxE,eAAenC,IAAIiB,EAAKlV,MAAMH,OAC1C,MACF,IAAK,UACE+a,EAAYM,oBACfN,EAAYM,kBAAoB,IAAIthB,KAEtCghB,EAAYM,kBAAkBjH,IAAIiB,EAAKlV,MAAMH,OAC/C,QACO+a,EAAY5E,kBACf4E,EAAY5E,gBAAkB,IAAIpc,KAEpCghB,EAAY5E,gBAAgB/B,IAAIiB,EAAKlV,MAAL,O,gFC5G/B,MAAM6K,EAAuB,iBAEvB1H,EAAqC,CAChDwG,SAAU,CAAC7I,EAAsBd,IAC3Bc,EAAK,YAAgBgC,YAChB,KAELO,EAAAA,EAAAA,GAAOvC,EAAMqa,YAAa9X,EAAAA,EAAAA,GAAOvC,EAAMgC,eACrCrC,EAAQT,GACH,CAAC,CAAE0F,QAASmF,EAAsBlF,WAAY,uBAGlD,IAIJ,SAASlF,EAAQT,GACtB,OAAIA,MAAAA,GAAmD,KAAVA,GAGzB,iBAATA,IAAsBA,GAAOiP,WAGpCpV,MAAMmN,QAAQhH,IAAWA,EAAMnH,U,iBCxBrCuiB,EADkC,EAAQ,MAChCC,EAA4B,IAE9BzW,KAAK,CAAC0W,EAAOjd,GAAI,8IAA+I,KAExK+c,EAAQG,OAAS,CAChB,iBAAoB,6DAErBD,EAAOF,QAAUA,G,iBCPjBA,EADkC,EAAQ,MAChCC,EAA4B,IAE9BzW,KAAK,CAAC0W,EAAOjd,GAAI,8iEAA+iE,KAExkE+c,EAAQG,OAAS,CAChB,oBAAuB,4DACvB,oBAAuB,4DACvB,oBAAuB,4DACvB,oBAAuB,4DACvB,oBAAuB,4DACvB,oBAAuB,4DACvB,YAAe,oDACf,aAAgB,qDAChB,YAAe,oDACf,WAAc,mDACd,WAAc,mDACd,QAAW,gDACX,OAAU,+CACV,OAAU,+CACV,uBAA0B,gEAE3BD,EAAOF,QAAUA,G,iBCrBjBA,EADkC,EAAQ,MAChCC,EAA4B,IAE9BzW,KAAK,CAAC0W,EAAOjd,GAAI,+9KAAg+K,KAEz/K+c,EAAQG,OAAS,CAChB,oBAAuB,oDACvB,oBAAuB,oDACvB,oBAAuB,oDACvB,oBAAuB,oDACvB,oBAAuB,oDACvB,oBAAuB,oDACvB,YAAe,4CACf,aAAgB,6CAChB,YAAe,4CACf,WAAc,2CACd,WAAc,2CACd,QAAW,wCACX,OAAU,uCACV,OAAU,uCACV,UAAa,0CACb,mBAAsB,mDACtB,eAAkB,+CAClB,cAAiB,8CACjB,oBAAuB,oDACvB,uBAA0B,uDAC1B,oBAAuB,oDACvB,iBAAoB,iDACpB,cAAiB,8CACjB,eAAkB,+CAClB,gBAAmB,gDACnB,oBAAuB,oDACvB,iBAAoB,iDACpB,2BAA4B,yDAC5B,mBAAsB,mDACtB,YAAe,4CACf,YAAe,4CACf,WAAc,2CACd,eAAkB,+CAClB,qBAAwB,qDACxB,UAAa,2CAEdD,EAAOF,QAAUA,G,iBCzCjBA,EADkC,EAAQ,MAChCC,EAA4B,IAE9BzW,KAAK,CAAC0W,EAAOjd,GAAI,84FAA+4F,KAEx6F+c,EAAQG,OAAS,CAChB,oBAAuB,mDACvB,oBAAuB,mDACvB,oBAAuB,mDACvB,oBAAuB,mDACvB,oBAAuB,mDACvB,oBAAuB,mDACvB,YAAe,2CACf,aAAgB,4CAChB,YAAe,2CACf,WAAc,0CACd,WAAc,0CACd,QAAW,uCACX,OAAU,sCACV,OAAU,sCACV,QAAW,uCACX,YAAe,2CACf,WAAc,0CACd,UAAa,yCACb,SAAY,wCACZ,YAAe,2CACf,eAAkB,8CAClB,eAAkB,+CAEnBD,EAAOF,QAAUA,G,iBC5BjBA,EADkC,EAAQ,MAChCC,EAA4B,IAE9BzW,KAAK,CAAC0W,EAAOjd,GAAI,4mBAA6mB,KAEtoB+c,EAAQG,OAAS,CAChB,QAAW,mDACX,aAAgB,wDAChB,iBAAoB,6DAErBD,EAAOF,QAAUA,G,eCTjBA,EADkC,EAAQ,MAChCC,EAA4B,IAE9BzW,KAAK,CAAC0W,EAAOjd,GAAI,66HAA86H,KAEv8H+c,EAAQG,OAAS,CAChB,oBAAuB,yEACvB,oBAAuB,yEACvB,oBAAuB,yEACvB,oBAAuB,yEACvB,oBAAuB,yEACvB,oBAAuB,yEACvB,YAAe,iEACf,aAAgB,kEAChB,YAAe,iEACf,WAAc,gEACd,WAAc,gEACd,QAAW,6DACX,OAAU,4DACV,OAAU,4DACV,QAAW,6DACX,YAAe,iEACf,eAAkB,oEAClB,KAAQ,0DACR,eAAkB,oEAClB,qBAAwB,0EACxB,mBAAsB,wEACtB,mBAAsB,wEACtB,sBAAyB,4EAE1BD,EAAOF,QAAUA,G,iBC7BjBA,EADkC,EAAQ,MAChCC,EAA4B,IAE9BzW,KAAK,CAAC0W,EAAOjd,GAAI,qRAAsR,KAE/S+c,EAAQG,OAAS,CAChB,cAAiB,6DACjB,cAAiB,8DAElBD,EAAOF,QAAUA,G,iBCRjBA,EADkC,EAAQ,MAChCC,EAA4B,IAE9BzW,KAAK,CAAC0W,EAAOjd,GAAI,owCAAqwC,KAE9xC+c,EAAQG,OAAS,CAChB,SAAY,4CACZ,kBAAqB,qDACrB,YAAe,+CACf,gBAAmB,mDACnB,wBAA2B,2DAC3B,gBAAmB,mDACnB,kBAAqB,sDAEtBD,EAAOF,QAAUA","sources":["webpack://openmrs-ohri-app/./src/api/api.ts","webpack://openmrs-ohri-app/./src/components/loading/loading.component.scss?53a1","webpack://openmrs-ohri-app/./src/components/loading/loading.component.tsx","webpack://openmrs-ohri-app/./src/components/patient-banner/patient-banner.scss?0769","webpack://openmrs-ohri-app/./src/components/patient-banner/patient-banner.component.tsx","webpack://openmrs-ohri-app/./src/forms/constants.ts","webpack://openmrs-ohri-app/./src/forms/ohri-form.scss?032c","webpack://openmrs-ohri-app/./src/forms/components/sidebar/ohri-form-sidebar.component.scss?4f61","webpack://openmrs-ohri-app/./src/utils/ohri-sidebar.ts","webpack://openmrs-ohri-app/./src/forms/components/sidebar/ohri-form-sidebar.component.tsx","webpack://openmrs-ohri-app/./src/forms/ohri-form-context.tsx","webpack://openmrs-ohri-app/./src/forms/ohri-form.resource.ts","webpack://openmrs-ohri-app/./src/forms/components/inputs/_input.scss?b199","webpack://openmrs-ohri-app/./src/forms/components/inputs/unspecified/ohri-unspecified.component.tsx","webpack://openmrs-ohri-app/./src/forms/components/section/ohri-form-section.scss?1b24","webpack://openmrs-ohri-app/./src/forms/components/section/ohri-form-section.component.tsx","webpack://openmrs-ohri-app/./src/forms/components/group/ohri-obs-group.component.tsx","webpack://openmrs-ohri-app/./src/forms/utils/ohri-form-helper.ts","webpack://openmrs-ohri-app/./src/forms/validators/default-value-validator.ts","webpack://openmrs-ohri-app/./src/forms/components/label/ohri-label.component.tsx","webpack://openmrs-ohri-app/./src/forms/components/value/ohri-value.component.tsx","webpack://openmrs-ohri-app/./src/forms/components/value/view/ohri-field-value-view.scss?f877","webpack://openmrs-ohri-app/./src/forms/components/value/view/ohri-field-value-view.component.tsx","webpack://openmrs-ohri-app/./src/forms/components/repeat/ohri-repeat.component.tsx","webpack://openmrs-ohri-app/./src/forms/submission-handlers/base-handlers.ts","webpack://openmrs-ohri-app/./src/forms/components/inputs/markdown/ohri-markdown.component.tsx","webpack://openmrs-ohri-app/./src/forms/validators/ohri-date-validator.ts","webpack://openmrs-ohri-app/./src/forms/validators/ohri-js-expression-validator.ts","webpack://openmrs-ohri-app/./src/forms/registry/registry.ts","webpack://openmrs-ohri-app/./src/forms/components/inputs/text/ohri-text.component.tsx","webpack://openmrs-ohri-app/./src/forms/components/inputs/radio/ohri-radio.component.tsx","webpack://openmrs-ohri-app/./src/forms/components/inputs/date/ohri-date.component.tsx","webpack://openmrs-ohri-app/./src/forms/components/inputs/number/ohri-number.component.tsx","webpack://openmrs-ohri-app/./src/forms/components/inputs/multi-select/ohri-multi-select.component.tsx","webpack://openmrs-ohri-app/./src/forms/components/inputs/content-switcher/ohri-content-switcher.component.tsx","webpack://openmrs-ohri-app/./src/forms/components/inputs/location/ohri-encounter-location.component.tsx","webpack://openmrs-ohri-app/./src/forms/components/inputs/select/ohri-dropdown.component.tsx","webpack://openmrs-ohri-app/./src/forms/components/inputs/text-area/ohri-text-area.component.tsx","webpack://openmrs-ohri-app/./src/forms/components/inputs/toggle/ohri-toggle.component.tsx","webpack://openmrs-ohri-app/./src/forms/components/inputs/fixed-value/ohri-fixed-value.component.tsx","webpack://openmrs-ohri-app/./src/forms/components/page/_page.scss?989f","webpack://openmrs-ohri-app/./src/forms/components/page/ohri-form-page.tsx","webpack://openmrs-ohri-app/./src/forms/utils/instant-effect.ts","webpack://openmrs-ohri-app/./src/forms/components/encounter/ohri-encounter-form.tsx","webpack://openmrs-ohri-app/./src/forms/ohri-form.component.tsx","webpack://openmrs-ohri-app/./src/forms/utils/useWorkspaceLayout.ts","webpack://openmrs-ohri-app/./src/forms/utils/boolean-utils.ts","webpack://openmrs-ohri-app/./src/forms/utils/expression-runner.ts","webpack://openmrs-ohri-app/./src/forms/validators/ohri-form-validator.ts","webpack://openmrs-ohri-app/./src/components/loading/loading.component.scss","webpack://openmrs-ohri-app/./src/components/patient-banner/patient-banner.scss","webpack://openmrs-ohri-app/./src/forms/components/inputs/_input.scss","webpack://openmrs-ohri-app/./src/forms/components/page/_page.scss","webpack://openmrs-ohri-app/./src/forms/components/section/ohri-form-section.scss","webpack://openmrs-ohri-app/./src/forms/components/sidebar/ohri-form-sidebar.component.scss","webpack://openmrs-ohri-app/./src/forms/components/value/view/ohri-field-value-view.scss","webpack://openmrs-ohri-app/./src/forms/ohri-form.scss"],"sourcesContent":["import { openmrsFetch } from '@openmrs/esm-framework';\nimport moment from 'moment';\nimport { getObsFromEncounter } from '../components/encounter-list/encounter-list.component';\nimport {\n  finalHIVCodeConcept,\n  finalPositiveHIVValueConcept,\n  computedHIV_StatusConcept,\n  encounterRepresentation,\n  covidOutcomeUUID,\n  covid_Assessment_EncounterUUID,\n  covidOutcomesCohortUUID,\n} from '../constants';\n\nconst BASE_WS_API_URL = '/ws/rest/v1/';\nconst BASE_FHIR_API_URL = '/ws/fhir2/R4/';\n\nexport function fetchLastVisit(uuid: string) {\n  return openmrsFetch(`/ws/fhir2/R4/Encounter?patient=${uuid}&_sort=-date&_count=1`);\n}\n\nexport function fetchPatientList(offSet: number = 1, pageSize: number = 10) {\n  return openmrsFetch(`/ws/fhir2/R4/Patient?_getpagesoffset=${offSet}&_count=${pageSize}`);\n}\n\nexport function fetchTodayClients() {\n  let date = moment().format('YYYY-MM-DD');\n  return openmrsFetch(`/ws/fhir2/R4/Encounter?date=${date}`).then(({ data }) => {\n    if (data.entry?.length) {\n      return cleanDuplicatePatientReferences(data);\n    }\n    return [];\n  });\n}\n\nexport function fetchPatientsFromObservationCodeConcept(\n  codeConcept: string,\n  valueConcept?: string,\n  cutOffDays?: number,\n) {\n  let endDate = moment().format('YYYY-MM-DD');\n  let startDate = moment()\n    .subtract(cutOffDays, 'days')\n    .format('YYYY-MM-DD');\n\n  return openmrsFetch(\n    `/ws/fhir2/R4/Observation?code=${codeConcept}${valueConcept ? `&value-concept=${valueConcept}` : ''}${\n      cutOffDays ? `&_lastUpdated=ge${startDate}&_lastUpdated=le${endDate}` : ''\n    }`,\n  ).then(({ data }) => {\n    if (data.entry?.length) {\n      return cleanDuplicatePatientReferences(data);\n    }\n    return [];\n  });\n}\n\nfunction cleanDuplicatePatientReferences(data) {\n  let patientRefs = data.entry.map(enc => {\n    return enc.resource.subject.reference;\n  });\n  patientRefs = new Set([...patientRefs]);\n  patientRefs = Array.from(patientRefs);\n  return Promise.all(\n    patientRefs.map(ref => {\n      return openmrsFetch(BASE_FHIR_API_URL + ref);\n    }),\n  );\n}\n\nexport function performPatientSearch(query, objectVersion) {\n  return openmrsFetch(`${BASE_WS_API_URL}/patient?q=${query}${objectVersion ? `&v=${objectVersion}` : ''}`, {\n    method: 'GET',\n  });\n}\n\nexport function getPatients(searchPhrase?: string, offset?: number, pageSize: number = 10) {\n  return openmrsFetch(\n    `/ws/fhir2/R4/Patient?_count=${pageSize}${searchPhrase ? `&name=${searchPhrase}` : ''}${\n      offset ? `&_getpagesoffset=${offset}` : ''\n    }`,\n    {\n      method: 'GET',\n    },\n  );\n}\n\nexport async function getCohort(cohortUuid: string, version?: string) {\n  const { data } = await openmrsFetch(\n    BASE_WS_API_URL + `cohortm/cohort/${cohortUuid}${version ? `?v=${version}` : ``}`,\n  );\n  data.cohortMembers = data.cohortMembers.filter(member => !member.voided);\n  return data;\n}\n\nexport async function getReportingCohort(cohortUuid: string, queryParams?: string[]) {\n  const params = queryParams ? queryParams.join('&') : '';\n  const url = params ? `reportingrest/cohort/${cohortUuid}?${params}` : `reportingrest/cohort/${cohortUuid}`;\n  const { data } = await openmrsFetch(BASE_WS_API_URL + url);\n  return data;\n}\n\nexport async function getReportingCohortMembers(cohortUuid: string, queryParams?: string[]) {\n  const params = queryParams ? queryParams.join('&') : '';\n  const url = params ? `reportingrest/cohort/${cohortUuid}?${params}` : `reportingrest/cohort/${cohortUuid}`;\n  const { data } = await openmrsFetch(BASE_WS_API_URL + url);\n  return Promise.all(\n    data.members.map(member => {\n      return openmrsFetch(BASE_WS_API_URL + `patient/${member.uuid}?v=full`);\n    }),\n  );\n}\n\nexport async function getCohorts(cohortTypeUuid?: string) {\n  const {\n    data: { results, error },\n  } = await openmrsFetch(\n    BASE_WS_API_URL +\n      `cohortm/cohort?v=custom:(uuid,name,voided)${cohortTypeUuid ? `&cohortType=${cohortTypeUuid}` : ''}`,\n  );\n  if (error) {\n    throw error;\n  }\n  return results.filter(cohort => !cohort.voided);\n}\n\nexport function addPatientToCohort(patientUuid: string, cohortUuid: string) {\n  return openmrsFetch(`${BASE_WS_API_URL}cohortm/cohortmember`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: {\n      patient: patientUuid,\n      cohort: cohortUuid,\n      startDate: new Date(),\n    },\n  });\n}\n\nexport function evictCohortMembership(membershipUuid: string) {\n  return openmrsFetch(`${BASE_WS_API_URL}cohortm/cohortmember/${membershipUuid}`, { method: 'DELETE' });\n}\n\nexport async function getPatientListsForPatient(patientUuid: string) {\n  const {\n    data: { results, error },\n  } = await openmrsFetch(`${BASE_WS_API_URL}cohortm/cohortmember?patient=${patientUuid}&v=full`);\n  if (error) {\n    throw error;\n  }\n  return results.filter(membership => !membership.voided);\n}\n\nexport function fetchPatientsFinalHIVStatus(patientUUID: string) {\n  return openmrsFetch(\n    `/ws/fhir2/R4/Observation?code=${finalHIVCodeConcept}&value-concept=${finalPositiveHIVValueConcept}&patient=${patientUUID}&_sort=-date&_count=1`,\n  ).then(({ data }) => {\n    if (data.entry?.length) {\n      return data.entry[0].resource.valueCodeableConcept.coding[0].display;\n    }\n    return '';\n  });\n}\n\nexport function fetchPatientObservationFromEncounter(\n  patientUUID: string,\n  encounterUUID: string,\n  observationCode: string,\n) {\n  return openmrsFetch(\n    `/ws/fhir2/R4/Observation?patient=${patientUUID}&encounter=${encounterUUID}&code=${observationCode}&_sort=-date&_count=1`,\n  );\n}\n\nexport function fetchPatientComputedConcept_HIV_Status(patientUUID: string) {\n  return openmrsFetch(\n    `/ws/fhir2/R4/Observation?code=${computedHIV_StatusConcept}&value-concept=${computedHIV_StatusConcept}&patient=${patientUUID}&_sort=-date&_count=1`,\n  ).then(({ data }) => {\n    if (data.entry?.length) {\n      return data.entry[0].resource.valueCodeableConcept.coding[0].display;\n    }\n    return '';\n  });\n}\n\n// TODO: the WS/REST Encounter resource doesn't support sorting, figure out a better approach ie. FHIR or Reporting\nexport function fetchPatientLastEncounter(patientUuid: string, encounterType) {\n  const query = `encounterType=${encounterType}&patient=${patientUuid}`;\n  return openmrsFetch(`/ws/rest/v1/encounter?${query}&v=${encounterRepresentation}`).then(({ data }) => {\n    if (data.results.length) {\n      return data.results[data.results.length - 1];\n    }\n\n    return null;\n  });\n}\n\nexport function fetchPatientCovidOutcome() {\n  return openmrsFetch(`/ws/rest/v1/reportingrest/cohort/${covidOutcomesCohortUUID}`).then(({ data }) => {\n    if (data.members?.length) {\n      let patientRefs = data.members.map(member => {\n        return member.uuid;\n      });\n      patientRefs = new Set([...patientRefs]);\n      patientRefs = Array.from(patientRefs);\n      return Promise.all(\n        patientRefs.map(ref => {\n          return openmrsFetch(BASE_FHIR_API_URL + '/Person/' + ref);\n        }),\n      );\n    }\n    return [];\n  });\n}\n\nexport function fetchConceptNameByUuid(conceptUuid: string) {\n  return openmrsFetch(`/ws/rest/v1/concept/${conceptUuid}/name?limit=1`).then(({ data }) => {\n    if (data.results.length) {\n      const concept = data.results[data.results.length - 1];\n      return concept.display;\n    }\n  });\n}\n","\n      import API from \"!../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./loading.component.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./loading.component.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport Loading from 'carbon-components-react/es/components/Loading';\nimport styles from './loading.component.scss';\n\nconst LoadingIcon: React.FC = () => (\n  <div className={styles['centerLoadingSVG']}>\n    <Loading description=\"Active loading indicator\" withOverlay={false} small />\n  </div>\n);\n\nexport default LoadingIcon;\n","\n      import API from \"!../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./patient-banner.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./patient-banner.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { ExtensionSlot } from '@openmrs/esm-framework';\nimport React from 'react';\nimport styles from './patient-banner.scss';\n\nexport const PatientBanner: React.FC<{ patient: any; hideActionsOverflow?: any }> = ({\n  patient,\n  hideActionsOverflow,\n}) => {\n  return (\n    <div className={styles.patientBannerContainer}>\n      <ExtensionSlot\n        extensionSlotName=\"patient-header-slot\"\n        state={{\n          patient,\n          patientUuid: patient.id,\n          hideActionsOverflow,\n        }}\n      />\n    </div>\n  );\n};\n","export const HTSEncounterType = '30b849bd-c4f4-4254-a033-fe9cf01001d8';\nexport const ConceptTrue = 'cf82933b-3f3f-45e7-a5ab-5d31aaee3da3';\nexport const ConceptFalse = '488b58ff-64f5-4f8a-8979-fa79940b1594';\nexport const UnspecifiedValue = 'OHRI_UNSPECIFIED';\n","\n      import API from \"!../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./ohri-form.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./ohri-form.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./ohri-form-sidebar.component.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./ohri-form-sidebar.component.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","export function scrollIntoView(viewId: string) {\n  document.getElementById(viewId).scrollIntoView({\n    behavior: 'smooth',\n    block: 'start',\n    inline: 'start',\n  });\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport styles from './ohri-form-sidebar.component.scss';\nimport { scrollIntoView } from '../../../utils/ohri-sidebar';\nimport { Button, Toggle } from 'carbon-components-react';\nimport { isEmpty } from '../../validators/ohri-form-validator';\n\nfunction OHRIFormSidebar({\n  scrollAblePages,\n  selectedPage,\n  mode,\n  onCancel,\n  handleClose,\n  values,\n  setValues,\n  allowUnspecifiedAll,\n  defaultPage,\n}) {\n  const [activeLink, setActiveLink] = useState(selectedPage);\n\n  useEffect(() => {\n    if (defaultPage && [...scrollAblePages].find(({ label, isHidden }) => label === defaultPage && !isHidden)) {\n      scrollIntoView(joinWord(defaultPage));\n    }\n  }, [defaultPage]);\n\n  const joinWord = value => {\n    return value.replace(/\\s/g, '');\n  };\n\n  const unspecifiedFields = useMemo(() => {\n    return (\n      Object.keys(values)\n        .filter(key => key.endsWith('-unspecified'))\n        // find parent control\n        .map(key => key.split('-unspecified')[0])\n        // factor-out those with values\n        .filter(key => isEmpty(values[key]))\n        // return the unspecified control keys\n        .map(key => `${key}-unspecified`)\n    );\n  }, [values]);\n\n  const handleClick = selected => {\n    const activeID = selected.replace(/\\s/g, '');\n    setActiveLink(selected);\n    scrollIntoView(activeID);\n  };\n\n  const markAllAsUnspecified = useCallback(\n    toggled => {\n      if (toggled) {\n        unspecifiedFields.forEach(field => {\n          values[field] = true;\n        });\n      } else {\n        unspecifiedFields.forEach(field => {\n          values[field] = false;\n        });\n      }\n      setValues(values);\n    },\n    [unspecifiedFields],\n  );\n  return (\n    <div className={styles.sidebar}>\n      {[...scrollAblePages].map((page, index) => {\n        return (\n          !page.isHidden && (\n            <div\n              aria-hidden=\"true\"\n              className={joinWord(page.label) === selectedPage ? styles.sidebarSectionActive : styles.sidebarSection}\n              key={index}\n              onClick={() => handleClick(page.label)}>\n              {/* eslint-disable-next-line no-console */}\n              <div className={styles.sidebarSectionLink}>{page.label}</div>\n            </div>\n          )\n        );\n      })}\n      <hr className={styles.sideBarHorizontalLine} />\n      <div className={styles.sidenavActions}>\n        {allowUnspecifiedAll && (\n          <div style={{ marginBottom: '.6rem' }}>\n            <Toggle\n              labelText=\"\"\n              id=\"auto-unspecifier\"\n              labelA=\"Unspecify All\"\n              labelB=\"Revert\"\n              onToggle={markAllAsUnspecified}\n            />\n          </div>\n        )}\n        {mode != 'view' && (\n          <Button style={{ marginBottom: '0.625rem', width: '11rem' }} type=\"submit\">\n            Save\n          </Button>\n        )}\n        <Button\n          style={{ width: '11rem' }}\n          kind=\"tertiary\"\n          onClick={() => {\n            onCancel && onCancel();\n            handleClose && handleClose();\n          }}>\n          {mode == 'view' ? 'Close' : 'Cancel'}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default OHRIFormSidebar;\n","import { LayoutType } from '@openmrs/esm-framework';\nimport React from 'react';\nimport { SessionMode } from './types';\n\ntype OHRIFormContextProps = {\n  values: Record<string, any>;\n  setFieldValue: (field: string, value: any, shouldValidate?: boolean) => void;\n  setEncounterLocation: (value: any) => void;\n  obsGroupsToVoid: Array<any>;\n  setObsGroupsToVoid: (value: any) => void;\n  encounterContext: EncounterContext;\n  fields: any;\n  isFieldInitializationComplete: boolean;\n  layoutType?: LayoutType;\n  workspaceLayout?: 'minimized' | 'maximized';\n};\n\nexport interface EncounterContext {\n  patient: any;\n  encounter: any;\n  location: any;\n  sessionMode: SessionMode;\n  date: Date;\n}\n\nexport const OHRIFormContext = React.createContext<OHRIFormContextProps | undefined>(undefined);\n","import { openmrsFetch, openmrsObservableFetch } from '@openmrs/esm-framework';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport function saveEncounter(abortController: AbortController, payload, encounterUuid?: string) {\n  let url = '/ws/rest/v1/encounter';\n  if (encounterUuid) {\n    url = url + `/${encounterUuid}`;\n  }\n  return openmrsFetch(url, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n    body: payload,\n    signal: abortController.signal,\n  });\n}\n\nexport function getConcept(conceptUuid: string, v: string): Observable<any> {\n  return openmrsObservableFetch(`/ws/rest/v1/concept/${conceptUuid}?v=${v}`).pipe(map(response => response['data']));\n}\n\nexport function getLocationsByTag(tag: string): Observable<{ uuid: string; display: string }[]> {\n  return openmrsObservableFetch(`/ws/rest/v1/location?tag=${tag}&v=custom:(uuid,display)`).pipe(\n    map(({ data }) => data['results']),\n  );\n}\n","\n      import API from \"!../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./_input.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./_input.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { Checkbox } from 'carbon-components-react';\nimport { useField } from 'formik';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport styles from '../_input.scss';\nimport { OHRIFieldValidator } from '../../../validators/ohri-form-validator';\nimport { OHRIFormField } from '../../../types';\nimport { isTrue } from '../../../utils/boolean-utils';\n\nexport const OHRIUnspecified: React.FC<{\n  question: OHRIFormField;\n}> = ({ question }) => {\n  const [field, meta] = useField(`${question.id}-unspecified`);\n  const { setFieldValue } = React.useContext(OHRIFormContext);\n  const [previouslyUnspecified, setPreviouslyUnspecified] = useState(false);\n\n  useEffect(() => {\n    if (field.value) {\n      setPreviouslyUnspecified(true);\n      question['submission'] = {\n        unspecified: true,\n        errors: [],\n      };\n      let emptyValue = null;\n      switch (question.questionOptions.rendering) {\n        case 'date':\n          emptyValue = '';\n          break;\n        case 'checkbox':\n          emptyValue = [];\n      }\n      setFieldValue(question.id, emptyValue);\n      question.value = null;\n    } else if (previouslyUnspecified && !question.value) {\n      question['submission'] = {\n        unspecified: false,\n        errors: OHRIFieldValidator.validate(question, null),\n      };\n    }\n  }, [field.value]);\n\n  useEffect(() => {\n    if (question.value) {\n      setFieldValue(`${question.id}-unspecified`, false);\n    }\n  }, [question.value]);\n\n  const handleOnChange = useCallback(value => {\n    setFieldValue(`${question.id}-unspecified`, value);\n  }, []);\n\n  return (\n    !question.isHidden &&\n    !isTrue(question.readonly) && (\n      <div className={styles.unspecified}>\n        <Checkbox\n          id={`${question.id}-unspcified`}\n          labelText=\"Unspecified\"\n          value=\"Unspecified\"\n          onChange={handleOnChange}\n          checked={field.value}\n          disabled={question.disabled}\n        />\n      </div>\n    )\n  );\n};\n","\n      import API from \"!../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./ohri-form-section.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./ohri-form-section.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useCallback, useState } from 'react';\nimport styles from './ohri-form-section.scss';\nimport { getFieldComponent, getHandler } from '../../registry/registry';\nimport { OHRIUnspecified } from '../inputs/unspecified/ohri-unspecified.component';\nimport { OHRIFormField } from '../../types';\nimport { isTrue } from '../../utils/boolean-utils';\n\nexport const getFieldControl = (question: OHRIFormField) => {\n  // Check if a concept wasn't provided\n  if (question.type == 'obs' && !question.questionOptions.concept) {\n    // Disable the control\n    question.disabled = true;\n    // Since we don't have a concept, just render a text input\n    return getFieldComponent('text');\n  }\n  return getFieldComponent(question.questionOptions.rendering);\n};\n\nexport const supportsUnspecified = question => {\n  return (\n    isTrue(question.unspecified) &&\n    question.questionOptions.rendering != 'toggle' &&\n    question.questionOptions.rendering != 'encounter-location'\n  );\n};\nconst OHRIFormSection = ({ fields, onFieldChange, sectionTitle, showTitle }) => {\n  return (\n    <div className={styles.sectionContainer}>\n      {fields.map((value, index) => {\n        const component = getFieldControl(value);\n        if (component) {\n          const qnFragment = React.createElement(component, {\n            question: value,\n            onChange: onFieldChange,\n            key: index,\n            handler: getHandler(value.type),\n          });\n\n          return supportsUnspecified(value) && value.questionOptions.rendering != 'group' ? (\n            <div className={styles.questionOverrides}>\n              {qnFragment}\n              <OHRIUnspecified question={value} />\n            </div>\n          ) : (\n            <div className={styles.questionOverrides}>{qnFragment}</div>\n          );\n        }\n      })}\n    </div>\n  );\n};\n\nexport default OHRIFormSection;\n","import { Column, Row } from 'carbon-components-react/lib/components/Grid';\nimport React from 'react';\nimport { getFieldComponent, getHandler } from '../../registry/registry';\nimport { OHRIFormFieldProps } from '../../types';\nimport { OHRIUnspecified } from '../inputs/unspecified/ohri-unspecified.component';\nimport styles from '../inputs/_input.scss';\nimport { getFieldControl, supportsUnspecified } from '../section/ohri-form-section.component';\nexport interface ObsGroupProps extends OHRIFormFieldProps {\n  deleteControl?: any;\n}\n\nexport const OHRIObsGroup: React.FC<ObsGroupProps> = ({ question, onChange, deleteControl }) => {\n  const groupContent = question.questions\n    .filter(groupMember => !groupMember.isHidden)\n    .map((groupMember, index) => {\n      const component = getFieldControl(groupMember);\n      if (component) {\n        const qnFragment = React.createElement(component, {\n          question: groupMember,\n          onChange: onChange,\n          key: index,\n          handler: getHandler(groupMember.type),\n        });\n        return (\n          <Column className={styles.obsGroupColumn}>\n            {supportsUnspecified(groupMember) ? (\n              <>\n                {qnFragment}\n                <OHRIUnspecified question={groupMember} />\n              </>\n            ) : (\n              qnFragment\n            )}\n          </Column>\n        );\n      }\n    });\n  if (groupContent) {\n    groupContent.push(deleteControl);\n  }\n  return <Row>{groupContent}</Row>;\n};\n","import { LayoutType } from '@openmrs/esm-framework';\nimport { fetchConceptNameByUuid } from '../../api/api';\nimport { ConceptTrue } from '../constants';\nimport { EncounterContext } from '../ohri-form-context';\nimport { OHRIFormField, OHRIFormSection, SubmissionHandler } from '../types';\nimport { OHRIDefaultFieldValueValidator } from '../validators/default-value-validator';\nimport { isEmpty } from '../validators/ohri-form-validator';\n\nexport function cascadeVisibityToChildFields(\n  visibility: boolean,\n  section: OHRIFormSection,\n  allFields: Array<OHRIFormField>,\n) {\n  const candidateIds = section.questions.map(q => q.id);\n  allFields\n    .filter(field => candidateIds.includes(field.id))\n    .forEach(field => {\n      field.isParentHidden = visibility;\n    });\n}\n\nexport function inferInitialValueFromDefaultFieldValue(\n  field: OHRIFormField,\n  context: EncounterContext,\n  handler: SubmissionHandler,\n) {\n  if (field.questionOptions.rendering == 'toggle') {\n    return field.questionOptions.defaultValue == ConceptTrue;\n  }\n  // validate default value\n  if (!OHRIDefaultFieldValueValidator.validate(field, field.questionOptions.defaultValue).length) {\n    // construct observation\n    handler.handleFieldSubmission(field, field.questionOptions.defaultValue, context);\n    return field.questionOptions.defaultValue;\n  }\n}\n\nexport function getConceptNameAndUUID(conceptUuid: string) {\n  return fetchConceptNameByUuid(conceptUuid).then(conceptName => {\n    return `Concept Name: ${conceptName} \\n UUID: ${conceptUuid}`;\n  });\n}\n\nexport function isInlineView(\n  renderingType: 'single-line' | 'multiline' | 'automatic',\n  layoutType: LayoutType,\n  workspaceLayout: 'minimized' | 'maximized',\n) {\n  if (renderingType == 'automatic') {\n    return workspaceLayout == 'maximized' && layoutType == 'desktop';\n  }\n  return renderingType == 'single-line';\n}\n\nexport function evaluateFieldReadonlyProp(\n  field: OHRIFormField,\n  sectionReadonly: string | boolean,\n  pageReadonly: string | boolean,\n  formReadonly: string | boolean,\n) {\n  if (!isEmpty(field.readonly)) {\n    return;\n  }\n  field.readonly = !isEmpty(sectionReadonly) || !isEmpty(pageReadonly) || formReadonly;\n}\n","import moment from 'moment';\nimport { FieldValidator, OHRIFormField } from '../types';\n\nexport const OHRIDefaultFieldValueValidator: FieldValidator = {\n  validate: (field: OHRIFormField, value: any) => {\n    const codedTypes = ['radio', 'checkbox', 'select', 'content-switcher'];\n    if (codedTypes.includes(field.questionOptions.rendering)) {\n      // check whether value exists in answers\n      if (!field.questionOptions.answers?.find(answer => answer.concept == value)) {\n        return [{ errCode: 'invalid.defaultValue', errMessage: 'Value not found in coded answers list' }];\n      }\n    }\n    if (field.questionOptions.rendering == 'date') {\n      // Check if value is a valid date value\n      if (!moment(value, moment.ISO_8601, true).isValid()) {\n        return [{ errCode: 'invalid.defaultValue', errMessage: `Invalid date value: '${value}'` }];\n      }\n    }\n    if (field.questionOptions.rendering == 'number') {\n      if (isNaN(value)) {\n        return [{ errCode: 'invalid.defaultValue', errMessage: `Invalid numerical  value: '${value}'` }];\n      }\n    }\n    return [];\n  },\n};\n","import { TooltipDefinition } from 'carbon-components-react';\nimport React from 'react';\nimport styles from '../inputs/_input.scss';\n\nexport const OHRILabel: React.FC<{ value: string; tooltipText?: string }> = ({ value, tooltipText }) => {\n  return (\n    <div className={styles.ohriLabel}>\n      <TooltipDefinition direction=\"bottom\" tabIndex={0} tooltipText={tooltipText}>\n        <span className=\"bx--label\" style={{ fontWeight: 'bolder' }}>\n          {value}\n        </span>\n      </TooltipDefinition>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const OHRIValueEmpty = () => {\n  return (\n    <div>\n      <span style={{ fontSize: '.875rem', color: '#c6c6c6' }}>(Blank)</span>\n    </div>\n  );\n};\n\nexport const OHRIValueDisplay = ({ value }) => {\n  if (Array.isArray(value)) {\n    return <OHRIListDisplay valueArray={value} />;\n  }\n  return (\n    <div>\n      <span style={{ fontSize: '.875rem' }}>{value}</span>\n    </div>\n  );\n};\n\nconst OHRIListDisplay = ({ valueArray }) => {\n  return (\n    <ul>\n      {valueArray.map(item => (\n        <li style={{ fontSize: '.875rem', marginBottom: '.4rem' }}>{item}</li>\n      ))}\n    </ul>\n  );\n};\n","\n      import API from \"!../../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./ohri-field-value-view.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./ohri-field-value-view.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport { OHRILabel } from '../../label/ohri-label.component';\nimport { OHRIValueDisplay, OHRIValueEmpty } from '../ohri-value.component';\nimport inputControlStyles from '../../inputs/_input.scss';\nimport { Column, Row } from 'carbon-components-react';\nimport styles from './ohri-field-value-view.scss';\nimport { isEmpty } from '../../../validators/ohri-form-validator';\n\ninterface OHRIFieldValueViewProps {\n  isInline: boolean;\n  label: string;\n  value: any;\n  conceptName: string;\n}\nexport const OHRIFieldValueView: React.FC<OHRIFieldValueViewProps> = ({ label, conceptName, value, isInline }) => (\n  <div className={styles.readOnlyStyle}>\n    {isInline && (\n      <div className={inputControlStyles.formField}>\n        <Row>\n          <Column lg={5} md={5}>\n            <OHRILabel value={label} tooltipText={conceptName} />\n          </Column>\n          <Column className={styles.readOnlyValue}>\n            {!isEmpty(value) ? <OHRIValueDisplay value={value} /> : <OHRIValueEmpty />}\n          </Column>\n        </Row>\n      </div>\n    )}\n    {!isInline && (\n      <div className={inputControlStyles.formField}>\n        <OHRILabel value={label} tooltipText={conceptName} />\n        <div className={styles.readOnlyValue}>{value ? <OHRIValueDisplay value={value} /> : <OHRIValueEmpty />}</div>\n      </div>\n    )}\n  </div>\n);\n","import { ButtonSet, Column, FormGroup } from 'carbon-components-react';\nimport Button from 'carbon-components-react/lib/components/Button';\nimport Row from 'carbon-components-react/lib/components/Grid/Row';\nimport { useFormikContext } from 'formik';\nimport { cloneDeep } from 'lodash';\nimport moment from 'moment';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { ConceptTrue } from '../../constants';\nimport { OHRIFormContext } from '../../ohri-form-context';\nimport { getConcept } from '../../ohri-form.resource';\nimport { getHandler } from '../../registry/registry';\nimport { OHRIFormField, OHRIFormFieldProps } from '../../types';\nimport { OHRIObsGroup } from '../group/ohri-obs-group.component';\nimport { TrashCan32, Add16 } from '@carbon/icons-react';\nimport { useLayoutType } from '@openmrs/esm-framework';\nimport styles from '../inputs/_input.scss';\n\nexport const getInitialValueFromObs = (field: OHRIFormField, obsGroup: any) => {\n  const rendering = field.questionOptions.rendering;\n  const obs = obsGroup.groupMembers.filter(o => o.concept.uuid == field.questionOptions.concept);\n  if (obs.length) {\n    field.value = obs[0];\n    if (rendering == 'radio' || rendering == 'content-switcher') {\n      getConcept(field.questionOptions.concept, 'custom:(uuid,display,datatype:(uuid,display,name))').subscribe(\n        result => {\n          if (result.datatype.name == 'Boolean') {\n            field.value.value = obs[0].value.uuid;\n          }\n        },\n      );\n    }\n    if (typeof obs[0].value == 'string' || typeof obs[0].value == 'number') {\n      return field.questionOptions.rendering == 'date' ? moment(obs[0].value).toDate() : obs[0].value;\n    }\n    if (field.questionOptions.rendering == 'checkbox') {\n      field.value = obs;\n      return field.value.map(o => o.value.uuid);\n    }\n    if (field.questionOptions.rendering == 'toggle') {\n      field.value.value = obs[0].value.uuid;\n      return obs[0].value == ConceptTrue;\n    }\n    return obs[0].value?.uuid;\n  }\n  return '';\n};\n\nexport const OHRIRepeat: React.FC<OHRIFormFieldProps> = ({ question, onChange }) => {\n  const [questions, setQuestions] = useState([question]);\n  const { fields, encounterContext, obsGroupsToVoid } = React.useContext(OHRIFormContext);\n  const { values, setValues } = useFormikContext();\n  const [counter, setCounter] = useState(0);\n  const viewPort = useLayoutType();\n\n  const rowWidth = useMemo(() => {\n    if (viewPort == 'phone' || viewPort == 'tablet') {\n      return '50rem';\n    }\n    return '90rem';\n  }, [viewPort]);\n\n  useEffect(() => {\n    if (encounterContext.encounter && !counter) {\n      const alreadyMappedGroup = question.value?.uuid;\n      const unMappedObsGroups = encounterContext.encounter.obs.filter(\n        obs => obs.concept.uuid === question.questionOptions.concept && obs.uuid != alreadyMappedGroup,\n      );\n      // create new fields and map them values\n      let tempCounter = counter;\n      unMappedObsGroups.forEach(obsGroup => {\n        tempCounter = tempCounter + 1;\n        handleAdd(tempCounter, obsGroup);\n      });\n      setCounter(tempCounter);\n    }\n  }, [values]);\n\n  useEffect(() => {\n    questions[0] = question;\n    setQuestions([...questions]);\n  }, [question]);\n\n  const handleAdd = (count: number, obsGroup?: any) => {\n    const idSuffix = count;\n    const next = cloneDeep(question);\n    next.value = obsGroup;\n    next.id = `${next.id}-${idSuffix}`;\n    next.questions.forEach(q => {\n      q.id = `${q.id}-${idSuffix}`;\n      q['groupId'] = next.id;\n      q.value = null;\n      let initialValue = obsGroup ? getInitialValueFromObs(q, obsGroup) : null;\n      values[`${q.id}`] = initialValue ? initialValue : q.questionOptions.rendering == 'checkbox' ? [] : '';\n      fields.push(q);\n    });\n    setValues(values);\n    fields.push(next);\n    questions.push(next);\n    setQuestions(questions);\n  };\n\n  const removeQuestion = (question: OHRIFormField) => {\n    if (question.value && question.value.uuid) {\n      // obs group should be voided\n      question.value['voided'] = true;\n      delete question.value.value;\n      obsGroupsToVoid.push(question.value);\n    }\n    setQuestions(questions.filter(q => q.id !== question.id));\n    // cleanup\n    const dueFields = [question.id, ...question.questions.map(q => q.id)];\n    dueFields.forEach(field => {\n      const index = fields.findIndex(f => f.id === field);\n      fields.splice(index, 1);\n      delete values[field];\n    });\n  };\n  const nodes = questions.map((question, index) => {\n    const deleteControl =\n      index !== 0 ? (\n        <Column style={{ paddingTop: '1.2rem', marginLeft: '.5rem' }}>\n          <Button\n            renderIcon={TrashCan32}\n            kind=\"danger--tertiary\"\n            onClick={() => removeQuestion(question)}\n            hasIconOnly\n          />\n        </Column>\n      ) : null;\n    return (\n      <>\n        <Row style={{ margin: '0', marginBottom: '1rem', marginTop: '1rem', width: rowWidth }}>\n          <OHRIObsGroup question={question} onChange={onChange} handler={getHandler('obsGroup')} />\n          {deleteControl}\n        </Row>\n      </>\n    );\n  });\n\n  nodes.push(\n    <Row>\n      <Column>\n        <Button\n          renderIcon={Add16}\n          kind=\"ghost\"\n          onClick={() => {\n            const nextCount = counter + 1;\n            handleAdd(nextCount, null);\n            setCounter(nextCount);\n          }}>\n          {question.questionOptions.repeatOptions?.addText || 'Add'}\n        </Button>\n      </Column>\n    </Row>,\n  );\n  return (\n    !question.isHidden && (\n      <div style={{ marginTop: '0.65rem', marginBottom: '2rem' }}>\n        <FormGroup legendText={question.label}>{nodes}</FormGroup>\n      </div>\n    )\n  );\n};\n","import moment from 'moment';\nimport { ConceptTrue } from '../constants';\nimport { EncounterContext } from '../ohri-form-context';\nimport { getConcept } from '../ohri-form.resource';\nimport { OHRIFormField, SubmissionHandler } from '../types';\n\n/**\n * Obs handler\n */\nexport const ObsSubmissionHandler: SubmissionHandler = {\n  handleFieldSubmission: (field: OHRIFormField, value: any, context: EncounterContext) => {\n    if (field.questionOptions.rendering == 'checkbox') {\n      return multiSelectObsHandler(field, value, context);\n    }\n    if (field.questionOptions.rendering == 'toggle') {\n      return constructObs(value, context, field);\n    }\n    if (field.value) {\n      if (context.sessionMode == 'edit' && !value) {\n        field.value.voided = true;\n      } else if (!value) {\n        field.value = undefined;\n      } else {\n        if (field.questionOptions.rendering == 'date') {\n          field.value.value = moment(value).format('YYYY-MM-DD HH:mm');\n        } else {\n          field.value.value = value;\n        }\n        field.value.voided = false;\n      }\n    } else {\n      if (field.questionOptions.rendering == 'date') {\n        field.value = constructObs(moment(value).format('YYYY-MM-DD HH:mm'), context, field);\n        return field.value;\n      }\n      field.value = constructObs(value, context, field);\n    }\n    return field.value;\n  },\n  getInitialValue: (encounter: any, field: OHRIFormField, allFormFields: Array<OHRIFormField>) => {\n    let obs = encounter.obs.find(o => o.concept.uuid == field.questionOptions.concept);\n    const rendering = field.questionOptions.rendering;\n    let parentField = null;\n    let obsGroup = null;\n    // If this field is a group member and the obs was picked from the encounters's top obs leaves,\n    // chances are high this obs wasn't captured as part of the obs group. return empty.\n    // this should be solved by tracking obs through `formFieldNamespace`.\n    if (obs && field['groupId']) {\n      return '';\n    }\n    if (!obs && field['groupId']) {\n      parentField = allFormFields.find(f => f.id == field['groupId']);\n      obsGroup = encounter.obs.find(o => o.concept.uuid == parentField.questionOptions.concept);\n      if (obsGroup) {\n        parentField.value = obsGroup;\n        obs = obsGroup.groupMembers?.find(o => o.concept.uuid == field.questionOptions.concept);\n      }\n    }\n    if (obs) {\n      field.value = JSON.parse(JSON.stringify(obs));\n      if (rendering == 'radio' || rendering == 'content-switcher') {\n        getConcept(field.questionOptions.concept, 'custom:(uuid,display,datatype:(uuid,display,name))').subscribe(\n          result => {\n            if (result.datatype.name == 'Boolean') {\n              field.value.value = obs.value.uuid;\n            }\n          },\n        );\n      }\n      if (typeof obs.value == 'string' || typeof obs.value == 'number') {\n        if (field.questionOptions.rendering == 'date') {\n          field.value.value = moment(field.value.value).format('YYYY-MM-DD HH:mm');\n          return moment(obs.value).toDate();\n        }\n        return obs.value;\n      }\n      if (field.questionOptions.rendering == 'checkbox') {\n        field.value = encounter.obs.filter(o => o.concept.uuid == field.questionOptions.concept);\n        if (!field.value.length && field['groupId']) {\n          field.value = obsGroup.groupMembers.filter(o => o.concept.uuid == field.questionOptions.concept);\n        }\n        return field.value.map(o => o.value.uuid);\n      }\n      if (field.questionOptions.rendering == 'toggle') {\n        field.value.value = obs.value.uuid;\n        return obs.value == ConceptTrue;\n      }\n      if (rendering == 'fixed-value') {\n        return field['fixedValue'];\n      }\n      return obs.value?.uuid;\n    }\n    return '';\n  },\n  getDisplayValue: (field: OHRIFormField, value: any) => {\n    const rendering = field.questionOptions.rendering;\n    if (!field.value) {\n      return null;\n    }\n    if (field.questionOptions.rendering == 'checkbox') {\n      return value.map(\n        chosenOption => field.questionOptions.answers.find(option => option.concept == chosenOption)?.label,\n      );\n    }\n    if (rendering == 'content-switcher' || rendering == 'select' || rendering == 'toggle') {\n      const concept = typeof field.value.value === 'object' ? field.value.value.uuid : field.value.value;\n      return field.questionOptions.answers.find(option => option.concept == concept)?.label;\n    }\n    if (rendering == 'radio') {\n      return field.questionOptions.answers.find(option => option.concept == value)?.label;\n    }\n    return value;\n  },\n};\n\n/**\n * Encounter location handler\n */\nexport const EncounterLocationSubmissionHandler: SubmissionHandler = {\n  handleFieldSubmission: (field: OHRIFormField, value: any, context: EncounterContext) => {\n    return null;\n  },\n  getInitialValue: (encounter: any, field: OHRIFormField) => {\n    return {\n      display: encounter.location.name,\n      uuid: encounter.location.uuid,\n    };\n  },\n  getDisplayValue: (field: OHRIFormField, value) => {\n    return value.display;\n  },\n};\n\n///////////////////////////////\n// Helpers\n//////////////////////////////\n\nconst constructObs = (value: any, context: EncounterContext, field: OHRIFormField) => {\n  return {\n    person: context.patient.id,\n    obsDatetime: context.date,\n    concept: field.questionOptions.concept,\n    location: context.location,\n    order: null,\n    groupMembers: [],\n    voided: false,\n    // formFieldNamespace: 'ohri-forms',\n    // formFieldPath: 'field-id',\n    value: value,\n  };\n};\n\nconst multiSelectObsHandler = (field: OHRIFormField, values: Array<string>, context: EncounterContext) => {\n  if (!field.value) {\n    field.value = [];\n  }\n  values.forEach(value => {\n    const obs = field.value.find(o => {\n      if (typeof o.value == 'string') {\n        return o.value == value;\n      }\n      return o.value.uuid == value;\n    });\n    if (obs && obs.voided) {\n      obs.voided = false;\n    } else {\n      obs || field.value.push(constructObs(value, context, field));\n    }\n  });\n\n  // void or remove unchecked options\n  field.questionOptions.answers\n    .filter(opt => !values.some(v => v == opt.concept))\n    .forEach(opt => {\n      const observations = field.value.filter(o => {\n        if (typeof o.value == 'string') {\n          return o.value == opt.concept;\n        }\n        return o.value.uuid == opt.concept;\n      });\n      if (!observations.length) {\n        return;\n      }\n      observations.forEach(obs => {\n        if (context.sessionMode == 'edit' && obs.uuid) {\n          obs.voided = true;\n        } else {\n          field.value = field.value.filter(o => o.value !== opt.concept);\n        }\n      });\n    });\n  return field.value;\n};\n","import React from 'react';\nimport { OHRIFormFieldProps } from '../../../types';\nimport ReactMarkdown from 'react-markdown';\n\nconst OHRIMarkdown: React.FC<OHRIFormFieldProps> = ({ question }) =>\n  !question.isHidden && <ReactMarkdown children={question.value.join('\\n')} />;\n\nexport default OHRIMarkdown;\n","import { FieldValidator, OHRIFormField } from '../types';\nimport { isTrue } from '../utils/boolean-utils';\nimport { OHRIFieldValidator } from './ohri-form-validator';\n\nexport const OHRIDateValidator: FieldValidator = {\n  validate: (field: OHRIFormField, value: Date, config: any) => {\n    const now = new Date();\n    const errors = !value ? OHRIFieldValidator.validate(field, value) : [];\n    if (errors.length) {\n      return errors;\n    }\n    if (value && !isTrue(config?.allowFutureDates)) {\n      return value.getTime() > now.getTime()\n        ? [{ errCode: 'value.invalid', errMessage: 'Future dates not allowed' }]\n        : [];\n    }\n    return [];\n  },\n};\n","import { FieldValidator, OHRIFormField } from '../types';\nimport { evaluateExpression, ExpressionContext } from '../utils/expression-runner';\n\ninterface JSExpressionValidatorConfig {\n  failsWhenExpression: string;\n  message: string;\n  fields: OHRIFormField[];\n  expressionContext: ExpressionContext;\n  values: Record<string, any>;\n}\n\nexport const OHRIJSExpressionValidator: FieldValidator = {\n  validate: function(field: OHRIFormField, value: any, config: JSExpressionValidatorConfig) {\n    config.expressionContext.myValue = value;\n    if (config.failsWhenExpression) {\n      return evaluateExpression(\n        config.failsWhenExpression,\n        { value: field, type: 'field' },\n        config.fields,\n        { ...config.values, [field.id]: value },\n        config.expressionContext,\n      )\n        ? [{ errCode: 'value.invalid', errMessage: config.message || 'Invalid value' }]\n        : [];\n    }\n    return [];\n  },\n};\n","import { OHRIObsGroup } from '../components/group/ohri-obs-group.component';\nimport { OHRIContentSwitcher } from '../components/inputs/content-switcher/ohri-content-switcher.component';\nimport OHRIDate from '../components/inputs/date/ohri-date.component';\nimport { OHRIEncounterLocationPicker } from '../components/inputs/location/ohri-encounter-location.component';\nimport { OHRIMultiSelect } from '../components/inputs/multi-select/ohri-multi-select.component';\nimport OHRINumber from '../components/inputs/number/ohri-number.component';\nimport OHRIRadio from '../components/inputs/radio/ohri-radio.component';\nimport OHRIDropdown from '../components/inputs/select/ohri-dropdown.component';\nimport OHRITextArea from '../components/inputs/text-area/ohri-text-area.component';\nimport OHRIText from '../components/inputs/text/ohri-text.component';\nimport OHRIToggle from '../components/inputs/toggle/ohri-toggle.component';\nimport { OHRIRepeat } from '../components/repeat/ohri-repeat.component';\nimport { OHRIFieldValidator } from '../validators/ohri-form-validator';\nimport { EncounterLocationSubmissionHandler, ObsSubmissionHandler } from '../submission-handlers/base-handlers';\nimport { FieldValidator, SubmissionHandler } from '../types';\nimport OHRIFixedValue from '../components/inputs/fixed-value/ohri-fixed-value.component';\nimport OHRIMarkdown from '../components/inputs/markdown/ohri-markdown.component';\nimport { OHRIDateValidator } from '../validators/ohri-date-validator';\nimport { OHRIJSExpressionValidator } from '../validators/ohri-js-expression-validator';\n\nconst baseFieldComponents: Array<RegistryItem> = [\n  {\n    id: 'OHRIText',\n    component: OHRIText,\n    type: 'text',\n  },\n  {\n    id: 'OHRIRadio',\n    component: OHRIRadio,\n    type: 'radio',\n  },\n  {\n    id: 'OHRIDate',\n    component: OHRIDate,\n    type: 'date',\n  },\n  {\n    id: 'OHRINumber',\n    component: OHRINumber,\n    type: 'number',\n  },\n  {\n    id: 'OHRIMultiSelect',\n    component: OHRIMultiSelect,\n    type: 'checkbox',\n  },\n  {\n    id: 'OHRIContentSwitcher',\n    component: OHRIContentSwitcher,\n    type: 'content-switcher',\n  },\n  {\n    id: 'OHRIEncounterLocationPicker',\n    component: OHRIEncounterLocationPicker,\n    type: 'encounter-location',\n  },\n  {\n    id: 'OHRIDropdown',\n    component: OHRIDropdown,\n    type: 'select',\n  },\n  {\n    id: 'OHRITextArea',\n    component: OHRITextArea,\n    type: 'textarea',\n  },\n  {\n    id: 'OHRIToggle',\n    component: OHRIToggle,\n    type: 'toggle',\n  },\n  {\n    id: 'OHRIObsGroup',\n    component: OHRIObsGroup,\n    type: 'group',\n  },\n  {\n    id: 'OHRIRepeat',\n    component: OHRIRepeat,\n    type: 'repeating',\n  },\n  {\n    id: 'OHRIFixedValue',\n    component: OHRIFixedValue,\n    type: 'fixed-value',\n  },\n  {\n    id: 'OHRIMarkdown',\n    component: OHRIMarkdown,\n    type: 'markdown',\n  },\n];\n\nconst baseHandlers: Array<RegistryItem> = [\n  {\n    id: 'ObsSubmissionHandler',\n    component: ObsSubmissionHandler,\n    type: 'obs',\n  },\n  {\n    id: 'ObsGroupHandler',\n    component: ObsSubmissionHandler,\n    type: 'obsGroup',\n  },\n  {\n    id: 'EncounterLocationSubmissionHandler',\n    component: EncounterLocationSubmissionHandler,\n    type: 'encounterLocation',\n  },\n];\n\nconst fieldValidators: Array<ValidatorRegistryItem> = [\n  {\n    id: 'OHRIBaseValidator',\n    component: OHRIFieldValidator,\n  },\n  {\n    id: 'date',\n    component: OHRIDateValidator,\n  },\n  {\n    id: 'js_expression',\n    component: OHRIJSExpressionValidator,\n  },\n];\n\nexport const getFieldComponent = renderType => {\n  return baseFieldComponents.find(item => item.type == renderType)?.component;\n};\n\nexport function getHandler(type: string): SubmissionHandler {\n  return baseHandlers.find(handler => handler.type == type)?.component;\n}\n\nexport function addHandler(handler: RegistryItem) {\n  baseHandlers.push(handler);\n}\n\nexport function addFieldComponent(fieldComponent: RegistryItem) {\n  baseFieldComponents.push(fieldComponent);\n}\n\nexport function addvalidator(validator: ValidatorRegistryItem) {\n  if (validator) {\n    fieldValidators.push(validator);\n  }\n}\n\nexport function getValidator(id: string): FieldValidator {\n  return fieldValidators.find(validator => validator.id == id)?.component || fieldValidators[0].component;\n}\n\nexport interface RegistryItem {\n  id: string;\n  component: any;\n  type?: string;\n}\n\ninterface ValidatorRegistryItem extends RegistryItem {\n  component: FieldValidator;\n}\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { TextInput } from 'carbon-components-react';\nimport { OHRIFormFieldProps } from '../../../types';\nimport styles from '../_input.scss';\nimport { useField } from 'formik';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport { fieldRequiredErrCode } from '../../../validators/ohri-form-validator';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { getConceptNameAndUUID, isInlineView } from '../../../utils/ohri-form-helper';\nimport { OHRIFieldValueView } from '../../value/view/ohri-field-value-view.component';\n\nconst OHRIText: React.FC<OHRIFormFieldProps> = ({ question, onChange, handler }) => {\n  const [field, meta] = useField(question.id);\n  const { setFieldValue, encounterContext, layoutType, workspaceLayout } = React.useContext(OHRIFormContext);\n  const [previousValue, setPreviousValue] = useState();\n  const [errors, setErrors] = useState([]);\n  const [conceptName, setConceptName] = useState('Loading...');\n  const isFieldRequiredError = useMemo(() => errors[0]?.errCode == fieldRequiredErrCode, [errors]);\n\n  useEffect(() => {\n    if (question['submission']?.errors) {\n      setErrors(question['submission']?.errors);\n    }\n  }, [question['submission']]);\n\n  field.onBlur = () => {\n    if (field.value && question.unspecified) {\n      setFieldValue(`${question.id}-unspecified`, false);\n    }\n    if (previousValue !== field.value) {\n      onChange(question.id, field.value, setErrors);\n      question.value = handler.handleFieldSubmission(question, field.value, encounterContext);\n    }\n  };\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  const isInline = useMemo(() => {\n    if (encounterContext.sessionMode == 'view' || isTrue(question.readonly)) {\n      return isInlineView(question.inlineRendering, layoutType, workspaceLayout);\n    }\n    return false;\n  }, [encounterContext.sessionMode, question.readonly, question.inlineRendering, layoutType, workspaceLayout]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRIFieldValueView label={question.label} value={field.value} conceptName={conceptName} isInline={isInline} />\n    </div>\n  ) : (\n    !question.isHidden && (\n      <div className={styles.formField}>\n        <div\n          className={\n            isFieldRequiredError ? `${styles.textInputOverrides} ${styles.errorLabel}` : styles.textInputOverrides\n          }>\n          <TextInput\n            {...field}\n            id={question.id}\n            labelText={question.label}\n            name={question.id}\n            value={field.value || ''}\n            onFocus={() => setPreviousValue(field.value)}\n            disabled={question.disabled}\n            invalid={!isFieldRequiredError && errors.length > 0}\n            invalidText={errors.length && errors[0].errMessage}\n          />\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default OHRIText;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { FormGroup, RadioButtonGroup, RadioButton } from 'carbon-components-react';\nimport { OHRIFormFieldProps } from '../../../types';\nimport { useField } from 'formik';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport styles from '../_input.scss';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { getConceptNameAndUUID, isInlineView } from '../../../utils/ohri-form-helper';\nimport { fieldRequiredErrCode } from '../../../validators/ohri-form-validator';\nimport { OHRIFieldValueView } from '../../value/view/ohri-field-value-view.component';\n\nconst OHRIRadio: React.FC<OHRIFormFieldProps> = ({ question, onChange, handler }) => {\n  const [field, meta] = useField(question.id);\n  const { setFieldValue, encounterContext, layoutType, workspaceLayout } = React.useContext(OHRIFormContext);\n  const [errors, setErrors] = useState([]);\n  const [conceptName, setConceptName] = useState('Loading...');\n  const isFieldRequiredError = useMemo(() => errors[0]?.errCode == fieldRequiredErrCode, [errors]);\n\n  useEffect(() => {\n    if (question['submission']?.errors) {\n      setErrors(question['submission']?.errors);\n    }\n  }, [question['submission']]);\n\n  const handleChange = value => {\n    setFieldValue(question.id, value);\n    onChange(question.id, value, setErrors);\n    question.value = handler.handleFieldSubmission(question, value, encounterContext);\n  };\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  const isInline = useMemo(() => {\n    if (encounterContext.sessionMode == 'view' || isTrue(question.readonly)) {\n      return isInlineView(question.inlineRendering, layoutType, workspaceLayout);\n    }\n    return false;\n  }, [encounterContext.sessionMode, question.readonly, question.inlineRendering, layoutType, workspaceLayout]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRIFieldValueView\n        label={question.label}\n        value={field.value ? handler.getDisplayValue(question, field.value) : field.value}\n        conceptName={conceptName}\n        isInline={isInline}\n      />\n    </div>\n  ) : (\n    !question.isHidden && (\n      <FormGroup\n        style={{ paddingBottom: '1rem' }}\n        legendText={question.label}\n        className={isFieldRequiredError && styles.errorLegend}\n        disabled={question.disabled}\n        invalid={!isFieldRequiredError && errors.length > 0}>\n        <RadioButtonGroup\n          defaultSelected=\"default-selected\"\n          name={question.id}\n          valueSelected={field.value}\n          onChange={handleChange}\n          orientation=\"vertical\">\n          {question.questionOptions.answers.map((answer, index) => {\n            return (\n              <RadioButton\n                id={`${question.id}-${answer.label}`}\n                labelText={answer.label}\n                value={answer.concept}\n                key={index}\n              />\n            );\n          })}\n        </RadioButtonGroup>\n        {!isFieldRequiredError && errors?.length > 0 && (\n          <div className={styles.errorLabel}>\n            <div className={`bx--form-requirement`}>{errors[0].errMessage}</div>\n          </div>\n        )}\n      </FormGroup>\n    )\n  );\n};\n\nexport default OHRIRadio;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { OHRIFormFieldProps } from '../../../types';\nimport { DatePicker, DatePickerInput } from 'carbon-components-react';\nimport { useField } from 'formik';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport styles from '../_input.scss';\nimport { fieldRequiredErrCode } from '../../../validators/ohri-form-validator';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { getConceptNameAndUUID, isInlineView } from '../../../utils/ohri-form-helper';\nimport { OHRIFieldValueView } from '../../value/view/ohri-field-value-view.component';\n\nconst OHRIDate: React.FC<OHRIFormFieldProps> = ({ question, onChange, handler }) => {\n  const [field, meta] = useField(question.id);\n  const { setFieldValue, encounterContext, layoutType, workspaceLayout } = React.useContext(OHRIFormContext);\n  const [errors, setErrors] = useState([]);\n  const [conceptName, setConceptName] = useState('Loading...');\n  const isFieldRequiredError = useMemo(() => errors[0]?.errCode == fieldRequiredErrCode, [errors]);\n\n  useEffect(() => {\n    if (question['submission']?.errors) {\n      setErrors(question['submission']?.errors);\n    }\n  }, [question['submission']]);\n\n  const isInline = useMemo(() => {\n    if (encounterContext.sessionMode == 'view' || isTrue(question.readonly)) {\n      return isInlineView(question.inlineRendering, layoutType, workspaceLayout);\n    }\n    return false;\n  }, [encounterContext.sessionMode, question.readonly, question.inlineRendering, layoutType, workspaceLayout]);\n\n  const onDateChange = ([date]) => {\n    const refinedDate = date instanceof Date ? new Date(date.getTime() - date.getTimezoneOffset() * 60000) : date;\n    setFieldValue(question.id, refinedDate);\n    onChange(question.id, refinedDate, setErrors);\n    question.value = handler.handleFieldSubmission(question, refinedDate, encounterContext);\n  };\n  const { placeHolder, carbonDateformat } = useMemo(() => {\n    const formatObj = new Intl.DateTimeFormat(window.navigator.language).formatToParts(new Date());\n    const placeHolder = formatObj\n      .map(obj => {\n        switch (obj.type) {\n          case 'day':\n            return 'dd';\n          case 'month':\n            return 'mm';\n          case 'year':\n            return 'yyyy';\n          default:\n            return obj.value;\n        }\n      })\n      .join('');\n    const carbonDateformat = formatObj\n      .map(obj => {\n        switch (obj.type) {\n          case 'day':\n            return 'd';\n          case 'month':\n            return 'm';\n          case 'year':\n            return 'Y';\n          default:\n            return obj.value;\n        }\n      })\n      .join('');\n    return { placeHolder: placeHolder, carbonDateformat: carbonDateformat };\n  }, []);\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <OHRIFieldValueView\n      label={question.label}\n      value={field.value instanceof Date ? field.value.toLocaleDateString(window.navigator.language) : field.value}\n      conceptName={conceptName}\n      isInline={isInline}\n    />\n  ) : (\n    !question.isHidden && (\n      <div className={styles.formField}>\n        <DatePicker\n          datePickerType=\"single\"\n          onChange={onDateChange}\n          className={`${styles.datePickerOverrides} ${isFieldRequiredError ? styles.errorLabel : ''} ${\n            question.disabled || isTrue(question.readonly) ? styles.disabledLabelOverrides : ''\n          }`}\n          dateFormat={carbonDateformat}>\n          <DatePickerInput\n            id={question.id}\n            placeholder={placeHolder}\n            labelText={question.label}\n            value={\n              field.value instanceof Date ? field.value.toLocaleDateString(window.navigator.language) : field.value\n            }\n            disabled={question.disabled}\n            invalid={!isFieldRequiredError && errors.length > 0}\n            invalidText={errors[0]?.errMessage}\n          />\n        </DatePicker>\n      </div>\n    )\n  );\n};\n\nexport default OHRIDate;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { NumberInput } from 'carbon-components-react';\nimport { OHRIFormFieldProps } from '../../../types';\nimport { useField } from 'formik';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport styles from '../_input.scss';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { fieldRequiredErrCode } from '../../../validators/ohri-form-validator';\nimport { OHRIFieldValueView } from '../../value/view/ohri-field-value-view.component';\nimport { getConceptNameAndUUID, isInlineView } from '../../../utils/ohri-form-helper';\n\nconst OHRINumber: React.FC<OHRIFormFieldProps> = ({ question, onChange, handler }) => {\n  const [field, meta] = useField(question.id);\n  const { setFieldValue, encounterContext, layoutType, workspaceLayout } = React.useContext(OHRIFormContext);\n  const [previousValue, setPreviousValue] = useState();\n  const [conceptName, setConceptName] = useState('Loading...');\n  const [errors, setErrors] = useState([]);\n  const isFieldRequiredError = useMemo(() => errors[0]?.errCode == fieldRequiredErrCode, [errors]);\n\n  useEffect(() => {\n    if (question['submission']?.errors) {\n      setErrors(question['submission']?.errors);\n    }\n  }, [question['submission']]);\n\n  field.onBlur = () => {\n    if (field.value && question.unspecified) {\n      setFieldValue(`${question.id}-unspecified`, false);\n    }\n    if (previousValue !== field.value) {\n      onChange(question.id, field.value, setErrors);\n      question.value = handler.handleFieldSubmission(question, field.value, encounterContext);\n    }\n  };\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  const isInline = useMemo(() => {\n    if (encounterContext.sessionMode == 'view' || isTrue(question.readonly)) {\n      return isInlineView(question.inlineRendering, layoutType, workspaceLayout);\n    }\n    return false;\n  }, [encounterContext.sessionMode, question.readonly, question.inlineRendering, layoutType, workspaceLayout]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRIFieldValueView\n        label={question.label}\n        value={field.value ? handler.getDisplayValue(question, field.value) : field.value}\n        conceptName={conceptName}\n        isInline={isInline}\n      />\n    </div>\n  ) : (\n    !question.isHidden && (\n      <div className={styles.numberInputWrapper}>\n        <NumberInput\n          {...field}\n          id={question.id}\n          invalid={!isFieldRequiredError && errors.length > 0}\n          invalidText={errors[0]?.errMessage}\n          label={question.label}\n          max={question.questionOptions.max || undefined}\n          min={question.questionOptions.min || undefined}\n          name={question.id}\n          value={field.value || ''}\n          onFocus={() => setPreviousValue(field.value)}\n          allowEmpty={true}\n          size=\"xl\"\n          disabled={question.disabled}\n          className={isFieldRequiredError ? styles.errorLabel : ''}\n        />\n      </div>\n    )\n  );\n};\n\nexport default OHRINumber;\n","import { ListItem, MultiSelect, UnorderedList } from 'carbon-components-react';\nimport { useField } from 'formik';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport { OHRIFormFieldProps } from '../../../types';\nimport { OHRILabel } from '../../label/ohri-label.component';\nimport { OHRIValueEmpty } from '../../value/ohri-value.component';\nimport { useTranslation } from 'react-i18next';\nimport styles from '../_input.scss';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { getConceptNameAndUUID, isInlineView } from '../../../utils/ohri-form-helper';\nimport { fieldRequiredErrCode } from '../../../validators/ohri-form-validator';\nimport { OHRIFieldValueView } from '../../value/view/ohri-field-value-view.component';\n\nexport const OHRIMultiSelect: React.FC<OHRIFormFieldProps> = ({ question, onChange, handler }) => {\n  const { t } = useTranslation();\n  const [field, meta] = useField(question.id);\n  const { setFieldValue, encounterContext, layoutType, workspaceLayout } = React.useContext(OHRIFormContext);\n  const [errors, setErrors] = useState([]);\n  const [counter, setCounter] = useState(0);\n  const [touched, setTouched] = useState(false);\n  const [conceptName, setConceptName] = useState('Loading...');\n  const isFieldRequiredError = useMemo(() => errors[0]?.errCode == fieldRequiredErrCode, [errors]);\n\n  useEffect(() => {\n    // Carbon's MultiSelect has issues related to not updating the component based on the `initialSelectedItems` prop\n    // this is an intermittent issue. As a temporary solution, were are forcing the component to re-render\n    if (field.value && field.value.length == 0) {\n      // chances are high the value was cleared\n      // force the Multiselect component to be re-mounted\n      setCounter(counter + 1);\n    } else if (!touched && question.value) {\n      setCounter(counter + 1);\n    }\n  }, [field.value]);\n\n  useEffect(() => {\n    if (question['submission']?.errors) {\n      setErrors(question['submission']?.errors);\n    }\n  }, [question['submission']]);\n\n  const questionItems = question.questionOptions.answers.map((option, index) => ({\n    id: `${question.id}-${option.concept}`,\n    concept: option.concept,\n    label: option.label,\n    key: index,\n  }));\n\n  const initiallySelectedQuestionItems = [];\n  questionItems.forEach(item => {\n    if (field.value?.includes(item.concept)) {\n      initiallySelectedQuestionItems.push(item);\n    }\n  });\n\n  const handleSelectItemsChange = ({ selectedItems }) => {\n    setTouched(true);\n    const value = selectedItems.map(selectedItem => selectedItem.concept);\n    setFieldValue(question.id, value);\n    onChange(question.id, value, setErrors);\n    question.value = handler.handleFieldSubmission(question, value, encounterContext);\n  };\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  const isInline = useMemo(() => {\n    if (encounterContext.sessionMode == 'view' || isTrue(question.readonly)) {\n      return isInlineView(question.inlineRendering, layoutType, workspaceLayout);\n    }\n    return false;\n  }, [encounterContext.sessionMode, question.readonly, question.inlineRendering, layoutType, workspaceLayout]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRIFieldValueView\n        label={question.label}\n        value={field.value ? handler.getDisplayValue(question, field.value) : field.value}\n        conceptName={conceptName}\n        isInline={isInline}\n      />\n    </div>\n  ) : (\n    !question.isHidden && (\n      <>\n        <div\n          className={\n            isFieldRequiredError\n              ? `${styles.multiselectOverride} ${styles.errorLabel}`\n              : `${styles.multiselectOverride}`\n          }>\n          <MultiSelect.Filterable\n            placeholder={t('filterItemsInMultiselect', 'Search...')}\n            onChange={handleSelectItemsChange}\n            id={question.label}\n            items={questionItems}\n            initialSelectedItems={initiallySelectedQuestionItems}\n            label={''}\n            titleText={question.label}\n            key={counter}\n            itemToString={item => (item ? item.label : ' ')}\n            disabled={question.disabled}\n            invalid={!isFieldRequiredError && errors.length > 0}\n            invalidText={errors[0]?.errMessage}\n          />\n        </div>\n        <div className={styles.formField} style={{ marginTop: '0.125rem' }}>\n          {field.value?.length ? (\n            <UnorderedList style={{ marginLeft: '1rem' }}>\n              {handler.getDisplayValue(question, field.value)?.map(displayValue => displayValue + ', ')}\n            </UnorderedList>\n          ) : (\n            <OHRIValueEmpty />\n          )}\n        </div>\n      </>\n    )\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { FormGroup, ContentSwitcher, Switch } from 'carbon-components-react';\nimport { OHRIFormFieldProps } from '../../../types';\nimport styles from '../_input.scss';\nimport { useField } from 'formik';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { getConceptNameAndUUID, isInlineView } from '../../../utils/ohri-form-helper';\nimport { OHRIFieldValueView } from '../../value/view/ohri-field-value-view.component';\n\nexport const OHRIContentSwitcher: React.FC<OHRIFormFieldProps> = ({ question, onChange, handler }) => {\n  const [field, meta] = useField(question.id);\n  const { setFieldValue, encounterContext, layoutType, workspaceLayout } = React.useContext(OHRIFormContext);\n  const [errors, setErrors] = useState([]);\n  const [conceptName, setConceptName] = useState('Loading...');\n\n  useEffect(() => {\n    if (question['submission']?.errors) {\n      setErrors(question['submission']?.errors);\n    }\n  }, [question['submission']]);\n\n  const handleChange = value => {\n    setFieldValue(question.id, value?.name);\n    onChange(question.id, value?.name, setErrors);\n    question.value = handler.handleFieldSubmission(question, value?.name, encounterContext);\n  };\n  const selectedIndex = useMemo(\n    () => question.questionOptions.answers.findIndex(option => option.concept == field.value),\n    [field.value],\n  );\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  const isInline = useMemo(() => {\n    if (encounterContext.sessionMode == 'view' || isTrue(question.readonly)) {\n      return isInlineView(question.inlineRendering, layoutType, workspaceLayout);\n    }\n    return false;\n  }, [encounterContext.sessionMode, question.readonly, question.inlineRendering, layoutType, workspaceLayout]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRIFieldValueView\n        label={question.label}\n        value={field.value ? handler.getDisplayValue(question, field.value) : field.value}\n        conceptName={conceptName}\n        isInline={isInline}\n      />\n    </div>\n  ) : (\n    !question.isHidden && (\n      <div className={styles.textContainer}>\n        <FormGroup legendText={question.label} className={errors.length ? styles.errorLegend : ''}>\n          <ContentSwitcher onChange={handleChange} selectedIndex={selectedIndex} className={styles.selectedOption}>\n            {question.questionOptions.answers.map((option, index) => (\n              <Switch\n                className={selectedIndex === index ? styles.switchOverrides : styles.switchOverridesNone}\n                name={option.concept || option.value}\n                text={option.label}\n                key={index}\n                disabled={question.disabled}\n              />\n            ))}\n          </ContentSwitcher>\n        </FormGroup>\n      </div>\n    )\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Dropdown } from 'carbon-components-react';\nimport { OHRIFormField } from '../../../types';\nimport styles from '../_input.scss';\nimport { useField } from 'formik';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport { getLocationsByTag } from '../../../ohri-form.resource';\nimport { createErrorHandler } from '@openmrs/esm-framework';\nimport { OHRILabel } from '../../label/ohri-label.component';\nimport { OHRIValueDisplay, OHRIValueEmpty } from '../../value/ohri-value.component';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { getConceptNameAndUUID } from '../../../utils/ohri-form-helper';\nimport { OHRIFieldValueView } from '../../value/view/ohri-field-value-view.component';\n\nexport const OHRIEncounterLocationPicker: React.FC<{ question: OHRIFormField; onChange: any }> = ({ question }) => {\n  const [field, meta] = useField(question.id);\n  const { setEncounterLocation, setFieldValue, encounterContext } = React.useContext(OHRIFormContext);\n  const [locations, setLocations] = useState([]);\n  const [conceptName, setConceptName] = useState('Loading...');\n\n  useEffect(() => {\n    if (question.questionOptions.locationTag) {\n      getLocationsByTag(\n        question.questionOptions.locationTag\n          .trim()\n          .split(' ')\n          .join('%20'),\n      ).subscribe(\n        results => setLocations(results),\n        error => createErrorHandler(),\n      );\n    }\n  }, []);\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRIFieldValueView\n        label={question.label}\n        value={field.value ? field.value.display : field.value}\n        conceptName={conceptName}\n        isInline\n      />\n    </div>\n  ) : (\n    !question.isHidden && (\n      <div className={styles.formInputField}>\n        <Dropdown\n          id={question.id}\n          titleText={question.label}\n          label=\"Choose location\"\n          items={locations}\n          itemToString={item => item.display}\n          selectedItem={field.value}\n          onChange={({ selectedItem }) => {\n            setFieldValue(question.id, selectedItem);\n            setEncounterLocation(selectedItem);\n          }}\n          disabled={question.disabled}\n        />\n      </div>\n    )\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Dropdown } from 'carbon-components-react';\nimport { useField } from 'formik';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport { OHRIFormFieldProps } from '../../../types';\nimport styles from '../_input.scss';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { getConceptNameAndUUID, isInlineView } from '../../../utils/ohri-form-helper';\nimport { fieldRequiredErrCode } from '../../../validators/ohri-form-validator';\nimport { OHRIFieldValueView } from '../../value/view/ohri-field-value-view.component';\n\nconst OHRIDropdown: React.FC<OHRIFormFieldProps> = ({ question, onChange, handler }) => {\n  const [field, meta] = useField(question.id);\n  const { setFieldValue, encounterContext, layoutType, workspaceLayout } = React.useContext(OHRIFormContext);\n  const [items, setItems] = React.useState([]);\n  const [errors, setErrors] = useState([]);\n  const [conceptName, setConceptName] = useState('Loading...');\n  const isFieldRequiredError = useMemo(() => errors[0]?.errCode == fieldRequiredErrCode, [errors]);\n\n  useEffect(() => {\n    if (question['submission']?.errors) {\n      setErrors(question['submission']?.errors);\n    }\n  }, [question['submission']]);\n\n  const handleChange = value => {\n    setFieldValue(question.id, value);\n    onChange(question.id, value, setErrors);\n    question.value = handler.handleFieldSubmission(question, value, encounterContext);\n  };\n\n  const itemToString = item => {\n    const answer = question.questionOptions.answers.find(opt => (opt.value ? opt.value == item : opt.concept == item));\n    return answer?.label;\n  };\n  useEffect(() => {\n    setItems(question.questionOptions.answers.map(item => item.value || item.concept));\n  }, [question.questionOptions.answers]);\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  const isInline = useMemo(() => {\n    if (encounterContext.sessionMode == 'view' || isTrue(question.readonly)) {\n      return isInlineView(question.inlineRendering, layoutType, workspaceLayout);\n    }\n    return false;\n  }, [encounterContext.sessionMode, question.readonly, question.inlineRendering, layoutType, workspaceLayout]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <OHRIFieldValueView\n      label={question.label}\n      value={field.value ? handler.getDisplayValue(question, field.value) : field.value}\n      conceptName={conceptName}\n      isInline={isInline}\n    />\n  ) : (\n    !question.isHidden && (\n      <div className={styles.formInputField}>\n        <div\n          className={\n            isFieldRequiredError ? `${styles.errorLabel} ${styles.dropDownOverride}` : styles.dropDownOverride\n          }>\n          <Dropdown\n            id={question.id}\n            titleText={question.label}\n            label=\"Choose an option\"\n            items={items}\n            itemToString={itemToString}\n            selectedItem={field.value}\n            onChange={({ selectedItem }) => handleChange(selectedItem)}\n            disabled={question.disabled}\n            invalid={!isFieldRequiredError && errors.length > 0}\n            invalidText={errors.length && errors[0].errMessage}\n          />\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default OHRIDropdown;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { TextArea } from 'carbon-components-react';\nimport { OHRIFormFieldProps } from '../../../types';\nimport styles from '../_input.scss';\nimport { useField } from 'formik';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport { fieldRequiredErrCode } from '../../../validators/ohri-form-validator';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { getConceptNameAndUUID, isInlineView } from '../../../utils/ohri-form-helper';\nimport { OHRIFieldValueView } from '../../value/view/ohri-field-value-view.component';\n\nconst OHRITextArea: React.FC<OHRIFormFieldProps> = ({ question, onChange, handler }) => {\n  const [field, meta] = useField(question.id);\n  const { setFieldValue, encounterContext, layoutType, workspaceLayout } = React.useContext(OHRIFormContext);\n  const [previousValue, setPreviousValue] = useState();\n  const [errors, setErrors] = useState([]);\n  const [conceptName, setConceptName] = useState('Loading...');\n  const isFieldRequiredError = useMemo(() => errors[0]?.errCode == fieldRequiredErrCode, [errors]);\n\n  useEffect(() => {\n    if (question['submission']?.errors) {\n      setErrors(question['submission']?.errors);\n    }\n  }, [question['submission']]);\n\n  field.onBlur = () => {\n    if (field.value && question.unspecified) {\n      setFieldValue(`${question.id}-unspecified`, false);\n    }\n    if (previousValue !== field.value) {\n      onChange(question.id, field.value, setErrors);\n      question.value = handler.handleFieldSubmission(question, field.value, encounterContext);\n    }\n  };\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  const isInline = useMemo(() => {\n    if (encounterContext.sessionMode == 'view' || isTrue(question.readonly)) {\n      return isInlineView(question.inlineRendering, layoutType, workspaceLayout);\n    }\n    return false;\n  }, [encounterContext.sessionMode, question.readonly, question.inlineRendering, layoutType, workspaceLayout]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRIFieldValueView label={question.label} value={field.value} conceptName={conceptName} isInline={isInline} />\n    </div>\n  ) : (\n    !question.isHidden && (\n      <div className={styles.formField}>\n        <div\n          className={\n            isFieldRequiredError ? `${styles.textInputOverrides} ${styles.errorLabel}` : styles.textInputOverrides\n          }>\n          <TextArea\n            {...field}\n            id={question.id}\n            labelText={question.label}\n            name={question.id}\n            value={field.value || ''}\n            onFocus={() => setPreviousValue(field.value)}\n            rows={question.questionOptions.rows || 4}\n            disabled={question.disabled}\n            invalid={!isFieldRequiredError && errors.length > 0}\n            invalidText={errors.length && errors[0].errMessage}\n          />\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default OHRITextArea;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Toggle } from 'carbon-components-react';\nimport { OHRIFormFieldProps } from '../../../types';\nimport styles from '../_input.scss';\nimport { useField } from 'formik';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { getConceptNameAndUUID, isInlineView } from '../../../utils/ohri-form-helper';\nimport { OHRIFieldValueView } from '../../value/view/ohri-field-value-view.component';\nimport { isEmpty } from '../../../validators/ohri-form-validator';\n\nconst OHRIToggle: React.FC<OHRIFormFieldProps> = ({ question, onChange, handler }) => {\n  const [field, meta] = useField(question.id);\n  const { setFieldValue, encounterContext, layoutType, workspaceLayout } = React.useContext(OHRIFormContext);\n  const [conceptName, setConceptName] = useState('Loading...');\n  const handleChange = value => {\n    setFieldValue(question.id, value);\n    onChange(question.id, value, null);\n    question.value = handler.handleFieldSubmission(question, value, encounterContext);\n  };\n\n  useEffect(() => {\n    // The toogle input doesn't support blank values\n    // by default, the value should be false\n    if (!question.value && encounterContext.sessionMode == 'enter') {\n      question.value = handler.handleFieldSubmission(question, field.value ?? false, encounterContext);\n    }\n  }, []);\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  const isInline = useMemo(() => {\n    if (encounterContext.sessionMode == 'view' || isTrue(question.readonly)) {\n      return isInlineView(question.inlineRendering, layoutType, workspaceLayout);\n    }\n    return false;\n  }, [encounterContext.sessionMode, question.readonly, question.inlineRendering, layoutType, workspaceLayout]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRIFieldValueView\n        label={question.label}\n        value={!isEmpty(field.value) ? handler.getDisplayValue(question, field.value) : field.value}\n        conceptName={conceptName}\n        isInline={isInline}\n      />\n    </div>\n  ) : (\n    !question.isHidden && (\n      <div className={styles.formField}>\n        <Toggle\n          labelText={question.label}\n          id={question.id}\n          labelA={question.questionOptions.toggleOptions.labelFalse}\n          labelB={question.questionOptions.toggleOptions.labelTrue}\n          onToggle={handleChange}\n          toggled={!!field.value}\n          disabled={question.disabled}\n        />\n      </div>\n    )\n  );\n};\n\nexport default OHRIToggle;\n","import { useField } from 'formik';\nimport React, { useEffect, useMemo } from 'react';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport { OHRIFormFieldProps } from '../../../types';\n\nconst OHRIFixedValue: React.FC<OHRIFormFieldProps> = ({ question, handler }) => {\n  const { encounterContext, isFieldInitializationComplete } = React.useContext(OHRIFormContext);\n\n  useEffect(() => {\n    if (question.value && typeof question.value == 'string' && isFieldInitializationComplete) {\n      delete question.value;\n      handler.handleFieldSubmission(question, question['fixedValue'], encounterContext);\n    } else if (typeof question.value == 'object' && !obsValueEqualTo(question['fixedValue'], question.value)) {\n      // edit obs\n      handler.handleFieldSubmission(question, question['fixedValue'], encounterContext);\n    }\n  }, [question.value, isFieldInitializationComplete]);\n  return <></>;\n};\n\nfunction obsValueEqualTo(value: string, obs: any) {\n  return typeof obs.value == 'object' ? obs.value?.uuid == value : obs.value == value;\n}\nexport default OHRIFixedValue;\n","\n      import API from \"!../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./_page.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./_page.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport styles from './_page.scss';\nimport OHRIFormSection from '../section/ohri-form-section.component';\nimport { Waypoint } from 'react-waypoint';\nimport { Accordion, AccordionItem } from 'carbon-components-react';\n\nfunction OHRIFormPage({ page, onFieldChange, setSelectedPage, isCollapsed }) {\n  let newLabel = page.label.replace(/\\s/g, '');\n\n  const handleEnter = elementID => {\n    setSelectedPage(elementID);\n  };\n\n  return (\n    <Waypoint onEnter={() => handleEnter(newLabel)} topOffset=\"50%\" bottomOffset=\"60%\">\n      <div id={newLabel} className={styles.pageContent}>\n        <div style={{}} className={styles.pageHeader}>\n          <p className={styles.pageTitle}>{page.label}</p>\n        </div>\n        <Accordion>\n          {/* <p className={styles.required}>All fields are required unless marked optional</p> */}\n          {page.sections.map((sec, index) => {\n            return (\n              <AccordionItem title={sec.label} open={isCollapsed} className={styles.sectionContent}>\n                <div className={styles.formSection} key={index}>\n                  <OHRIFormSection\n                    fields={sec.questions}\n                    showTitle={page.sections.length > 1}\n                    onFieldChange={onFieldChange}\n                    sectionTitle={sec.label}\n                    key={index}\n                  />\n                </div>\n              </AccordionItem>\n            );\n          })}\n        </Accordion>\n      </div>\n    </Waypoint>\n  );\n}\n\nexport default OHRIFormPage;\n","import { useEffect } from 'react';\n\n// Sometimes you want to run parent effects before those of the children. E.g. when setting\n// something up or binding document event listeners. By passing the effect to the first child it\n// will run before any effects by later children.\n// For details, see: https://github.com/facebook/react/issues/15281#issuecomment-781196823\nexport function InstantEffect({ effect }) {\n  useEffect(() => effect?.(), [effect]);\n  return null;\n}\n","import { openmrsObservableFetch, useLayoutType } from '@openmrs/esm-framework';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { encounterRepresentation } from '../../../constants';\nimport { ConceptFalse, ConceptTrue } from '../../constants';\nimport { OHRIFormContext } from '../../ohri-form-context';\nimport { saveEncounter } from '../../ohri-form.resource';\nimport { getHandler, getValidator } from '../../registry/registry';\nimport {\n  EncounterDescriptor,\n  OHRIFormField,\n  OHRIFormPage as OHRIFormPageProps,\n  OHRIFormSchema,\n  SessionMode,\n} from '../../types';\nimport {\n  cascadeVisibityToChildFields,\n  evaluateFieldReadonlyProp,\n  inferInitialValueFromDefaultFieldValue,\n} from '../../utils/ohri-form-helper';\nimport { isEmpty, isEmpty as isValueEmpty, OHRIFieldValidator } from '../../validators/ohri-form-validator';\nimport OHRIFormPage from '../page/ohri-form-page';\nimport { InstantEffect } from '../../utils/instant-effect';\nimport { FormSubmissionHandler } from '../../ohri-form.component';\nimport { isTrue } from '../../utils/boolean-utils';\nimport { evaluateExpression, FormNode } from '../../utils/expression-runner';\n\ninterface OHRIEncounterFormProps {\n  formJson: OHRIFormSchema;\n  patient: any;\n  encounterDate: Date;\n  provider: string;\n  location: { uuid: string; name: string };\n  values: Record<string, any>;\n  isCollapsed: boolean;\n  sessionMode: SessionMode;\n  scrollablePages: Set<OHRIFormPageProps>;\n  handlers: Map<string, FormSubmissionHandler>;\n  allInitialValues: Record<string, any>;\n  workspaceLayout: 'minimized' | 'maximized';\n  setAllInitialValues: (values: Record<string, any>) => void;\n  setScrollablePages: (pages: Set<OHRIFormPageProps>) => void;\n  setFieldValue: (field: string, value: any, shouldValidate?: boolean) => void;\n  setSelectedPage: (page: string) => void;\n}\n\nexport const OHRIEncounterForm: React.FC<OHRIEncounterFormProps> = ({\n  formJson,\n  patient,\n  encounterDate,\n  provider,\n  location,\n  values,\n  isCollapsed,\n  sessionMode,\n  scrollablePages,\n  workspaceLayout,\n  setScrollablePages,\n  setFieldValue,\n  setSelectedPage,\n  handlers,\n  allInitialValues,\n  setAllInitialValues,\n}) => {\n  const [fields, setFields] = useState<Array<OHRIFormField>>([]);\n  const [encounterLocation, setEncounterLocation] = useState(null);\n  const [encounter, setEncounter] = useState<EncounterDescriptor>(null);\n  const [form, setForm] = useState<OHRIFormSchema>(formJson);\n  const [obsGroupsToVoid, setObsGroupsToVoid] = useState([]);\n  const [formInitialValues, setFormInitialValues] = useState({});\n  const [isFieldInitializationComplete, setIsFieldInitializationComplete] = useState(false);\n  const layoutType = useLayoutType();\n\n  const addScrollablePages = useCallback(() => {\n    formJson.pages.forEach(page => {\n      if (!page.isSubform) {\n        scrollablePages.add(page);\n      }\n    });\n    return () => {\n      formJson.pages.forEach(page => {\n        if (!page.isSubform) {\n          scrollablePages.delete(page);\n        }\n      });\n    };\n  }, [scrollablePages, formJson]);\n\n  const encounterContext = {\n    patient: patient,\n    encounter: encounter,\n    location: location,\n    sessionMode: sessionMode || (form?.encounter ? 'edit' : 'enter'),\n    date: encounterDate,\n  };\n\n  useEffect(() => {\n    if (!encounterLocation) {\n      setEncounterLocation(location);\n    }\n  }, [location]);\n\n  useEffect(() => {\n    const allFormFields: Array<OHRIFormField> = [];\n    const tempInitVals = {};\n    let isFieldEncounterBindingComplete = false;\n    form.pages.forEach(page =>\n      page.sections.forEach(section => {\n        section.questions.forEach(question => {\n          // explicitly set blank values to null\n          // TODO: shouldn't we be setting to the default behaviour?\n          section.inlineRendering = isEmpty(section.inlineRendering) ? null : section.inlineRendering;\n          page.inlineRendering = isEmpty(page.inlineRendering) ? null : page.inlineRendering;\n          form.inlineRendering = isEmpty(form.inlineRendering) ? null : form.inlineRendering;\n          question.inlineRendering = section.inlineRendering ?? page.inlineRendering ?? form.inlineRendering;\n          evaluateFieldReadonlyProp(question, section.readonly, page.readonly, form.readonly);\n          if (question.questionOptions.rendering == 'fixed-value' && !question['fixedValue']) {\n            question['fixedValue'] = question.value;\n          }\n          allFormFields.push(question);\n          if (question.type == 'obsGroup') {\n            question.questions.forEach(groupedField => {\n              // set group id\n              groupedField['groupId'] = question.id;\n              allFormFields.push(groupedField);\n            });\n          }\n        });\n      }),\n    );\n    // set Formik initial values\n    if (encounter) {\n      allFormFields.forEach(field => {\n        const handler = getHandler(field.type);\n        let existingVal = handler?.getInitialValue(encounter, field, allFormFields);\n        if (isEmpty(existingVal) && !isEmpty(field.questionOptions.defaultValue)) {\n          existingVal = inferInitialValueFromDefaultFieldValue(field, encounterContext, handler);\n        }\n        tempInitVals[field.id] = existingVal === null || existingVal === undefined ? '' : existingVal;\n        if (field.unspecified) {\n          tempInitVals[`${field.id}-unspecified`] = !!!existingVal;\n        }\n      });\n      setEncounterLocation(encounter.location);\n      isFieldEncounterBindingComplete = true;\n    } else {\n      const emptyValues = {\n        checkbox: [],\n        toggle: false,\n        default: '',\n      };\n      allFormFields.forEach(field => {\n        let value = null;\n        if (!isEmpty(field.questionOptions.defaultValue)) {\n          value = inferInitialValueFromDefaultFieldValue(field, encounterContext, getHandler(field.type));\n        }\n        if (!isEmpty(value)) {\n          tempInitVals[field.id] = value;\n        } else {\n          tempInitVals[field.id] =\n            emptyValues[field.questionOptions.rendering] != undefined\n              ? emptyValues[field.questionOptions.rendering]\n              : emptyValues.default;\n        }\n        if (field.unspecified) {\n          tempInitVals[`${field.id}-unspecified`] = false;\n        }\n      });\n    }\n    // prepare fields\n    setFields(\n      allFormFields.map(field => {\n        if (field.hide) {\n          evalHide({ value: field, type: 'field' }, allFormFields, tempInitVals);\n        } else {\n          field.isHidden = false;\n        }\n        if (typeof field.readonly == 'string' && field.readonly?.split(' ')?.length > 1) {\n          // needed to store the expression for further evaluations\n          field['readonlyExpression'] = field.readonly;\n          field.readonly = evaluateExpression(\n            field.readonly,\n            { value: field, type: 'field' },\n            allFormFields,\n            tempInitVals,\n            {\n              mode: sessionMode,\n            },\n          );\n        }\n        return field;\n      }),\n    );\n    form.pages.forEach(page => {\n      if (page.hide) {\n        evalHide({ value: page, type: 'page' }, allFormFields, tempInitVals);\n      } else {\n        page.isHidden = false;\n      }\n    });\n    setForm(form);\n    setFormInitialValues(tempInitVals);\n    setAllInitialValues({ ...allInitialValues, ...tempInitVals });\n    if (sessionMode == 'enter') {\n      setIsFieldInitializationComplete(true);\n    } else if (isFieldEncounterBindingComplete) {\n      setIsFieldInitializationComplete(true);\n    }\n  }, [encounter]);\n\n  useEffect(() => {\n    let subscription;\n    if (formJson.encounter && typeof formJson.encounter == 'string') {\n      subscription = openmrsObservableFetch<EncounterDescriptor>(\n        `/ws/rest/v1/encounter/${formJson.encounter}?v=${encounterRepresentation}`,\n      ).subscribe(({ data }) => setEncounter(data));\n    } else if (typeof formJson.encounter == 'object') {\n      setEncounter(formJson.encounter);\n    }\n    return () => subscription?.unsubscribe();\n  }, [formJson.encounter]);\n\n  const evalHide = (node, allFields: OHRIFormField[], allValues: Record<string, any>) => {\n    const { value, type } = node;\n    const isHidden = evaluateExpression(value['hide']?.hideWhenExpression, node, allFields, allValues, {\n      mode: sessionMode,\n    });\n    node.value.isHidden = isHidden;\n    // cascade visibility\n    if (type == 'page') {\n      value['sections'].forEach(section => {\n        section.isParentHidden = isHidden;\n        cascadeVisibityToChildFields(isHidden, section, allFields);\n      });\n    }\n    if (type == 'section') {\n      cascadeVisibityToChildFields(isHidden, value, allFields);\n    }\n  };\n\n  const addObs = useCallback((obsList: Array<any>, obs: any) => {\n    if (Array.isArray(obs)) {\n      obs.forEach(o => {\n        delete o.formFieldNamespace;\n        delete o.formFieldPath;\n        if (isValueEmpty(o.groupMembers)) {\n          delete o.groupMembers;\n        } else {\n          o.groupMembers.forEach(obsChild => {\n            delete obsChild.formFieldNamespace;\n            delete obsChild.formFieldPath;\n            if (isValueEmpty(obsChild.groupMembers)) {\n              delete obsChild.groupMembers;\n            }\n          });\n        }\n        obsList.push(o);\n      });\n    } else {\n      delete obs.formFieldNamespace;\n      delete obs.formFieldPath;\n      if (isValueEmpty(obs.groupMembers)) {\n        delete obs.groupMembers;\n      } else {\n        obs.groupMembers.forEach(obsChild => {\n          delete obsChild.formFieldNamespace;\n          delete obsChild.formFieldPath;\n          if (isValueEmpty(obsChild.groupMembers)) {\n            delete obsChild.groupMembers;\n          }\n        });\n      }\n      obsList.push(obs);\n    }\n  }, []);\n\n  const validate = useCallback(\n    values => {\n      let formHasErrors = false;\n      // handle field validation\n      fields\n        .filter(field => !field.isParentHidden && !field.disabled && !field.isHidden && !isTrue(field.readonly))\n        .filter(field => field['submission']?.unspecified != true)\n        .forEach(field => {\n          const errors = OHRIFieldValidator.validate(field, values[field.id]);\n          if (errors.length) {\n            field['submission'] = {\n              ...field['submission'],\n              errors: errors,\n            };\n            formHasErrors = true;\n            return;\n          }\n        });\n      return !formHasErrors;\n    },\n    [fields],\n  );\n\n  const handleFormSubmit = (values: Record<string, any>) => {\n    const obsForSubmission = [];\n    fields\n      .filter(field => field.value || field.type == 'obsGroup') // filter out fields with empty values except groups\n      .filter(field => !field.isParentHidden && !field.isHidden && (field.type == 'obs' || field.type == 'obsGroup'))\n      .filter(field => !field['groupId']) // filter out grouped obs\n      .forEach(field => {\n        if (field.type == 'obsGroup') {\n          const obsGroup = {\n            person: patient.id,\n            obsDatetime: encounterDate,\n            concept: field.questionOptions.concept,\n            location: encounterLocation,\n            order: null,\n            groupMembers: [],\n            uuid: field?.value?.uuid,\n            voided: false,\n          };\n          let hasValue = false;\n          field.questions.forEach(groupedField => {\n            if (groupedField.value) {\n              hasValue = true;\n              if (Array.isArray(groupedField.value)) {\n                obsGroup.groupMembers.push(...groupedField.value);\n              } else {\n                obsGroup.groupMembers.push(groupedField.value);\n              }\n            }\n          });\n          hasValue && addObs(obsForSubmission, obsGroup);\n        } else {\n          addObs(obsForSubmission, field.value);\n        }\n      });\n\n    // Add voided obs groups\n    obsGroupsToVoid.forEach(obs => addObs(obsForSubmission, obs));\n    let encounterForSubmission: EncounterDescriptor = {};\n    if (encounter) {\n      Object.assign(encounterForSubmission, encounter);\n      encounterForSubmission['location'] = encounterLocation.uuid;\n      // update encounter providers\n      const hasCurrentProvider =\n        encounterForSubmission['encounterProviders'].findIndex(encProvider => encProvider.provider.uuid == provider) !==\n        -1;\n      if (!hasCurrentProvider) {\n        encounterForSubmission['encounterProviders'] = [\n          ...encounterForSubmission.encounterProviders,\n          {\n            provider: provider,\n            encounterRole: '240b26f9-dd88-4172-823d-4a8bfeb7841f',\n          },\n        ];\n      }\n      encounterForSubmission['obs'] = obsForSubmission;\n    } else {\n      encounterForSubmission = {\n        patient: patient.id,\n        encounterDatetime: encounterDate,\n        location: encounterLocation.uuid,\n        encounterType: formJson.encounterType,\n        encounterProviders: [\n          {\n            provider: provider,\n            encounterRole: '240b26f9-dd88-4172-823d-4a8bfeb7841f',\n          },\n        ],\n        obs: obsForSubmission,\n      };\n    }\n    if (encounterForSubmission.obs?.length || encounterForSubmission.orders?.length) {\n      const ac = new AbortController();\n      return saveEncounter(ac, encounterForSubmission, encounter?.uuid);\n    }\n  };\n\n  const onFieldChange = (fieldName: string, value: any, setErrors) => {\n    const field = fields.find(field => field.id == fieldName);\n    const validators = Array.isArray(field.validators)\n      ? [{ type: 'OHRIBaseValidator' }, ...field.validators]\n      : [{ type: 'OHRIBaseValidator' }];\n    if (Array.isArray(field.validators)) {\n    }\n    // handle validation\n    const basevalidatorConfig = {\n      expressionContext: { mode: sessionMode },\n      values: { ...values, [fieldName]: value },\n      fields,\n    };\n    for (let validatorConfig of validators) {\n      const errors =\n        getValidator(validatorConfig.type)?.validate(field, value, { ...basevalidatorConfig, ...validatorConfig }) ||\n        [];\n      setErrors && setErrors(errors);\n      if (errors.length) {\n        return;\n      }\n    }\n    if (field.questionOptions.rendering == 'toggle') {\n      value = value ? ConceptTrue : ConceptFalse;\n    }\n    if (field.fieldDependants) {\n      field.fieldDependants.forEach(dep => {\n        const dependant = fields.find(f => f.id == dep);\n        evalHide({ value: dependant, type: 'field' }, fields, { ...values, [fieldName]: value });\n        if (dependant['readonlyExpression']) {\n          dependant.readonly = evaluateExpression(\n            dependant['readonlyExpression'],\n            { value: dependant, type: 'field' },\n            fields,\n            { ...values, [fieldName]: value },\n            {\n              mode: sessionMode,\n            },\n          );\n        }\n        let fields_temp = [...fields];\n        const index = fields_temp.findIndex(f => f.id == dep);\n        fields_temp[index] = dependant;\n        setFields(fields_temp);\n      });\n    }\n    if (field.pageDependants) {\n      field.pageDependants?.forEach(dep => {\n        const dependant = form.pages.find(f => f.label == dep);\n        evalHide({ value: dependant, type: 'page' }, fields, { ...values, [fieldName]: value });\n        let form_temp = form;\n        const index = form_temp.pages.findIndex(page => page.label == dep);\n        form_temp[index] = dependant;\n        setForm(form_temp);\n      });\n    }\n  };\n\n  // set handler\n  handlers.set(form.name, { validate: validate, submit: handleFormSubmit });\n\n  return (\n    <OHRIFormContext.Provider\n      value={{\n        values: values,\n        setFieldValue: setFieldValue,\n        setEncounterLocation: setEncounterLocation,\n        setObsGroupsToVoid: setObsGroupsToVoid,\n        obsGroupsToVoid: obsGroupsToVoid,\n        fields: fields,\n        encounterContext,\n        layoutType,\n        workspaceLayout,\n        isFieldInitializationComplete,\n      }}>\n      <InstantEffect effect={addScrollablePages} />\n      {form.pages.map((page, index) => {\n        if (isTrue(page.isHidden)) {\n          return null;\n        }\n        if (isTrue(page.isSubform) && page.subform?.form) {\n          if (sessionMode != 'enter' && !page.subform?.form.encounter) {\n            return null;\n          }\n          // filter out all nested subforms\n          page.subform.form.pages = page.subform.form.pages.filter(page => !isTrue(page.isSubform));\n          return (\n            <OHRIEncounterForm\n              key={index}\n              formJson={page.subform?.form}\n              patient={patient}\n              encounterDate={encounterDate}\n              provider={provider}\n              location={location}\n              values={values}\n              isCollapsed={isCollapsed}\n              sessionMode={sessionMode}\n              scrollablePages={scrollablePages}\n              setAllInitialValues={setAllInitialValues}\n              allInitialValues={allInitialValues}\n              setScrollablePages={setScrollablePages}\n              setFieldValue={setFieldValue}\n              setSelectedPage={setSelectedPage}\n              handlers={handlers}\n              workspaceLayout={workspaceLayout}\n            />\n          );\n        }\n        return (\n          <OHRIFormPage\n            page={page}\n            onFieldChange={onFieldChange}\n            setSelectedPage={setSelectedPage}\n            isCollapsed={isCollapsed}\n          />\n        );\n      })}\n    </OHRIFormContext.Provider>\n  );\n};\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport styles from './ohri-form.scss';\nimport { Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  usePatient,\n  useSessionUser,\n  showToast,\n  attach,\n  getAsyncLifecycle,\n  registerExtension,\n  detach,\n} from '@openmrs/esm-framework';\nimport { useTranslation } from 'react-i18next';\nimport LoadingIcon from '../components/loading/loading.component';\nimport { OHRIFormSchema, SessionMode, OHRIFormPage as OHRIFormPageProps } from './types';\nimport OHRIFormSidebar from './components/sidebar/ohri-form-sidebar.component';\nimport { OHRIEncounterForm } from './components/encounter/ohri-encounter-form';\nimport { isTrue } from './utils/boolean-utils';\nimport { PatientBanner } from '../components/patient-banner/patient-banner.component';\nimport { useWorkspaceLayout } from './utils/useWorkspaceLayout';\nimport { Button } from 'carbon-components-react';\nimport ReactMarkdown from 'react-markdown';\n\ninterface OHRIFormProps {\n  formJson: OHRIFormSchema;\n  onSubmit?: any;\n  onCancel?: any;\n  encounterUuid?: string;\n  mode?: SessionMode;\n  handleClose?: any;\n  patientUUID?: string;\n}\n\nexport interface FormSubmissionHandler {\n  validate: (values) => boolean;\n  submit: (values) => Promise<any>;\n}\n\nconst OHRIForm: React.FC<OHRIFormProps> = ({\n  formJson,\n  encounterUuid,\n  mode,\n  onSubmit,\n  onCancel,\n  handleClose,\n  patientUUID,\n}) => {\n  const [currentProvider, setCurrentProvider] = useState(null);\n  const [location, setEncounterLocation] = useState(null);\n  const { patient } = usePatient(patientUUID);\n  const session = useSessionUser();\n  const [initialValues, setInitialValues] = useState({});\n  const encDate = new Date();\n  const [scrollAblePages, setScrollablePages] = useState(new Set<OHRIFormPageProps>());\n  const [selectedPage, setSelectedPage] = useState('');\n  const [collapsed, setCollapsed] = useState(true);\n  const { t } = useTranslation();\n  const ref = useRef(null);\n  const workspaceLayout = useWorkspaceLayout(ref);\n  const handlers = new Map<string, FormSubmissionHandler>();\n  const form = useMemo(() => {\n    const copy: OHRIFormSchema = JSON.parse(JSON.stringify(formJson));\n    if (encounterUuid && !copy.encounter) {\n      // Assign this to the parent form\n      copy.encounter = encounterUuid;\n    }\n    let i = copy.pages.length;\n    // let's loop backwards so that we splice in the opposite direction\n    while (i--) {\n      const page = copy.pages[i];\n      if (isTrue(page.isSubform) && !isTrue(page.isHidden) && page.subform?.form?.encounterType == copy.encounterType) {\n        copy.pages.splice(i, 1, ...page.subform.form.pages.filter(page => !isTrue(page.isSubform)));\n      }\n    }\n    return copy;\n  }, [encounterUuid]);\n\n  const sessionMode = useMemo(() => {\n    if (mode) {\n      return mode;\n    }\n    if (encounterUuid) {\n      return 'edit';\n    }\n    return 'enter';\n  }, [mode]);\n\n  const showSideBar = useMemo(() => {\n    return workspaceLayout != 'minimized' && scrollAblePages.size > 0;\n  }, [workspaceLayout, scrollAblePages.size]);\n\n  useEffect(() => {\n    const extDetails = {\n      id: 'ohri-form-header-toggle-ext',\n      moduleName: '@openmrs/esm-ohri-app',\n      slot: 'patient-chart-workspace-header-slot',\n      load: getAsyncLifecycle(\n        () => import('./components/section-collapsible-toggle/ohri-section-collapsible-toggle.component'),\n        {\n          featureName: 'ohri-form-header-toggle',\n          moduleName: '@openmrs/esm-ohri-app',\n        },\n      ),\n      meta: {\n        handleCollapse: (value: boolean) => {\n          setCollapsed(value);\n        },\n      },\n    };\n    // registerExtension(extDetails.id, extDetails);\n    // attach('patient-chart-workspace-header-slot', extDetails.id);\n\n    return () => {\n      detach('patient-chart-workspace-header-slot', extDetails.id);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (session) {\n      if (!encounterUuid) {\n        setEncounterLocation(session.sessionLocation);\n      }\n      setCurrentProvider(session.currentProvider.uuid);\n    }\n  }, [session]);\n\n  const handleFormSubmit = (values: Record<string, any>) => {\n    // validate form and it's suforms\n    let isSubmitable = true;\n    handlers.forEach(handler => {\n      const result = handler?.validate?.(values);\n      if (!result) {\n        isSubmitable = false;\n      }\n    });\n    // do submit\n    if (isSubmitable) {\n      const submissions = [...handlers].map(([key, handler]) => {\n        return handler?.submit?.(values);\n      });\n      Promise.all(submissions).then(results => {\n        if (mode == 'edit') {\n          showToast({\n            description: t('updatedRecordDescription', 'The patient encounter was updated'),\n            title: t('updatedRecord', 'Record updated'),\n            kind: 'success',\n            critical: true,\n          });\n        } else {\n          showToast({\n            description: t('createdRecordDescription', 'A new encounter was created'),\n            title: t('createdRecord', 'Record created'),\n            kind: 'success',\n            critical: true,\n          });\n        }\n        onSubmit?.();\n      });\n    }\n  };\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={initialValues}\n      validationSchema={Yup.object({})}\n      onSubmit={(values, { setSubmitting }) => {\n        handleFormSubmit(values);\n        setSubmitting(false);\n      }}>\n      {props => (\n        <Form className={`bx--form no-padding ng-untouched ng-pristine ng-invalid ${styles.ohriForm}`} ref={ref}>\n          {!patient ? (\n            <LoadingIcon />\n          ) : (\n            <div className={styles.ohriFormContainer}>\n              {showSideBar && (\n                <OHRIFormSidebar\n                  scrollAblePages={scrollAblePages}\n                  selectedPage={selectedPage}\n                  mode={mode}\n                  onCancel={onCancel}\n                  handleClose={handleClose}\n                  values={props.values}\n                  setValues={props.setValues}\n                  allowUnspecifiedAll={formJson.allowUnspecifiedAll}\n                  defaultPage={formJson.defaultPage}\n                />\n              )}\n\n              <div className={styles.formContent}>\n                {workspaceLayout != 'minimized' && <PatientBanner patient={patient} hideActionsOverflow={true} />}\n                {form.markdown && (\n                  <div className={styles.markdownContainer}>\n                    <ReactMarkdown children={form.markdown.join('\\n')} />\n                  </div>\n                )}\n                <div\n                  className={`${styles.formContentBody}\n                    ${workspaceLayout == 'minimized' ? `${styles.minifiedFormContentBody}` : ''}\n                  `}>\n                  <OHRIEncounterForm\n                    formJson={form}\n                    patient={patient}\n                    encounterDate={encDate}\n                    provider={currentProvider}\n                    location={location}\n                    values={props.values}\n                    isCollapsed={collapsed}\n                    sessionMode={sessionMode}\n                    scrollablePages={scrollAblePages}\n                    setAllInitialValues={setInitialValues}\n                    allInitialValues={initialValues}\n                    setScrollablePages={setScrollablePages}\n                    setFieldValue={props.setFieldValue}\n                    setSelectedPage={setSelectedPage}\n                    handlers={handlers}\n                    workspaceLayout={workspaceLayout}\n                  />\n                </div>\n                {workspaceLayout == 'minimized' && (\n                  <div className={styles.minifiedButtons}>\n                    <Button\n                      kind=\"secondary\"\n                      onClick={() => {\n                        onCancel && onCancel();\n                        handleClose && handleClose();\n                      }}>\n                      {mode == 'view' ? 'Close' : 'Cancel'}\n                    </Button>\n                    {mode != 'view' && <Button type=\"submit\">Save</Button>}\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default OHRIForm;\n","import { useLayoutType } from '@openmrs/esm-framework';\nimport { useEffect, useState } from 'react';\n\nexport function useWorkspaceLayout(ref): 'minimized' | 'maximized' {\n  const [mode, setMode] = useState<'minimized' | 'maximized'>('maximized');\n  const layout = useLayoutType();\n\n  useEffect(() => {\n    if (ref?.current) {\n      const width = ref.current.offsetWidth;\n      if (layout == 'desktop' && width < 1000) {\n        setMode('minimized');\n      } else {\n        setMode('maximized');\n      }\n    }\n  }, [ref?.current, ref?.current?.offsetWidth, layout]);\n\n  return mode;\n}\n","/**\n * Evaluates whether a value is truthy. This should be used when a string value is expected to parsed into a boolean ie.\n * ```bash\n *  'false' => false\n *  'true' => true\n * ```\n */\nexport function isTrue(value: string | boolean): boolean {\n  if (typeof value == 'boolean') {\n    return value;\n  }\n  if (typeof value == 'string') {\n    return value == 'true';\n  }\n  // TODO: throw an exception?\n  return !!value;\n}\n","import moment from 'moment';\nimport { ConceptFalse, ConceptTrue } from '../constants';\nimport { OHRIFormField, OHRIFormPage, OHRIFormSection } from '../types';\nimport { isEmpty as isValueEmpty } from '../validators/ohri-form-validator';\n\nexport interface FormNode {\n  value: OHRIFormPage | OHRIFormSection | OHRIFormField;\n  type: 'field' | 'page' | 'section';\n}\n\nexport interface ExpressionContext {\n  mode: 'enter' | 'edit' | 'view';\n  myValue?: any;\n}\n\nexport function evaluateExpression(\n  expression: string,\n  node: FormNode,\n  allFields: Array<OHRIFormField>,\n  allFieldValues: Record<string, any>,\n  context: ExpressionContext,\n): boolean {\n  const allFieldsKeys = allFields.map(f => f.id);\n  const parts = expression.trim().split(' ');\n  // setup runtime variables\n  const { mode, myValue } = context;\n\n  function isEmpty(value) {\n    if (allFieldsKeys.includes(value)) {\n      registerDependency(\n        node,\n        allFields.find(candidate => candidate.id == value),\n      );\n      return isValueEmpty(allFieldValues[value]);\n    }\n    return isValueEmpty(value);\n  }\n\n  function today() {\n    return new Date();\n  }\n\n  function includes(questionId, value) {\n    if (allFieldsKeys.includes(questionId)) {\n      registerDependency(\n        node,\n        allFields.find(candidate => candidate.id === questionId),\n      );\n      return allFieldValues[questionId]?.includes(value);\n    }\n    return false;\n  }\n\n  function isDateBefore(left: Date, right: string | Date, format?: string) {\n    let otherDate: any = right;\n    if (typeof right == 'string') {\n      otherDate = format ? moment(right, format, true).toDate() : moment(right, 'YYYY-MM-DD', true).toDate();\n    }\n    return left?.getTime() < otherDate.getTime();\n  }\n\n  function useFieldValue(questionId: string) {\n    if (allFieldsKeys.includes(questionId)) {\n      return allFieldValues[questionId];\n    }\n    return null;\n  }\n\n  parts.forEach((part, index) => {\n    if (index % 2 == 0) {\n      if (allFieldsKeys.includes(part)) {\n        const determinant = allFields.find(field => field.id === part);\n        registerDependency(node, determinant);\n        // prep eval variables\n        let determinantValue = allFieldValues[part];\n        if (determinant.questionOptions.rendering == 'toggle') {\n          determinantValue = determinantValue ? ConceptTrue : ConceptFalse;\n        }\n        if (typeof determinantValue == 'string') {\n          determinantValue = `'${determinantValue}'`;\n        }\n        const regx = new RegExp(part, 'g');\n        expression = expression.replace(regx, determinantValue);\n      }\n    }\n  });\n  try {\n    return eval(expression);\n  } catch (error) {\n    console.error(error);\n  }\n  return false;\n}\n\nfunction registerDependency(node: FormNode, determinant: OHRIFormField) {\n  switch (node.type) {\n    case 'page':\n      if (!determinant.pageDependants) {\n        determinant.pageDependants = new Set();\n      }\n      determinant.pageDependants.add(node.value.label);\n      break;\n    case 'section':\n      if (!determinant.sectionDependants) {\n        determinant.sectionDependants = new Set();\n      }\n      determinant.sectionDependants.add(node.value.label);\n    default:\n      if (!determinant.fieldDependants) {\n        determinant.fieldDependants = new Set();\n      }\n      determinant.fieldDependants.add(node.value['id']);\n  }\n}\n","import { FieldValidator, OHRIFormField } from '../types';\nimport { isTrue } from '../utils/boolean-utils';\n\nexport const fieldRequiredErrCode = 'field.required';\n\nexport const OHRIFieldValidator: FieldValidator = {\n  validate: (field: OHRIFormField, value: any) => {\n    if (field['submission']?.unspecified) {\n      return [];\n    }\n    if (isTrue(field.required) || isTrue(field.unspecified)) {\n      if (isEmpty(value)) {\n        return [{ errCode: fieldRequiredErrCode, errMessage: 'Field is mandatory' }];\n      }\n    }\n    return [];\n  },\n};\n\nexport function isEmpty(value: any): boolean {\n  if (value === undefined || value === null || value === '') {\n    return true;\n  }\n  if (typeof value == 'string' && !value?.trim()) {\n    return true;\n  }\n  if (Array.isArray(value) && !value.length) {\n    return true;\n  }\n  return false;\n}\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".openmrs-ohri__loading-component__centerLoadingSVG___Vme8M{display:flex;width:100vw;height:100vh;justify-content:center;align-items:center}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"centerLoadingSVG\": \"openmrs-ohri__loading-component__centerLoadingSVG___Vme8M\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.openmrs-ohri__patient-banner__productiveHeading01___3IV1N{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.openmrs-ohri__patient-banner__productiveHeading02___Fe3xU{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.openmrs-ohri__patient-banner__productiveHeading03___3sHJI{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.openmrs-ohri__patient-banner__productiveHeading04___1nh3V{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.openmrs-ohri__patient-banner__productiveHeading05___2Q8eh{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}.openmrs-ohri__patient-banner__productiveHeading06___2OEos{font-size:2rem;font-weight:300;line-height:1.199;letter-spacing:0}.openmrs-ohri__patient-banner__bodyShort01___1St_2{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.openmrs-ohri__patient-banner__helperText01___3fF-O{font-size:.75rem;line-height:1.34;letter-spacing:.32px}.openmrs-ohri__patient-banner__bodyShort02___3XbWf{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.openmrs-ohri__patient-banner__bodyLong01___1xcA0{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.openmrs-ohri__patient-banner__bodyLong02___1B3y2{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}.openmrs-ohri__patient-banner__label01___3xCQ6{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.openmrs-ohri__patient-banner__text01___E6Jpi{color:#161616}.openmrs-ohri__patient-banner__text02___1FL_i{color:#525252}aside{background-color:#fff !important}div[class*=-esm-login__styles__center]>img{width:140px}.tab-12rem>button{width:12rem !important}.tab-14rem>button{width:14rem !important}.tab-16rem>button{width:16rem !important}.openmrs-ohri__patient-banner__patientBannerContainer___3eDTi{display:flex;width:100%;position:sticky;flex-direction:row;align-items:baseline;padding:0}.openmrs-ohri__patient-banner__patientBannerContainer___3eDTi>div{width:100%}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"productiveHeading01\": \"openmrs-ohri__patient-banner__productiveHeading01___3IV1N\",\n\t\"productiveHeading02\": \"openmrs-ohri__patient-banner__productiveHeading02___Fe3xU\",\n\t\"productiveHeading03\": \"openmrs-ohri__patient-banner__productiveHeading03___3sHJI\",\n\t\"productiveHeading04\": \"openmrs-ohri__patient-banner__productiveHeading04___1nh3V\",\n\t\"productiveHeading05\": \"openmrs-ohri__patient-banner__productiveHeading05___2Q8eh\",\n\t\"productiveHeading06\": \"openmrs-ohri__patient-banner__productiveHeading06___2OEos\",\n\t\"bodyShort01\": \"openmrs-ohri__patient-banner__bodyShort01___1St_2\",\n\t\"helperText01\": \"openmrs-ohri__patient-banner__helperText01___3fF-O\",\n\t\"bodyShort02\": \"openmrs-ohri__patient-banner__bodyShort02___3XbWf\",\n\t\"bodyLong01\": \"openmrs-ohri__patient-banner__bodyLong01___1xcA0\",\n\t\"bodyLong02\": \"openmrs-ohri__patient-banner__bodyLong02___1B3y2\",\n\t\"label01\": \"openmrs-ohri__patient-banner__label01___3xCQ6\",\n\t\"text01\": \"openmrs-ohri__patient-banner__text01___E6Jpi\",\n\t\"text02\": \"openmrs-ohri__patient-banner__text02___1FL_i\",\n\t\"patientBannerContainer\": \"openmrs-ohri__patient-banner__patientBannerContainer___3eDTi\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.openmrs-ohri___input__productiveHeading01___3efTB{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.openmrs-ohri___input__productiveHeading02___3JK0K{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.openmrs-ohri___input__productiveHeading03___oSZSr{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.openmrs-ohri___input__productiveHeading04___1k7Gz{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.openmrs-ohri___input__productiveHeading05___2DS9X{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}.openmrs-ohri___input__productiveHeading06___3nquH{font-size:2rem;font-weight:300;line-height:1.199;letter-spacing:0}.openmrs-ohri___input__bodyShort01___1-lOo{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.openmrs-ohri___input__helperText01___3mUe2{font-size:.75rem;line-height:1.34;letter-spacing:.32px}.openmrs-ohri___input__bodyShort02___1SQXu{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.openmrs-ohri___input__bodyLong01___1SogS{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.openmrs-ohri___input__bodyLong02___1Wtsy{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}.openmrs-ohri___input__label01___2tspH{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.openmrs-ohri___input__text01___1TD33{color:#161616}.openmrs-ohri___input__text02___34XWE{color:#525252}aside{background-color:#fff !important}div[class*=-esm-login__styles__center]>img{width:140px}.tab-12rem>button{width:12rem !important}.tab-14rem>button{width:14rem !important}.tab-16rem>button{width:16rem !important}.openmrs-ohri___input__formField___1AY8i,.openmrs-ohri___input__numberInputWrapper___3SPQH .bx--number,.openmrs-ohri___input__formInputField___xDdc2{margin-top:10px}.openmrs-ohri___input__formField___1AY8i>div>div>label,.openmrs-ohri___input__numberInputWrapper___3SPQH .bx--number>div>div>label,.openmrs-ohri___input__formInputField___xDdc2>div>div>label{color:#525252}.openmrs-ohri___input__ohriFormLabel___2K9Mo{font-size:.75rem}.openmrs-ohri___input__datePickerOverrides___gyecw input{width:22.313rem !important}.openmrs-ohri___input__disabledLabelOverrides___2vK-E label{color:#525252 !important}.openmrs-ohri___input__formInputField___xDdc2{width:auto}.openmrs-ohri___input__formInputField___xDdc2>div>div>label{max-width:auto}.openmrs-ohri___input__formInputField___xDdc2>div>div>div{width:22.313rem !important}.openmrs-ohri___input__multiselectOverride___3kgAo{width:auto;padding-bottom:15px}.openmrs-ohri___input__multiselectOverride___3kgAo>div>div{width:22.313rem !important}.openmrs-ohri___input__multiselectOverride___3kgAo>div div div input{border:0 !important;border-bottom:1px solid #8d8d8d !important}.openmrs-ohri___input__dropDownOverride___2wcnI>div div button{border-bottom:1px solid #8d8d8d !important}.openmrs-ohri___input__numberInputWrapper___3SPQH .bx--number{width:22.313rem;font-size:.875rem}.openmrs-ohri___input__textContainer___12KRx label{font-size:.875rem !important}.openmrs-ohri___input__selectedOption___SZu3V{border-radius:4px;width:15rem}.openmrs-ohri___input__selectedOption___SZu3V button{background-color:#f4f4f4}.openmrs-ohri___input__switchOverrides___3-ALO{background-color:#edf5ff !important;color:#0f62fe !important;padding:0 0 0 1rem;border:solid 1px #0f62fe !important}.openmrs-ohri___input__switchOverrides___3-ALO button:focus{border:none !important}.openmrs-ohri___input__selectedOption___SZu3V button:before{display:none !important}.openmrs-ohri___input__switchOverridesNone___nXV_C{background-color:#f4f4f4 !important;padding:0 0 0 1rem;border:solid 1px #a6c8ff !important}.openmrs-ohri___input__radioButton_ohri___76iRx input[type=radio]{opacity:0 !important;position:fixed;width:0}.openmrs-ohri___input__radioButton_ohri___76iRx label{display:inline-block;border:1px solid #a6c8ff;color:#525252;padding:.688rem 1rem;padding-right:3rem;border-radius:4px 0 0 4px;background-color:#f4f4f4}.openmrs-ohri___input__radioButton_ohri___76iRx label:last-child{margin-left:-5px;border-radius:0 4px 4px 0}.openmrs-ohri___input__radioButton_ohri___76iRx input[type=radio]:checked+label{color:#0f62fe;border-color:#0f62fe;background-color:#edf5ff}.openmrs-ohri___input__radioButton_ohri___76iRx>.openmrs-ohri___input__bx--radio-button-wrapper___Cimqv{margin-right:0rem !important}.openmrs-ohri___input__textInputOverrides___1IitC>div>div{width:22.313rem}.openmrs-ohri___input__unspecified___3XG-g>div label{font-size:12px;color:#525252;padding-bottom:1rem}.openmrs-ohri___input__errorLegend___27dMl legend,.openmrs-ohri___input__errorLabel___MB7pZ label{color:#da1e28 !important}.openmrs-ohri___input__unspecified___3XG-g>div label{font-size:12px;color:#525252}.openmrs-ohri___input__errorLabel___MB7pZ .bx--form-requirement{display:block;max-height:12.5rem;overflow:visible;font-weight:400;color:#da1e28}.openmrs-ohri___input__obsGroupColumn___1o697{max-width:18rem}.openmrs-ohri___input__obsGroupColumn___1o697>div{margin-top:0 !important}.openmrs-ohri___input__obsGroupColumn___1o697>div>div>div{max-width:18rem !important}.openmrs-ohri___input__obsGroupColumn___1o697>div>div>div>div{max-width:18rem !important}.openmrs-ohri___input__repeatContentWrapper___2-Vbg{margin-top:.65rem;margin-bottom:2rem}.openmrs-ohri___input__ohriLabel___10_7e{width:auto !important}.openmrs-ohri___input__ohriLabel___10_7e .bx--assistive-text{max-width:30rem !important;font-size:.75rem;white-space:pre-line !important}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"productiveHeading01\": \"openmrs-ohri___input__productiveHeading01___3efTB\",\n\t\"productiveHeading02\": \"openmrs-ohri___input__productiveHeading02___3JK0K\",\n\t\"productiveHeading03\": \"openmrs-ohri___input__productiveHeading03___oSZSr\",\n\t\"productiveHeading04\": \"openmrs-ohri___input__productiveHeading04___1k7Gz\",\n\t\"productiveHeading05\": \"openmrs-ohri___input__productiveHeading05___2DS9X\",\n\t\"productiveHeading06\": \"openmrs-ohri___input__productiveHeading06___3nquH\",\n\t\"bodyShort01\": \"openmrs-ohri___input__bodyShort01___1-lOo\",\n\t\"helperText01\": \"openmrs-ohri___input__helperText01___3mUe2\",\n\t\"bodyShort02\": \"openmrs-ohri___input__bodyShort02___1SQXu\",\n\t\"bodyLong01\": \"openmrs-ohri___input__bodyLong01___1SogS\",\n\t\"bodyLong02\": \"openmrs-ohri___input__bodyLong02___1Wtsy\",\n\t\"label01\": \"openmrs-ohri___input__label01___2tspH\",\n\t\"text01\": \"openmrs-ohri___input__text01___1TD33\",\n\t\"text02\": \"openmrs-ohri___input__text02___34XWE\",\n\t\"formField\": \"openmrs-ohri___input__formField___1AY8i\",\n\t\"numberInputWrapper\": \"openmrs-ohri___input__numberInputWrapper___3SPQH\",\n\t\"formInputField\": \"openmrs-ohri___input__formInputField___xDdc2\",\n\t\"ohriFormLabel\": \"openmrs-ohri___input__ohriFormLabel___2K9Mo\",\n\t\"datePickerOverrides\": \"openmrs-ohri___input__datePickerOverrides___gyecw\",\n\t\"disabledLabelOverrides\": \"openmrs-ohri___input__disabledLabelOverrides___2vK-E\",\n\t\"multiselectOverride\": \"openmrs-ohri___input__multiselectOverride___3kgAo\",\n\t\"dropDownOverride\": \"openmrs-ohri___input__dropDownOverride___2wcnI\",\n\t\"textContainer\": \"openmrs-ohri___input__textContainer___12KRx\",\n\t\"selectedOption\": \"openmrs-ohri___input__selectedOption___SZu3V\",\n\t\"switchOverrides\": \"openmrs-ohri___input__switchOverrides___3-ALO\",\n\t\"switchOverridesNone\": \"openmrs-ohri___input__switchOverridesNone___nXV_C\",\n\t\"radioButton_ohri\": \"openmrs-ohri___input__radioButton_ohri___76iRx\",\n\t\"bx--radio-button-wrapper\": \"openmrs-ohri___input__bx--radio-button-wrapper___Cimqv\",\n\t\"textInputOverrides\": \"openmrs-ohri___input__textInputOverrides___1IitC\",\n\t\"unspecified\": \"openmrs-ohri___input__unspecified___3XG-g\",\n\t\"errorLegend\": \"openmrs-ohri___input__errorLegend___27dMl\",\n\t\"errorLabel\": \"openmrs-ohri___input__errorLabel___MB7pZ\",\n\t\"obsGroupColumn\": \"openmrs-ohri___input__obsGroupColumn___1o697\",\n\t\"repeatContentWrapper\": \"openmrs-ohri___input__repeatContentWrapper___2-Vbg\",\n\t\"ohriLabel\": \"openmrs-ohri___input__ohriLabel___10_7e\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.openmrs-ohri___page__productiveHeading01___1I2AV{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.openmrs-ohri___page__productiveHeading02___2KNcV{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.openmrs-ohri___page__productiveHeading03___1YOvy{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.openmrs-ohri___page__productiveHeading04____JvMS{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.openmrs-ohri___page__productiveHeading05___3_pJW{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}.openmrs-ohri___page__productiveHeading06___rZ8Qw{font-size:2rem;font-weight:300;line-height:1.199;letter-spacing:0}.openmrs-ohri___page__bodyShort01___16s3G{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.openmrs-ohri___page__helperText01___2hLb3{font-size:.75rem;line-height:1.34;letter-spacing:.32px}.openmrs-ohri___page__bodyShort02___WkF8Q{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.openmrs-ohri___page__bodyLong01___3J0pi{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.openmrs-ohri___page__bodyLong02___22Cd3{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}.openmrs-ohri___page__label01___3K1me{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.openmrs-ohri___page__text01___2yS_a{color:#161616}.openmrs-ohri___page__text02___3x4Dc{color:#525252}aside{background-color:#fff !important}div[class*=-esm-login__styles__center]>img{width:140px}.tab-12rem>button{width:12rem !important}.tab-14rem>button{width:14rem !important}.tab-16rem>button{width:16rem !important}.openmrs-ohri___page__divider___1yvKR{background-color:rgba(107,104,104,.5);margin:25px 0}.openmrs-ohri___page__pageContent___3aDP7:last-child>hr{display:none}.openmrs-ohri___page__pageHeader___ojjH5{display:flex;flex-direction:row;margin:20px 0 20px 15px}.openmrs-ohri___page__pageTitle___2VjsK{font-size:1.25rem;font-weight:600;line-height:1.4;color:var(--color-gray-100);width:100%}.openmrs-ohri___page__required___1elZl{margin:.25rem 27rem .5rem 0;font-size:.875rem;line-height:1.29;letter-spacing:.16px;color:var(--color-gray-70);width:100%}.openmrs-ohri___page__formSection___1fbE6{flex:1 1 65%}.openmrs-ohri___page__formSection___1fbE6>div>fieldset{margin-bottom:0 !important}.openmrs-ohri___page__collapseToggle___2FuSQ{margin-Left:-180px;margin-bottom:20px;margin-top:-10px}.openmrs-ohri___page__sectionContent___CZG98>div{background-color:#f4f4f4}.openmrs-ohri___page__formSection___1fbE6>div div div input,.openmrs-ohri___page__formSection___1fbE6>div div div textarea,.openmrs-ohri___page__formSection___1fbE6>div div div dropdown,.openmrs-ohri___page__formSection___1fbE6 .bx--dropdown button{background-color:#fff !important}@media(min-width: 640px){.bx--accordion__content{padding-right:2rem !important}}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"productiveHeading01\": \"openmrs-ohri___page__productiveHeading01___1I2AV\",\n\t\"productiveHeading02\": \"openmrs-ohri___page__productiveHeading02___2KNcV\",\n\t\"productiveHeading03\": \"openmrs-ohri___page__productiveHeading03___1YOvy\",\n\t\"productiveHeading04\": \"openmrs-ohri___page__productiveHeading04____JvMS\",\n\t\"productiveHeading05\": \"openmrs-ohri___page__productiveHeading05___3_pJW\",\n\t\"productiveHeading06\": \"openmrs-ohri___page__productiveHeading06___rZ8Qw\",\n\t\"bodyShort01\": \"openmrs-ohri___page__bodyShort01___16s3G\",\n\t\"helperText01\": \"openmrs-ohri___page__helperText01___2hLb3\",\n\t\"bodyShort02\": \"openmrs-ohri___page__bodyShort02___WkF8Q\",\n\t\"bodyLong01\": \"openmrs-ohri___page__bodyLong01___3J0pi\",\n\t\"bodyLong02\": \"openmrs-ohri___page__bodyLong02___22Cd3\",\n\t\"label01\": \"openmrs-ohri___page__label01___3K1me\",\n\t\"text01\": \"openmrs-ohri___page__text01___2yS_a\",\n\t\"text02\": \"openmrs-ohri___page__text02___3x4Dc\",\n\t\"divider\": \"openmrs-ohri___page__divider___1yvKR\",\n\t\"pageContent\": \"openmrs-ohri___page__pageContent___3aDP7\",\n\t\"pageHeader\": \"openmrs-ohri___page__pageHeader___ojjH5\",\n\t\"pageTitle\": \"openmrs-ohri___page__pageTitle___2VjsK\",\n\t\"required\": \"openmrs-ohri___page__required___1elZl\",\n\t\"formSection\": \"openmrs-ohri___page__formSection___1fbE6\",\n\t\"collapseToggle\": \"openmrs-ohri___page__collapseToggle___2FuSQ\",\n\t\"sectionContent\": \"openmrs-ohri___page__sectionContent___CZG98\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".openmrs-ohri__ohri-form-section__section___X07w6{border-radius:solid 1px rgba(107,104,104,.5);margin-bottom:3.063rem}.openmrs-ohri__ohri-form-section__sectionTitle___1Oajl{max-width:200px;font-size:1rem;font-weight:600;line-height:1.38;color:#525252;margin-bottom:.5rem}.openmrs-ohri__ohri-form-section__sectionContainer___iQ7nY{margin-top:1.438rem;width:90%}.openmrs-ohri__ohri-form-section__sectionContainer___iQ7nY .bx--fieldset{margin-bottom:0}.openmrs-ohri__ohri-form-section__sectionContainer___iQ7nY>div{margin-bottom:1rem}.openmrs-ohri__ohri-form-section__sectionContainer___iQ7nY .bx--label{text-align:left}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"section\": \"openmrs-ohri__ohri-form-section__section___X07w6\",\n\t\"sectionTitle\": \"openmrs-ohri__ohri-form-section__sectionTitle___1Oajl\",\n\t\"sectionContainer\": \"openmrs-ohri__ohri-form-section__sectionContainer___iQ7nY\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.openmrs-ohri__ohri-form-sidebar-component__productiveHeading01___2a1ss{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.openmrs-ohri__ohri-form-sidebar-component__productiveHeading02___3ztK8{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.openmrs-ohri__ohri-form-sidebar-component__productiveHeading03___3UWKO{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.openmrs-ohri__ohri-form-sidebar-component__productiveHeading04___2nBC8{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.openmrs-ohri__ohri-form-sidebar-component__productiveHeading05___2FERy{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}.openmrs-ohri__ohri-form-sidebar-component__productiveHeading06___xd5O-{font-size:2rem;font-weight:300;line-height:1.199;letter-spacing:0}.openmrs-ohri__ohri-form-sidebar-component__bodyShort01___fiRR7{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.openmrs-ohri__ohri-form-sidebar-component__helperText01___5yubD{font-size:.75rem;line-height:1.34;letter-spacing:.32px}.openmrs-ohri__ohri-form-sidebar-component__bodyShort02___1spZ1{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.openmrs-ohri__ohri-form-sidebar-component__bodyLong01___1kGp9{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.openmrs-ohri__ohri-form-sidebar-component__bodyLong02___qVlAW{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}.openmrs-ohri__ohri-form-sidebar-component__label01___3RA0R{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.openmrs-ohri__ohri-form-sidebar-component__text01___3SrmB{color:#161616}.openmrs-ohri__ohri-form-sidebar-component__text02___3jbh-{color:#525252}aside{background-color:#fff !important}div[class*=-esm-login__styles__center]>img{width:140px}.tab-12rem>button{width:12rem !important}.tab-14rem>button{width:14rem !important}.tab-16rem>button{width:16rem !important}.openmrs-ohri__ohri-form-sidebar-component__sidebar___Xr1ih{width:12rem;min-height:8rem;overscroll-behavior:contain;margin:1px 13px 15px 0}.openmrs-ohri__ohri-form-sidebar-component__sidebarList___2hsxP{max-Height:100%}.openmrs-ohri__ohri-form-sidebar-component__sidenavActions___23RWI{margin-left:.6rem}@media all and (device-width: 600px)and (device-height: 1024px)and (orientation: portrait){.openmrs-ohri__ohri-form-sidebar-component__sidebar___Xr1ih{width:11rem;max-height:500px;margin-right:20px;position:fixed}.openmrs-ohri__ohri-form-sidebar-component__sidebarList___2hsxP{max-Height:200px;overflow-y:scroll}}.openmrs-ohri__ohri-form-sidebar-component__link___2i3jc{margin:.375rem 0 .375rem .5rem;font-size:1rem;line-height:1.43;letter-spacing:.16px;color:#161616;cursor:pointer}.openmrs-ohri__ohri-form-sidebar-component__link___2i3jc{margin:.375rem 0 .375rem .5rem;font-size:1rem;line-height:1.43;letter-spacing:.16px;color:#161616;cursor:pointer}.openmrs-ohri__ohri-form-sidebar-component__link___2i3jc:hover{outline:none}.openmrs-ohri__ohri-form-sidebar-component__sidebarSection___2-GuU{border-left:.5rem solid #3197d9;height:auto;margin:.122rem 0 .122rem;padding:.382rem .375rem .118rem 1rem;background-color:#fff;cursor:pointer}.openmrs-ohri__ohri-form-sidebar-component__sidebarSectionActive___cav-P{border-left:.5rem solid #1a3054;height:auto;font-weight:600;margin:.122rem 0 .122rem;padding:.382rem .375rem .118rem 1rem;background-color:#ededed;cursor:pointer}.openmrs-ohri__ohri-form-sidebar-component__sidebarSectionDone___3Ls24{border-left:.5rem solid #131e35;height:auto;margin:.122rem 0 .122rem;padding:.382rem .375rem .118rem 1rem;background-color:#defbe6;cursor:pointer}.openmrs-ohri__ohri-form-sidebar-component__sidebarSectionLink___3snIF{font-size:.875rem;font-stretch:normal;font-style:normal;line-height:1.43;letter-spacing:.16px;color:#161616}.openmrs-ohri__ohri-form-sidebar-component__sideBarHorizontalLine___1hFf8{margin-top:1.5rem}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"productiveHeading01\": \"openmrs-ohri__ohri-form-sidebar-component__productiveHeading01___2a1ss\",\n\t\"productiveHeading02\": \"openmrs-ohri__ohri-form-sidebar-component__productiveHeading02___3ztK8\",\n\t\"productiveHeading03\": \"openmrs-ohri__ohri-form-sidebar-component__productiveHeading03___3UWKO\",\n\t\"productiveHeading04\": \"openmrs-ohri__ohri-form-sidebar-component__productiveHeading04___2nBC8\",\n\t\"productiveHeading05\": \"openmrs-ohri__ohri-form-sidebar-component__productiveHeading05___2FERy\",\n\t\"productiveHeading06\": \"openmrs-ohri__ohri-form-sidebar-component__productiveHeading06___xd5O-\",\n\t\"bodyShort01\": \"openmrs-ohri__ohri-form-sidebar-component__bodyShort01___fiRR7\",\n\t\"helperText01\": \"openmrs-ohri__ohri-form-sidebar-component__helperText01___5yubD\",\n\t\"bodyShort02\": \"openmrs-ohri__ohri-form-sidebar-component__bodyShort02___1spZ1\",\n\t\"bodyLong01\": \"openmrs-ohri__ohri-form-sidebar-component__bodyLong01___1kGp9\",\n\t\"bodyLong02\": \"openmrs-ohri__ohri-form-sidebar-component__bodyLong02___qVlAW\",\n\t\"label01\": \"openmrs-ohri__ohri-form-sidebar-component__label01___3RA0R\",\n\t\"text01\": \"openmrs-ohri__ohri-form-sidebar-component__text01___3SrmB\",\n\t\"text02\": \"openmrs-ohri__ohri-form-sidebar-component__text02___3jbh-\",\n\t\"sidebar\": \"openmrs-ohri__ohri-form-sidebar-component__sidebar___Xr1ih\",\n\t\"sidebarList\": \"openmrs-ohri__ohri-form-sidebar-component__sidebarList___2hsxP\",\n\t\"sidenavActions\": \"openmrs-ohri__ohri-form-sidebar-component__sidenavActions___23RWI\",\n\t\"link\": \"openmrs-ohri__ohri-form-sidebar-component__link___2i3jc\",\n\t\"sidebarSection\": \"openmrs-ohri__ohri-form-sidebar-component__sidebarSection___2-GuU\",\n\t\"sidebarSectionActive\": \"openmrs-ohri__ohri-form-sidebar-component__sidebarSectionActive___cav-P\",\n\t\"sidebarSectionDone\": \"openmrs-ohri__ohri-form-sidebar-component__sidebarSectionDone___3Ls24\",\n\t\"sidebarSectionLink\": \"openmrs-ohri__ohri-form-sidebar-component__sidebarSectionLink___3snIF\",\n\t\"sideBarHorizontalLine\": \"openmrs-ohri__ohri-form-sidebar-component__sideBarHorizontalLine___1hFf8\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".openmrs-ohri__ohri-field-value-view__readOnlyStyle___MxUhu{border-bottom:.5px #c6c6c6;border-style:solid}.openmrs-ohri__ohri-field-value-view__readOnlyStyle___MxUhu>div{padding-bottom:7px !important}.openmrs-ohri__ohri-field-value-view__readOnlyValue___1wQeH{color:#525252}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"readOnlyStyle\": \"openmrs-ohri__ohri-field-value-view__readOnlyStyle___MxUhu\",\n\t\"readOnlyValue\": \"openmrs-ohri__ohri-field-value-view__readOnlyValue___1wQeH\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".openmrs-ohri__ohri-form__ohriForm___2RsoG{height:100%;overflow:hidden;flex-grow:1}.openmrs-ohri__ohri-form__ohriFormContainer___zLqL5{display:-webkit-flex;height:100%;overflow-y:hidden}.openmrs-ohri__ohri-form__ohriFormContainer___zLqL5 .bx--label{font-size:.875rem}.openmrs-ohri__ohri-form__formContent___49VEt{margin:0;flex-basis:65%;flex-grow:1;flex-shrink:1;position:relative;overflow-y:hidden;display:flex;flex-direction:column}.openmrs-ohri__ohri-form__formContentBody___10Ea0{overflow-y:auto;width:inherit;position:sticky}.openmrs-ohri__ohri-form__minifiedFormContentBody___2uqvq{margin-bottom:0px !important}@media(max-width: 768px){.openmrs-ohri__ohri-form__ohriFormContainer___zLqL5{height:100vh}}.openmrs-ohri__ohri-form__minifiedButtons___1Ly6A{width:100%;height:63.5px}.openmrs-ohri__ohri-form__minifiedButtons___1Ly6A .bx--btn{max-width:50%;height:3.9rem}.openmrs-ohri__ohri-form__minifiedButtons___1Ly6A>button{width:50%}.openmrs-ohri__ohri-form__markdownContainer___H0L0B{padding:1rem}aside[class*=-esm-patient-chart__workspace-window__container__]{border-left:1px solid #8d8d8d !important}aside[class*=-esm-patient-chart__workspace-window__container__]>div{display:flex;bottom:0}aside[class*=-esm-patient-chart__workspace-window__container__]>div>div{flex-grow:1}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"ohriForm\": \"openmrs-ohri__ohri-form__ohriForm___2RsoG\",\n\t\"ohriFormContainer\": \"openmrs-ohri__ohri-form__ohriFormContainer___zLqL5\",\n\t\"formContent\": \"openmrs-ohri__ohri-form__formContent___49VEt\",\n\t\"formContentBody\": \"openmrs-ohri__ohri-form__formContentBody___10Ea0\",\n\t\"minifiedFormContentBody\": \"openmrs-ohri__ohri-form__minifiedFormContentBody___2uqvq\",\n\t\"minifiedButtons\": \"openmrs-ohri__ohri-form__minifiedButtons___1Ly6A\",\n\t\"markdownContainer\": \"openmrs-ohri__ohri-form__markdownContainer___H0L0B\"\n};\nmodule.exports = exports;\n"],"names":["BASE_WS_API_URL","fetchLastVisit","uuid","openmrsFetch","fetchPatientList","offSet","pageSize","fetchTodayClients","date","moment","format","then","data","entry","length","cleanDuplicatePatientReferences","fetchPatientsFromObservationCodeConcept","codeConcept","valueConcept","cutOffDays","endDate","startDate","subtract","patientRefs","map","enc","resource","subject","reference","Set","Array","from","Promise","all","ref","async","getCohort","cohortUuid","version","cohortMembers","filter","member","voided","getReportingCohort","queryParams","params","join","url","getReportingCohortMembers","members","getCohorts","cohortTypeUuid","results","error","cohort","addPatientToCohort","patientUuid","method","headers","body","patient","Date","evictCohortMembership","membershipUuid","getPatientListsForPatient","membership","fetchPatientsFinalHIVStatus","patientUUID","finalHIVCodeConcept","finalPositiveHIVValueConcept","valueCodeableConcept","coding","display","fetchPatientComputedConcept_HIV_Status","computedHIV_StatusConcept","fetchPatientLastEncounter","encounterType","query","encounterRepresentation","fetchPatientCovidOutcome","covidOutcomesCohortUUID","BASE_FHIR_API_URL","fetchConceptNameByUuid","conceptUuid","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","className","styles","Loading","description","withOverlay","small","PatientBanner","hideActionsOverflow","ExtensionSlot","extensionSlotName","state","id","ConceptTrue","ConceptFalse","scrollIntoView","viewId","document","getElementById","behavior","block","inline","scrollAblePages","selectedPage","mode","onCancel","handleClose","values","setValues","allowUnspecifiedAll","defaultPage","activeLink","setActiveLink","useState","useEffect","find","label","isHidden","joinWord","value","replace","unspecifiedFields","useMemo","Object","keys","key","endsWith","split","isEmpty","markAllAsUnspecified","useCallback","toggled","forEach","field","page","index","onClick","selected","activeID","handleClick","style","marginBottom","Toggle","labelText","labelA","labelB","onToggle","Button","width","type","kind","OHRIFormContext","React","getConcept","v","openmrsObservableFetch","pipe","response","OHRIUnspecified","question","meta","useField","setFieldValue","previouslyUnspecified","setPreviouslyUnspecified","unspecified","errors","emptyValue","questionOptions","rendering","OHRIFieldValidator","handleOnChange","isTrue","readonly","Checkbox","onChange","checked","disabled","getFieldControl","concept","getFieldComponent","supportsUnspecified","fields","onFieldChange","sectionTitle","showTitle","component","qnFragment","handler","getHandler","OHRIObsGroup","deleteControl","groupContent","questions","groupMember","push","cascadeVisibityToChildFields","visibility","section","allFields","candidateIds","q","includes","isParentHidden","inferInitialValueFromDefaultFieldValue","context","defaultValue","answers","answer","errCode","errMessage","isValid","isNaN","OHRIDefaultFieldValueValidator","handleFieldSubmission","getConceptNameAndUUID","conceptName","isInlineView","renderingType","layoutType","workspaceLayout","OHRILabel","tooltipText","TooltipDefinition","direction","tabIndex","fontWeight","OHRIValueEmpty","fontSize","color","OHRIValueDisplay","isArray","OHRIListDisplay","valueArray","item","OHRIFieldValueView","isInline","inputControlStyles","Row","Column","lg","md","ObsSubmissionHandler","multiSelectObsHandler","constructObs","sessionMode","getInitialValue","encounter","allFormFields","obs","o","parentField","obsGroup","f","groupMembers","JSON","parse","stringify","subscribe","result","datatype","name","toDate","getDisplayValue","chosenOption","option","person","obsDatetime","location","order","opt","some","observations","OHRIDateValidator","validate","config","now","allowFutureDates","getTime","OHRIJSExpressionValidator","expressionContext","myValue","failsWhenExpression","evaluateExpression","message","baseFieldComponents","encounterContext","previousValue","setPreviousValue","setErrors","setConceptName","isFieldRequiredError","fieldRequiredErrCode","onBlur","conceptTooltip","inlineRendering","TextInput","onFocus","invalid","invalidText","FormGroup","paddingBottom","legendText","RadioButtonGroup","defaultSelected","valueSelected","orientation","RadioButton","placeHolder","carbonDateformat","formatObj","Intl","DateTimeFormat","window","navigator","language","formatToParts","obj","toLocaleDateString","DatePicker","datePickerType","refinedDate","getTimezoneOffset","dateFormat","DatePickerInput","placeholder","NumberInput","max","min","allowEmpty","size","t","useTranslation","counter","setCounter","touched","setTouched","questionItems","initiallySelectedQuestionItems","MultiSelect","selectedItems","selectedItem","items","initialSelectedItems","titleText","itemToString","marginTop","UnorderedList","marginLeft","displayValue","selectedIndex","findIndex","ContentSwitcher","Switch","text","setEncounterLocation","locations","setLocations","tag","locationTag","trim","createErrorHandler","Dropdown","setItems","handleChange","TextArea","rows","toggleOptions","labelFalse","labelTrue","setQuestions","obsGroupsToVoid","useFormikContext","viewPort","useLayoutType","rowWidth","alreadyMappedGroup","unMappedObsGroups","tempCounter","handleAdd","count","idSuffix","next","cloneDeep","initialValue","getInitialValueFromObs","nodes","paddingTop","renderIcon","TrashCan32","splice","removeQuestion","hasIconOnly","margin","Add16","nextCount","repeatOptions","addText","isFieldInitializationComplete","children","baseHandlers","fieldValidators","renderType","getValidator","validator","setSelectedPage","isCollapsed","newLabel","onEnter","topOffset","bottomOffset","Accordion","sections","sec","AccordionItem","title","open","InstantEffect","effect","OHRIEncounterForm","formJson","encounterDate","provider","scrollablePages","setScrollablePages","handlers","allInitialValues","setAllInitialValues","setFields","encounterLocation","setEncounter","form","setForm","setObsGroupsToVoid","formInitialValues","setFormInitialValues","setIsFieldInitializationComplete","addScrollablePages","pages","isSubform","add","delete","tempInitVals","isFieldEncounterBindingComplete","sectionReadonly","pageReadonly","formReadonly","groupedField","existingVal","emptyValues","checkbox","toggle","default","hide","evalHide","subscription","unsubscribe","node","allValues","hideWhenExpression","addObs","obsList","formFieldNamespace","formFieldPath","isValueEmpty","obsChild","formHasErrors","fieldName","validators","basevalidatorConfig","validatorConfig","fieldDependants","dep","dependant","fields_temp","pageDependants","form_temp","set","submit","obsForSubmission","hasValue","encounterForSubmission","assign","encProvider","encounterProviders","encounterRole","encounterDatetime","orders","abortController","payload","encounterUuid","signal","saveEncounter","AbortController","Provider","subform","onSubmit","currentProvider","setCurrentProvider","usePatient","session","useSessionUser","initialValues","setInitialValues","encDate","collapsed","setCollapsed","useRef","setMode","layout","current","offsetWidth","useWorkspaceLayout","Map","copy","i","showSideBar","getAsyncLifecycle","featureName","moduleName","detach","sessionLocation","enableReinitialize","validationSchema","Yup","setSubmitting","isSubmitable","submissions","showToast","critical","handleFormSubmit","props","markdown","expression","allFieldValues","allFieldsKeys","parts","registerDependency","candidate","today","questionId","isDateBefore","left","right","otherDate","useFieldValue","part","determinant","determinantValue","regx","RegExp","eval","console","sectionDependants","required","exports","___CSS_LOADER_API_IMPORT___","module","locals"],"sourceRoot":""}