{"version":3,"file":"3118.js","mappings":"2TAaA,MAAMA,EAAkB,eAGjB,SAASC,EAAeC,GAC7B,OAAOC,EAAAA,EAAAA,cAAc,kCAAiCD,0BAGjD,SAASE,EAAiBC,EAAiB,EAAGC,EAAmB,IACtE,OAAOH,EAAAA,EAAAA,cAAc,wCAAuCE,YAAiBC,KAGxE,SAASC,IACd,IAAIC,EAAOC,GAAAA,GAASC,OAAO,cAC3B,OAAOP,EAAAA,EAAAA,cAAc,+BAA8BK,KAAQG,MAAK,EAAGC,KAAAA,KAC7DA,EAAKC,OAAOC,OACPC,EAAgCH,GAElC,KAIJ,SAASI,EACdC,EACAC,EACAC,GAEA,IAAIC,EAAUX,GAAAA,GAASC,OAAO,cAC1BW,EAAYZ,GAAAA,GACba,SAASH,EAAY,QACrBT,OAAO,cAEV,OAAOP,EAAAA,EAAAA,cACJ,iCAAgCc,IAAcC,EAAgB,kBAAiBA,IAAiB,KAC/FC,EAAc,mBAAkBE,oBAA4BD,IAAY,MAE1ET,MAAK,EAAGC,KAAAA,KACJA,EAAKC,OAAOC,OACPC,EAAgCH,GAElC,KAIX,SAASG,EAAgCH,GACvC,IAAIW,EAAcX,EAAKC,MAAMW,KAAIC,GACxBA,EAAIC,SAASC,QAAQC,YAI9B,OAFAL,EAAc,IAAIM,IAAI,IAAIN,IAC1BA,EAAcO,MAAMC,KAAKR,GAClBS,QAAQC,IACbV,EAAYC,KAAIU,IACP/B,EAAAA,EAAAA,cAlDa,gBAkDoB+B,MAsBvCC,eAAeC,EAAUC,EAAoBC,GAClD,MAAM,KAAE1B,SAAeT,EAAAA,EAAAA,cACF,8BAAiBkC,IAAaC,EAAW,MAAKA,IAAa,MAGhF,OADA1B,EAAK2B,cAAgB3B,EAAK2B,cAAcC,QAAOC,IAAWA,EAAOC,SAC1D9B,EAGFuB,eAAeQ,EAAmBN,EAAoBO,GAC3D,MAAMC,EAASD,EAAcA,EAAYE,KAAK,KAAO,GAC/CC,EAAMF,EAAU,wBAAuBR,KAAcQ,IAAY,wBAAuBR,KACxF,KAAEzB,SAAeT,EAAAA,EAAAA,cAAaH,EAAkB+C,GACtD,OAAOnC,EAGFuB,eAAea,EAA0BX,EAAoBO,GAClE,MAAMC,EAASD,EAAcA,EAAYE,KAAK,KAAO,GAC/CC,EAAMF,EAAU,wBAAuBR,KAAcQ,IAAY,wBAAuBR,KACxF,KAAEzB,SAAeT,EAAAA,EAAAA,cAAaH,EAAkB+C,GACtD,OAAOf,QAAQC,IACbrB,EAAKqC,QAAQzB,KAAIiB,IACRtC,EAAAA,EAAAA,cAAgC,uBAAUsC,EAAOvC,kBAKvDiC,eAAee,EAAWC,GAC/B,MACEvC,MAAM,QAAEwC,EAAF,MAAWC,UACTlD,EAAAA,EAAAA,cACRH,0DAC+CmD,EAAkB,eAAcA,IAAmB,KAEpG,GAAIE,EACF,MAAMA,EAER,OAAOD,EAAQZ,QAAOc,IAAWA,EAAOZ,SAGnC,SAASa,EAAmBC,EAAqBnB,GACtD,OAAOlC,EAAAA,EAAAA,cAAc,mCAAyC,CAC5DsD,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAM,CACJC,QAASJ,EACTF,OAAQjB,EACRhB,UAAW,IAAIwC,QAKd,SAASC,EAAsBC,GACpC,OAAO5D,EAAAA,EAAAA,cAAc,oCAAyC4D,IAAkB,CAAEN,OAAQ,WAGrFtB,eAAe6B,EAA0BR,GAC9C,MACE5C,MAAM,QAAEwC,EAAF,MAAWC,UACTlD,EAAAA,EAAAA,cAAc,4CAAiDqD,YACzE,GAAIH,EACF,MAAMA,EAER,OAAOD,EAAQZ,QAAOyB,IAAeA,EAAWvB,SAG3C,SAASwB,EAA4BC,GAC1C,OAAOhE,EAAAA,EAAAA,cACJ,iCAAgCiE,EAAAA,oBAAqCC,EAAAA,cAAwCF,0BAC9GxD,MAAK,EAAGC,KAAAA,KACJA,EAAKC,OAAOC,OACPF,EAAKC,MAAM,GAAGa,SAAS4C,qBAAqBC,OAAO,GAAGC,QAExD,KAcJ,SAASC,EAAuCN,GACrD,OAAOhE,EAAAA,EAAAA,cACJ,iCAAgCuE,EAAAA,oBAA2CA,EAAAA,cAAqCP,0BACjHxD,MAAK,EAAGC,KAAAA,KACJA,EAAKC,OAAOC,OACPF,EAAKC,MAAM,GAAGa,SAAS4C,qBAAqBC,OAAO,GAAGC,QAExD,KAKJ,SAASG,EAA0BnB,EAAqBoB,GAC7D,MAAMC,EAAS,iBAAgBD,aAAyBpB,IACxD,OAAOrD,EAAAA,EAAAA,cAAc,yBAAwB0E,OAAWC,EAAAA,MAA2BnE,MAAK,EAAGC,KAAAA,KACrFA,EAAKwC,QAAQtC,OACRF,EAAKwC,QAAQxC,EAAKwC,QAAQtC,OAAS,GAGrC,OAIJ,SAASiE,IACd,OAAO5E,EAAAA,EAAAA,cAAc,oCAAmC6E,EAAAA,MAA2BrE,MAAK,EAAGC,KAAAA,MACzF,GAAIA,EAAKqC,SAASnC,OAAQ,CACxB,IAAIS,EAAcX,EAAKqC,QAAQzB,KAAIiB,GAC1BA,EAAOvC,OAIhB,OAFAqB,EAAc,IAAIM,IAAI,IAAIN,IAC1BA,EAAcO,MAAMC,KAAKR,GAClBS,QAAQC,IACbV,EAAYC,KAAIU,IACP/B,EAAAA,EAAAA,cAAa8E,wBAAiC/C,MAI3D,MAAO,MAIJ,SAASgD,EAAuBC,GACrC,OAAOhF,EAAAA,EAAAA,cAAc,uBAAsBgF,kBAA4BxE,MAAK,EAAGC,KAAAA,MAC7E,GAAIA,EAAKwC,QAAQtC,OAEf,OADgBF,EAAKwC,QAAQxC,EAAKwC,QAAQtC,OAAS,GACpC0D,a,uMCrNrB,MAsCaY,EAOR,EAAGC,OAAAA,EAAQC,MAAAA,EAAO9B,YAAAA,EAAa+B,WAAAA,EAAYC,MAAAA,EAAOC,eAAAA,MACrD,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAgD,KACvEC,EAA0BC,IAA+BF,EAAAA,EAAAA,UAAS,KAClEG,EAAoBC,IAAyBJ,EAAAA,EAAAA,UAAS,KACtDK,EAAWC,IAAgBN,EAAAA,EAAAA,WAAS,IACpCO,EAAcC,IAAmBR,EAAAA,EAAAA,UAAS,OAC1CS,EAAcC,IAAmBV,EAAAA,EAAAA,WAAS,IAEjDW,EAAAA,EAAAA,YAAU,KACRvE,QAAQC,IAAI,EAACiB,EAAAA,EAAAA,IAAWqC,IAAavB,EAAAA,EAAAA,IAA0BR,KAAe7C,MAC5E,EAAE6F,EAAeC,MAEf,IAAIC,EAAkBF,EAAchE,QAClCc,IAAWmD,EAAyBE,MAAK1C,GAAcX,EAAOpD,MAAQ+D,EAAWX,OAAOpD,SAEtFuF,GAAkBA,EAAe3E,SACnC4F,EAAkBA,EAAgBlE,QAAOc,IAAWmC,EAAemB,SAAStD,EAAOuD,SAErFlB,EAAWe,GACXV,EAAsBS,GACtBX,EAA4BW,EAAyBjF,KAAIyC,GAAcA,EAAWX,UAClF4C,GAAa,QAGhB,CAACX,IAEJ,MAAMuB,GAAiBC,EAAAA,EAAAA,UAAQ,KAC7B,MAAMC,EAAWtB,EAAQlE,KAAI,CAAC8B,EAAQ2D,IACpC,kBAAC,IAAD,CAAaC,UAAW5D,EAAOuD,KAAMM,MAAO7D,EAAOpD,KAAMkH,GAAI9D,EAAOpD,KAAMmH,IAAKJ,MAGjF,OADAD,EAASM,KAAK,kBAAC,IAAD,CAAaJ,UAAU,OAAOC,MAAM,OAAOC,GAAG,UACrDJ,IACN,CAACtB,IAEE6B,GAASR,EAAAA,EAAAA,UAAQ,IAEnB,oCACE,kBAAC,IAAD,CAAcS,MAAM,QACpB,kBAAC,IAAD,CAAcA,MAAM,UAGvB,IAEGC,GAAyBV,EAAAA,EAAAA,UAAQ,IACjClB,EAAyB/E,OAEzB,kBAAC,IAAD,CAAe4G,MAAO,CAAEC,WAAY,OAAQC,aAAc,OAAQC,MAAO,YACtEhC,EAAyBrE,KAAI,CAAC8B,EAAQ2D,IACrC,kBAAC,IAAD,CAAUI,IAAKJ,GAAQ3D,EAAOuD,SAMpC,yBAAKa,MAAO,CAAEE,aAAc,SAC1B,0BAAMF,MAAO,CAAEI,SAAU,UAAWD,MAAO,YAA3C,gBAGH,CAAChC,IAEEkC,GAAeC,EAAAA,EAAAA,cAAY,KAC/B1B,GAAgB,GACI,QAAhBH,EAIFnE,QAAQC,IAAI8D,EAAmBvE,KAAIyC,IAAcH,EAAAA,EAAAA,IAAsBG,EAAW/D,SAC/ES,MAAKyC,KACJ6E,EAAAA,EAAAA,WAAU,CACRC,KAAM,UACNC,UAAU,EACVC,YAAc,oDAEhB9C,OAED+C,OAAMhF,IACLiD,GAAgB,OAGpB/C,EAAAA,EAAAA,IAAmBC,EAAa2C,GAAcxF,MAAK2H,IAC7CA,EAASC,KACXN,EAAAA,EAAAA,WAAU,CACRC,KAAM,UACNC,UAAU,EACVC,YAAc,qCAAoCE,EAAS1H,KAAK0C,OAAOkB,YAEzEc,KAEAgB,GAAgB,QAIrB,CAACH,EAAc3C,EAAa8B,EAAOS,IACtC,OACE,oCACE,kBAAC,IAAD,CACE2B,MAAO,CAAEc,OAAQ,OACjBC,KAAMpD,EACNqD,aAAclD,GAAS,sBACvBmD,WAAW,GACXC,eAAgBtD,EAChBuD,cAAc,EACdC,kBAAkB,UAClBC,oBAAoB,SACpBC,gBAAiBjB,EACjBkB,sBACEhD,GACgB,MAAhBE,GACAE,GACiB,QAAhBF,GAAuD,GAA7BJ,EAAmBjF,QAEhD,yBAAK4G,MAAO,CAAEwB,YAAa,OAAQtB,aAAc,SAC/C,uBAAGF,MAAO,CAAEE,aAAc,SAA1B,wCACC3B,EAAYsB,EAASE,EACtB,uBAAGC,MAAO,CAAEE,aAAc,SAA1B,2CAEC3B,EACCsB,EAEA,kBAAC,IAAD,CACE4B,WAAW,GACXtC,KAAK,gBACLuC,YAAY,WACZC,SAAUC,GAAYlD,EAAgBkD,EAASC,aAC9CzC,OASf,EA9KK,EAAGtD,YAAAA,EAAagG,YAAAA,EAAa/D,eAAAA,MAChC,MAAM,QAAE7B,IAAY6F,EAAAA,EAAAA,YAAWjG,IACxB6B,EAAQqE,IAAa9D,EAAAA,EAAAA,WAAS,GAC/B+D,GAAiB5C,EAAAA,EAAAA,UAAQ,IACtBnD,EAAW,GAAEA,EAAQiD,KAAK,GAAG+C,MAAM9G,KAAK,QAAQc,EAAQiD,KAAK,GAAGgD,SAAW,WACjF,CAACjG,IAEJ,OACE,oCACGyB,GACC,kBAACD,EAAD,CACEC,OAAQA,EACRC,MAAO,IAAMoE,GAAU,GACvBlG,YAAaA,EACbgC,MAAQ,OAAMmE,YACdlE,eAAgBA,IAGpB,wBAAIqE,UAAU,qCACZ,4BACEA,UAAU,iCACVC,KAAK,WACLvE,MAAM,cACNwE,QAAS,IAAMN,GAAU,GACzBhC,MAAO,CACLuC,SAAU,UAEZ,0BAAMH,UAAU,6CAA6CN,GAAe,oB,uwBCrC/E,MAOMU,EAAW,6BACXpF,EACX,wQAMWV,EAAsB,uCACtBC,EAA+B,uCAC/BK,EAA4B,uCAG5ByF,EAA0B,uCAC1BC,EAA8B,uCAG9BC,EAA2B,uCAC3BC,EAA0B,uCAC1BC,EAA4B,uCAC5BC,EAAwB,uCACxBC,EAAuB,uCAGvBC,EAA0B,uCAC1BC,EAAoC,uCAGpCC,EAAyB,uCACzBC,EAAyB,uCAGzBC,EAAwB,uCACxBC,EAAgB,uCAChBC,EAAe,uCAIfhG,EAA0B,uCAG1BiG,EAAgC,uCAChCC,EAAiC,uCACjCC,EAA+B,uCAC/BC,EAA6B,uCAC7BC,EAA4B,uCAC5BC,EAAoB,uCACpBC,EAA0B,uCAG1BC,EAA6B,uCAC7BC,EAAyB,uCACzBC,EAAmB,uCACnBC,EAAiB,uCAEjBC,EAAyB,uCACzBC,EAAqB,uCAGrBC,EAAgC,uCAChCC,EAA6B,uCAC7BC,EAA0B,uCAC1BC,EAAsB,uCAOtBC,EAAiC,uCACjCC,EAAoC,uCAGpCC,EAAmB,uCAanBC,EAA8B,uCAE9BC,EAAmC,uCAKnCC,EAA8B,uCAC9BC,EAA4B,uCAG5BC,EAAyB,uCACzBC,EAAkC,uCAClCC,EAAgB,uCAChBC,EAAkB,uCAMlBC,EAA8B,uCAI9BC,EAA8B,uCAC9BC,EAA2B,uCAG3BC,GAAgC,uCAMhCC,GAA2C,uCAE3CC,GAAyC,uCACzCC,GAAuC,uCACvCC,GAA2B,uCAK3BC,GAAkB,uCAGlBC,GAA4B,uCAC5BC,GAA0B,uCAC1BC,GAAmB,uCAEnBC,GAAqB,uCACrBC,GAAkB,uCAClBC,GAAiB,uCACjBC,GAAuB,uCACvBC,GAAmB,uCACnBC,GAAuB,uCACvBC,GAAiB,uCAGjBC,GAAkC,wCAOlCC,GAAoB,uCACpBC,GAAmB,uCAGnBC,GAAoB,uCACpBC,GAAoB,uCACpBC,GAAqB,uCACrBC,GAA8B,uCAG9BC,GAAgC,uCAChCC,GAAiB,uCACjBC,GAAyB,uCACzBC,GAAuB,uCACvBC,GAAgB,wC,gBC7K7B,IAAInN,EAAM,CACT,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,KACX,aAAc,KACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,aAAc,KACd,UAAW,KACX,aAAc,KACd,UAAW,KACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,gBAAiB,MACjB,aAAc,MACd,gBAAiB,MACjB,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,KACR,UAAW,KACX,UAAW,MACX,aAAc,MACd,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,WAAY,MACZ,cAAe,MACf,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,YAAa,MACb,eAAgB,MAChB,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,QAAS,MACT,WAAY,MACZ,OAAQ,KACR,UAAW,KACX,QAAS,MACT,WAAY,MACZ,QAAS,MACT,aAAc,MACd,gBAAiB,MACjB,WAAY,MACZ,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,YAAa,MACb,eAAgB,MAChB,UAAW,MACX,OAAQ,KACR,UAAW,KACX,aAAc,KACd,gBAAiB,KACjB,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,OAIf,SAASoN,EAAeC,GACvB,IAAIzH,EAAK0H,EAAsBD,GAC/B,OAAOE,EAAoB3H,GAE5B,SAAS0H,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAExN,EAAKqN,GAAM,CACpC,IAAII,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEE,KAAO,mBACHF,EAEP,OAAOzN,EAAIqN,GAEZD,EAAeQ,KAAO,WACrB,OAAOC,OAAOD,KAAK5N,IAEpBoN,EAAeU,QAAUR,EACzBS,EAAOC,QAAUZ,EACjBA,EAAexH,GAAK","sources":["webpack://openmrs-ohri-app/./src/api/api.ts","webpack://openmrs-ohri-app/./src/components/modals/patient-list/add-patient-to-list-modal.component.tsx","webpack://openmrs-ohri-app/./src/constants.ts","webpack://openmrs-ohri-app//home/runner/work/openmrs-esm-ohri/openmrs-esm-ohri/node_modules/moment/locale|sync|/^\\.\\/.*$/"],"sourcesContent":["import { openmrsFetch } from '@openmrs/esm-framework';\nimport moment from 'moment';\nimport { getObsFromEncounter } from '../components/encounter-list/encounter-list.component';\nimport {\n  finalHIVCodeConcept,\n  finalPositiveHIVValueConcept,\n  computedHIV_StatusConcept,\n  encounterRepresentation,\n  covidOutcomeUUID,\n  covid_Assessment_EncounterUUID,\n  covidOutcomesCohortUUID,\n} from '../constants';\n\nconst BASE_WS_API_URL = '/ws/rest/v1/';\nconst BASE_FHIR_API_URL = '/ws/fhir2/R4/';\n\nexport function fetchLastVisit(uuid: string) {\n  return openmrsFetch(`/ws/fhir2/R4/Encounter?patient=${uuid}&_sort=-date&_count=1`);\n}\n\nexport function fetchPatientList(offSet: number = 1, pageSize: number = 10) {\n  return openmrsFetch(`/ws/fhir2/R4/Patient?_getpagesoffset=${offSet}&_count=${pageSize}`);\n}\n\nexport function fetchTodayClients() {\n  let date = moment().format('YYYY-MM-DD');\n  return openmrsFetch(`/ws/fhir2/R4/Encounter?date=${date}`).then(({ data }) => {\n    if (data.entry?.length) {\n      return cleanDuplicatePatientReferences(data);\n    }\n    return [];\n  });\n}\n\nexport function fetchPatientsFromObservationCodeConcept(\n  codeConcept: string,\n  valueConcept?: string,\n  cutOffDays?: number,\n) {\n  let endDate = moment().format('YYYY-MM-DD');\n  let startDate = moment()\n    .subtract(cutOffDays, 'days')\n    .format('YYYY-MM-DD');\n\n  return openmrsFetch(\n    `/ws/fhir2/R4/Observation?code=${codeConcept}${valueConcept ? `&value-concept=${valueConcept}` : ''}${\n      cutOffDays ? `&_lastUpdated=ge${startDate}&_lastUpdated=le${endDate}` : ''\n    }`,\n  ).then(({ data }) => {\n    if (data.entry?.length) {\n      return cleanDuplicatePatientReferences(data);\n    }\n    return [];\n  });\n}\n\nfunction cleanDuplicatePatientReferences(data) {\n  let patientRefs = data.entry.map(enc => {\n    return enc.resource.subject.reference;\n  });\n  patientRefs = new Set([...patientRefs]);\n  patientRefs = Array.from(patientRefs);\n  return Promise.all(\n    patientRefs.map(ref => {\n      return openmrsFetch(BASE_FHIR_API_URL + ref);\n    }),\n  );\n}\n\nexport function performPatientSearch(query, objectVersion) {\n  return openmrsFetch(`${BASE_WS_API_URL}/patient?q=${query}${objectVersion ? `&v=${objectVersion}` : ''}`, {\n    method: 'GET',\n  });\n}\n\nexport function getPatients(searchPhrase?: string, offset?: number, pageSize: number = 10) {\n  return openmrsFetch(\n    `/ws/fhir2/R4/Patient?_count=${pageSize}${searchPhrase ? `&name=${searchPhrase}` : ''}${\n      offset ? `&_getpagesoffset=${offset}` : ''\n    }`,\n    {\n      method: 'GET',\n    },\n  );\n}\n\nexport async function getCohort(cohortUuid: string, version?: string) {\n  const { data } = await openmrsFetch(\n    BASE_WS_API_URL + `cohortm/cohort/${cohortUuid}${version ? `?v=${version}` : ``}`,\n  );\n  data.cohortMembers = data.cohortMembers.filter(member => !member.voided);\n  return data;\n}\n\nexport async function getReportingCohort(cohortUuid: string, queryParams?: string[]) {\n  const params = queryParams ? queryParams.join('&') : '';\n  const url = params ? `reportingrest/cohort/${cohortUuid}?${params}` : `reportingrest/cohort/${cohortUuid}`;\n  const { data } = await openmrsFetch(BASE_WS_API_URL + url);\n  return data;\n}\n\nexport async function getReportingCohortMembers(cohortUuid: string, queryParams?: string[]) {\n  const params = queryParams ? queryParams.join('&') : '';\n  const url = params ? `reportingrest/cohort/${cohortUuid}?${params}` : `reportingrest/cohort/${cohortUuid}`;\n  const { data } = await openmrsFetch(BASE_WS_API_URL + url);\n  return Promise.all(\n    data.members.map(member => {\n      return openmrsFetch(BASE_WS_API_URL + `patient/${member.uuid}?v=full`);\n    }),\n  );\n}\n\nexport async function getCohorts(cohortTypeUuid?: string) {\n  const {\n    data: { results, error },\n  } = await openmrsFetch(\n    BASE_WS_API_URL +\n      `cohortm/cohort?v=custom:(uuid,name,voided)${cohortTypeUuid ? `&cohortType=${cohortTypeUuid}` : ''}`,\n  );\n  if (error) {\n    throw error;\n  }\n  return results.filter(cohort => !cohort.voided);\n}\n\nexport function addPatientToCohort(patientUuid: string, cohortUuid: string) {\n  return openmrsFetch(`${BASE_WS_API_URL}cohortm/cohortmember`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: {\n      patient: patientUuid,\n      cohort: cohortUuid,\n      startDate: new Date(),\n    },\n  });\n}\n\nexport function evictCohortMembership(membershipUuid: string) {\n  return openmrsFetch(`${BASE_WS_API_URL}cohortm/cohortmember/${membershipUuid}`, { method: 'DELETE' });\n}\n\nexport async function getPatientListsForPatient(patientUuid: string) {\n  const {\n    data: { results, error },\n  } = await openmrsFetch(`${BASE_WS_API_URL}cohortm/cohortmember?patient=${patientUuid}&v=full`);\n  if (error) {\n    throw error;\n  }\n  return results.filter(membership => !membership.voided);\n}\n\nexport function fetchPatientsFinalHIVStatus(patientUUID: string) {\n  return openmrsFetch(\n    `/ws/fhir2/R4/Observation?code=${finalHIVCodeConcept}&value-concept=${finalPositiveHIVValueConcept}&patient=${patientUUID}&_sort=-date&_count=1`,\n  ).then(({ data }) => {\n    if (data.entry?.length) {\n      return data.entry[0].resource.valueCodeableConcept.coding[0].display;\n    }\n    return '';\n  });\n}\n\nexport function fetchPatientObservationFromEncounter(\n  patientUUID: string,\n  encounterUUID: string,\n  observationCode: string,\n) {\n  return openmrsFetch(\n    `/ws/fhir2/R4/Observation?patient=${patientUUID}&encounter=${encounterUUID}&code=${observationCode}&_sort=-date&_count=1`,\n  );\n}\n\nexport function fetchPatientComputedConcept_HIV_Status(patientUUID: string) {\n  return openmrsFetch(\n    `/ws/fhir2/R4/Observation?code=${computedHIV_StatusConcept}&value-concept=${computedHIV_StatusConcept}&patient=${patientUUID}&_sort=-date&_count=1`,\n  ).then(({ data }) => {\n    if (data.entry?.length) {\n      return data.entry[0].resource.valueCodeableConcept.coding[0].display;\n    }\n    return '';\n  });\n}\n\n// TODO: the WS/REST Encounter resource doesn't support sorting, figure out a better approach ie. FHIR or Reporting\nexport function fetchPatientLastEncounter(patientUuid: string, encounterType) {\n  const query = `encounterType=${encounterType}&patient=${patientUuid}`;\n  return openmrsFetch(`/ws/rest/v1/encounter?${query}&v=${encounterRepresentation}`).then(({ data }) => {\n    if (data.results.length) {\n      return data.results[data.results.length - 1];\n    }\n\n    return null;\n  });\n}\n\nexport function fetchPatientCovidOutcome() {\n  return openmrsFetch(`/ws/rest/v1/reportingrest/cohort/${covidOutcomesCohortUUID}`).then(({ data }) => {\n    if (data.members?.length) {\n      let patientRefs = data.members.map(member => {\n        return member.uuid;\n      });\n      patientRefs = new Set([...patientRefs]);\n      patientRefs = Array.from(patientRefs);\n      return Promise.all(\n        patientRefs.map(ref => {\n          return openmrsFetch(BASE_FHIR_API_URL + '/Person/' + ref);\n        }),\n      );\n    }\n    return [];\n  });\n}\n\nexport function fetchConceptNameByUuid(conceptUuid: string) {\n  return openmrsFetch(`/ws/rest/v1/concept/${conceptUuid}/name?limit=1`).then(({ data }) => {\n    if (data.results.length) {\n      const concept = data.results[data.results.length - 1];\n      return concept.display;\n    }\n  });\n}\n","import { showToast, usePatient } from '@openmrs/esm-framework';\nimport { ListItem, Modal, RadioButton, RadioButtonGroup, SkeletonText, UnorderedList } from 'carbon-components-react';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { addPatientToCohort, evictCohortMembership, getCohorts, getPatientListsForPatient } from '../../../api/api';\n\nconst AddPatientToListOverflowMenuItem: React.FC<{\n  patientUuid: string;\n  displayText?: string;\n  excludeCohorts?: Array<string>;\n}> = ({ patientUuid, displayText, excludeCohorts }) => {\n  const { patient } = usePatient(patientUuid);\n  const [isOpen, setIsOpen] = useState(false);\n  const patientDisplay = useMemo(() => {\n    return patient ? `${patient.name[0].given.join(' ')} ${patient.name[0].family}` : 'Patient';\n  }, [patient]);\n\n  return (\n    <>\n      {isOpen && (\n        <AddPatientToListModal\n          isOpen={isOpen}\n          close={() => setIsOpen(false)}\n          patientUuid={patientUuid}\n          title={`Add ${patientDisplay} to list`}\n          excludeCohorts={excludeCohorts}\n        />\n      )}\n      <li className=\"bx--overflow-menu-options__option\">\n        <button\n          className=\"bx--overflow-menu-options__btn\"\n          role=\"menuitem\"\n          title=\"Add to list\"\n          onClick={() => setIsOpen(true)}\n          style={{\n            maxWidth: '100vw',\n          }}>\n          <span className=\"bx--overflow-menu-options__option-content\">{displayText || 'Add to list'}</span>\n        </button>\n      </li>\n    </>\n  );\n};\n\nexport const AddPatientToListModal: React.FC<{\n  isOpen: boolean;\n  close: () => void;\n  patientUuid: string;\n  title?: string;\n  cohortType?: string;\n  excludeCohorts?: Array<string>;\n}> = ({ isOpen, close, patientUuid, cohortType, title, excludeCohorts }) => {\n  const [cohorts, setCohorts] = useState<Array<{ uuid: string; name: string }>>([]);\n  const [alreadySubscribedCohorts, setAlreadySubscribedCohorts] = useState([]);\n  const [currentMemberships, setCurrentMemberships] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedList, setSelectedList] = useState(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  useEffect(() => {\n    Promise.all([getCohorts(cohortType), getPatientListsForPatient(patientUuid)]).then(\n      ([allCohortsRes, currentCohortMemberships]) => {\n        // filter out cohorts in which this patient is already a member\n        let filteredCohorts = allCohortsRes.filter(\n          cohort => !currentCohortMemberships.some(membership => cohort.uuid == membership.cohort.uuid),\n        );\n        if (excludeCohorts && excludeCohorts.length) {\n          filteredCohorts = filteredCohorts.filter(cohort => !excludeCohorts.includes(cohort.name));\n        }\n        setCohorts(filteredCohorts);\n        setCurrentMemberships(currentCohortMemberships);\n        setAlreadySubscribedCohorts(currentCohortMemberships.map(membership => membership.cohort));\n        setIsLoading(false);\n      },\n    );\n  }, [cohortType]);\n\n  const availableLists = useMemo(() => {\n    const controls = cohorts.map((cohort, index) => (\n      <RadioButton labelText={cohort.name} value={cohort.uuid} id={cohort.uuid} key={index} />\n    ));\n    controls.push(<RadioButton labelText=\"None\" value=\"none\" id=\"none\" />);\n    return controls;\n  }, [cohorts]);\n\n  const loader = useMemo(() => {\n    return (\n      <>\n        <SkeletonText width=\"60%\" />\n        <SkeletonText width=\"60%\" />\n      </>\n    );\n  }, []);\n\n  const alreadySubscribedLists = useMemo(() => {\n    if (alreadySubscribedCohorts.length) {\n      return (\n        <UnorderedList style={{ marginLeft: '1rem', marginBottom: '1rem', color: '#c6c6c6' }}>\n          {alreadySubscribedCohorts.map((cohort, index) => (\n            <ListItem key={index}>{cohort.name}</ListItem>\n          ))}\n        </UnorderedList>\n      );\n    }\n    return (\n      <div style={{ marginBottom: '1rem' }}>\n        <span style={{ fontSize: '.875rem', color: '#c6c6c6' }}>-- None --</span>\n      </div>\n    );\n  }, [alreadySubscribedCohorts]);\n\n  const handleSubmit = useCallback(() => {\n    setIsSubmitting(true);\n    if (selectedList == 'none') {\n      // evict all the patient's memberships\n      // according to our usecases, there is a high chance that the current memberships will always be one\n      // but we can't be sure\n      Promise.all(currentMemberships.map(membership => evictCohortMembership(membership.uuid)))\n        .then(results => {\n          showToast({\n            kind: 'success',\n            critical: true,\n            description: `Patient was successfully removed from all lists`,\n          });\n          close();\n        })\n        .catch(error => {\n          setIsSubmitting(false);\n        });\n    } else {\n      addPatientToCohort(patientUuid, selectedList).then(response => {\n        if (response.ok) {\n          showToast({\n            kind: 'success',\n            critical: true,\n            description: `Patient was successfully added to ${response.data.cohort.display}`,\n          });\n          close();\n        } else {\n          setIsSubmitting(false);\n        }\n      });\n    }\n  }, [selectedList, patientUuid, close, currentMemberships]);\n  return (\n    <>\n      <Modal\n        style={{ zIndex: 99999 }}\n        open={isOpen}\n        modalHeading={title || 'Add Patient to list'}\n        modalLabel=\"\"\n        onRequestClose={close}\n        passiveModal={false}\n        primaryButtonText=\"Confirm\"\n        secondaryButtonText=\"Cancel\"\n        onRequestSubmit={handleSubmit}\n        primaryButtonDisabled={\n          isLoading ||\n          selectedList == null ||\n          isSubmitting ||\n          (selectedList == 'none' && currentMemberships.length == 0)\n        }>\n        <div style={{ paddingLeft: '1rem', marginBottom: '2rem' }}>\n          <p style={{ marginBottom: '1rem' }}>Currently added to the list(s) below</p>\n          {isLoading ? loader : alreadySubscribedLists}\n          <p style={{ marginBottom: '1rem' }}>Select the list where to add the client</p>\n\n          {isLoading ? (\n            loader\n          ) : (\n            <RadioButtonGroup\n              legendText=\"\"\n              name=\"patient-lists\"\n              orientation=\"vertical\"\n              onChange={selected => setSelectedList(selected.toString())}>\n              {availableLists}\n            </RadioButtonGroup>\n          )}\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default AddPatientToListOverflowMenuItem;\n","export const careSetting = '6f0c9a92-6f24-11e3-af88-005056821db0';\n\nexport const daysDurationUnit = {\n  uuid: '1072AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA',\n  display: 'Days',\n};\n\nexport const basePath = '${openmrsSpaBase}/patient/';\nexport const encounterRepresentation =\n  'custom:(uuid,encounterDatetime,location:(uuid,name),' +\n  'patient:(uuid,display),encounterProviders:(uuid,provider:(uuid,name)),' +\n  'obs:(uuid,obsDatetime,voided,groupMembers,concept:(uuid,name:(uuid,name)),value:(uuid,name:(uuid,name),' +\n  'names:(uuid,conceptNameType,name))))';\n\n// Final HIV Test Result Concepts\nexport const finalHIVCodeConcept = 'e16b0068-b6a2-46b7-aba9-e3be00a7b4ab';\nexport const finalPositiveHIVValueConcept = '6378487b-584d-4422-a6a6-56c8830873ff';\nexport const computedHIV_StatusConcept = 'a5261998-c635-4e27-870c-e837faf6cf9a';\n\n// Linked to Care Concepts\nexport const linkedToCareCodeConcept = 'e8e8fe71-adbb-48e7-b531-589985094d30';\nexport const linkedToCareYesValueConcept = '1065AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\n\n// Cohorts\nexport const preTestCounsellingCohort = 'e4d801f0-e2fd-11eb-8212-7d7156e00a1f';\nexport const waitingForHIVTestCohort = 'cdee0abe-e471-11eb-8212-7d7156e00a1f';\nexport const postTestCounsellingCohort = '01af2130-e472-11eb-8212-7d7156e00a1f';\nexport const clientsEnrolledToCare = '51bec6f7-df43-426e-a83e-c1ae5501372f';\nexport const todayzAppointmentsCT = 'ccbcf6d8-77b7-44a5-bb43-d352478ea4e9';\n\n// COVID Cohorts\nexport const clientsAssessedForCovid = 'ec373b01-4ba3-488e-a322-9dd6a50cfdf7';\nexport const covidClientsWithPendingLabResults = '166aa2b1-ce55-4d16-9643-ca9d2e2694ea';\nexport const clientsWithoutCovidOutcomes = 'db6c4a18-28c6-423c-9da0-58d19e364a7f';\nexport const allCovidAssessments = 'ec373b01-4ba3-488e-a322-9dd6a50cfdf7';\nexport const covidVaccinatedClients = 'b5d52da9-10c2-43af-ae23-552acc5e445b';\nexport const covid19PositiveClients = '1523b1e5-b6d0-44fb-bd9e-c91bfefb4d1c';\n\n// COVID Concepts\nexport const dateSpecimenCollected = '159951AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const covidTestType = '069f6dfe-88c1-4a45-a894-0d99549c8718';\nexport const covidOutcome = 'a845f3e6-4432-4de4-9fff-37fa270b1a06';\nexport const rapidAntigenResultDate = 'af159c77-bc5d-46dd-90d9-bcbffb22267f';\nexport const pcrTestResultDate = '4a77ab44-0323-490e-96be-e168c0e5c9de';\nexport const finalCovid19Result = '5da5c21b-969f-41bd-9091-e40d4c707544';\nexport const covidOutcomesCohortUUID = 'afb0d950-48fd-44d7-ae2c-79615cd125f0';\n\n// Service Enrollment Concepts\nexport const careAndTreatmentEncounterType = '7e54cd64-f9c3-11eb-8e6a-57478ce139b0';\nexport const dateOfServiceEnrollmentConcept = '160555AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const patientTypeEnrollmentConcept = '83e40f2c-c316-43e6-a12e-20a338100281';\nexport const studyPopulationTypeConcept = 'd3d4ae96-8c8a-43db-a9dc-dac951f5dcb3';\nexport const dateOfHIVDiagnosisConcept = '160554AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const entryPointConcept = '160540AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const re_enrolmentDateConcept = '20efadf9-86d3-4498-b3ab-7da4dad9c429';\n\n// Clinical visit\nexport const clinicalVisitEncounterType = 'cb0a65a7-0587-477e-89b9-cf2fd144f1d4';\nexport const dateOfEncounterConcept = '163137AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const visitTypeConcept = '8a9809e9-8a0b-4e0e-b1f6-80b0cbbe361b';\nexport const regimenConcept = 'dfbe256e-30ba-4033-837a-2e8477f2e7cd';\nexport const expressCareProgramStatusConcept = '159832AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'; // differentiated Care Services\nexport const returnVisitDateConcept = '5096AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'; // Next Appointment Date\nexport const tbScreeningOutcome = 'c0661c0f-348b-4941-812b-c531a0a67f2e';\n\n// Encounter types\nexport const htsRetrospectiveEncounterType = '79c1f50f-f77d-42e2-ad2a-d29304dde2fe';\nexport const covidCaseAssessmentEncType = '253a43d3-c99e-415c-8b78-ee7d4d3c1d54';\nexport const covidVaccinationEncType = '5b37ce7a-c55e-4226-bdc8-5af04025a6de';\nexport const covidLabTestEncType = 'a77d3e7f-5c8f-4074-a207-77a70e197b0c';\n\n// HTS Retrospective\nexport const htsRetrospectiveType = '79c1f50f-f77d-42e2-ad2a-d29304dde2fe';\n\n// Covid Restrospective\n//   const covidEncounterUUID = '902839fa-f58c-44a1-95a4-dba62d7263f8'; // Covid Case Report\nexport const covid_Assessment_EncounterUUID = '253a43d3-c99e-415c-8b78-ee7d4d3c1d54';\nexport const covidReasonsForTestingConcep_UUID = 'ae46f4b1-c15d-4bba-ab41-b9157b82b0ce'; // Reasons for testing\nexport const covidTestTypeUUID = '069f6dfe-88c1-4a45-a894-0d99549c8718'; // SARS2-Cov2 Test Type\nexport const covidTestResultUUID = '3f4ee14b-b4ab-4597-9fe9-406883b63d76'; // Diagnostic PCR Result\nexport const covidOutcomeUUID = 'a845f3e6-4432-4de4-9fff-37fa270b1a06';\n\nexport const covidSpecimenCollectiDate_UUID = '159951AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'; // Date specimen collected\nexport const covidPatientStatusUUID = 'de3bc9b7-05b5-41b6-a38d-8d2eec646c4f'; // Client Health Status\n\nexport const covidTreatementOutConcept_UUID = 'a845f3e6-4432-4de4-9fff-37fa270b1a06';\nexport const covidSARS_TestResultConcept_UUID = '89feed9c-1dd9-477a-ab1c-86f5f75f6762';\n\n// Covid Assessment\nexport const covidSARS_TestResult_Name_UUID = '0961651c-d52e-41dd-957a-94b9ce08e4eb';\nexport const covidReasonsForTestingUUID = '5793ad0f-d726-4918-a1b5-f25f4fb2b857';\nexport const covidTreatmenOutConceptName_UUID = '28d43e48-3673-4671-a6b1-3ed45fdfcba6';\nexport const covidSpecimentTestDate_UUID = '499df97a-2a34-4562-946a-3c4d5608b67f';\nexport const covidTypeofTestConcept_UUID = '069f6dfe-88c1-4a45-a894-0d99549c8718';\nexport const covidSymptosConcept_UUID = '';\nexport const covidPresentSymptonsConcept_UUID = '244b0dc0-eb1b-46ae-b62a-f580345d4f46';\nexport const covidComorbidityPresentConcept_UUID = '166020AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const covidUnderComorbidityConcept_UUID = '0651869c-6e90-48d6-b25c-406270c76bee';\nexport const covidPresentSymptonsName_UUID = '12568215-ae1c-42ec-b7e8-8818d2761f46';\nexport const covidPatientStatusConcept_UUID = 'de3bc9b7-05b5-41b6-a38d-8d2eec646c4f';\nexport const covidEncounterDateTime_UUID = '160753AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const covidSymptomsPresentation = 'de3bc9b7-05b5-41b6-a38d-8d2eec646c4f';\n\n//Covid Lab Order\nexport const covidLabOrderDate_UUID = '162078AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const covidLabOrderEncounterType_UUID = 'a77d3e7f-5c8f-4074-a207-77a70e197b0c';\nexport const pcrTestResult = '3f4ee14b-b4ab-4597-9fe9-406883b63d76';\nexport const rapidTestResult = 'cbcbb029-f11f-4437-9d53-1d0f0a170433';\n\n//Covid Lab Results\nexport const covidSpecimenCollectionDate_UUID = '159951AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const covidLabResultsEncounterType_UUID = '253a43d3-c99e-415c-8b78-ee7d4d3c1d54';\nexport const covidSpecimentTypeConcept_UUID = 'ae127f82-1861-4165-ac81-8554e5a3aac4';\nexport const covidTestResultConcept_UUID = '161934AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const covidRapidTestResultDate_UUID = 'af159c77-bc5d-46dd-90d9-bcbffb22267f';\nexport const covidDiagnosticPcrResult_UUID = '3f4ee14b-b4ab-4597-9fe9-406883b63d76';\nexport const covidDiagnorticPcrResultDate_UUID = '4a77ab44-0323-490e-96be-e168c0e5c9de';\nexport const covidTestStatusConcept_UUID = '6681366c-2174-489a-b951-13a1404935bf';\nexport const covidTestResultDate_UUID = '163724AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\n\n// Covid Vaccination\nexport const covidVaccinationEncounterUUID = '5b37ce7a-c55e-4226-bdc8-5af04025a6de';\nexport const covidVaccinationStatusUUID = '40cb816f-797b-4cb4-a9fb-2727b2373623'; // Has the patient been vaccinated\nexport const covidVaccinationStatusConcept_UUID = 'de3bc9b7-05b5-41b6-a38d-8d2eec646c4f'; // What is the patient status with regard to COVID-19?\nexport const covidVaccination1stDoseDateConcept_UUID = 'c85eb064-5ef7-4ac6-8e56-4749bd58df44'; // What is COVID-19 vaccination date (1st dose)?\nexport const covidVaccination2ndDoseDateConcept_UUID = '42ee7f5c-fdd3-48c1-8d3a-5c6e248e6cb9'; // What is COVID-19 vaccination date (2nd dose)?\nexport const covidVaccinationTypeConcept_UUID = 'a31d1148-bbcc-4ad6-a015-8359d66bcfdc'; // What COVID-19 vaccine was administered?\nexport const covidVaccinationAdministeredConcept_UUID = '1410AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'; // Which date COVID-19 vaccine was administered?\nexport const covidVaccinationNextVacinationDateConcept_UUID = '5096AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const covidVaccinationDoseAdmininstered_UUID = '97bf47f9-0ba7-4d00-99bd-8939cd586072';\nexport const covidVaccineAdministeredConcept_UUID = 'e41fbe17-4aee-4a44-950b-6676d6e0ede2';\nexport const covidVaccineConcept_UUID = '0cc868bd-e9dd-4b59-b278-f923afe22d82';\n\n// HTS HIV\nexport const hivTestResultConceptUUID = 'e16b0068-b6a2-46b7-aba9-e3be00a7b4ab';\nexport const hivTestDateConceptUUID = '140414BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB';\nexport const htsStrategyUUID = 'f0d85da0-c235-4540-a0d1-63640594f98b';\n\n//HIV Art Therapy\nexport const art_Therapy_EncounterUUID = '74bf4fe6-8fdb-4228-be39-680a93a9cf6d';\nexport const artTherapyDateTime_UUID = '159599AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const regimenLine_UUID = '164515AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const refusedTreatment_UUID = 'ac4f3fd1-8a2a-4c5e-a335-3f675b82dd78';\nexport const therapyPlanConcept = '7557d77c-172b-4673-9335-67a38657dd01';\nexport const artStopDateUUID = '162572AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const switchDateUUID = '164516AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const substitutionDateUUID = '164431AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const switchReasonUUID = '160568AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const substituteReasonUUID = '160562AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const stopReasonUUID = '163513AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\n\n// HIV Lab Results\nexport const hivLabResultsEncounterType_UUID = ' 15272be5-ae9c-4278-a303-4b8907eae73b';\nexport const hivLabTestResultConcept_UUID = '';\nexport const hivReasonViralLoadRequest_UUID = '86cc0cfe-bace-4969-94b6-d139f4971d13';\nexport const hivReasonCD4Request_UUID = '759e89a6-3260-4aee-9922-86a6301bcff3';\nexport const hivDateViralLoadResult_UUID = '163281AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const hivDateViralLoadInterpretation_UUID = '686dc1b2-68b5-4024-b311-bd2f5e3ce394';\nexport const hivDateCD4Result_UUID = '159376AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const hivCD4Result_UUID = '657AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const hivCD4Count_UUID = '5497AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\n\n//HIV Death\nexport const hivDeathDate_UUID = '1543AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const causeOFDeath_UUID = 'ef973f1f-557f-4620-acf5-9c4c18bf1eda';\nexport const deathSpecific_UUID = 'e329cdf4-4eeb-4821-85ec-80ec4b503de0';\nexport const deathFormEncounterType_UUID = '111c2104-991d-4b58-a30e-ce84bb275534';\n\n//Transfer Out\nexport const transferOutEncounterType_UUID = '3044916a-7e5f-478b-9091-803233f27f91';\nexport const visitDate_UUID = '163137AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const receivingFacility_UUID = '162724AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const TransferOutDate_UUID = '160649AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const verified_UUID = '797e0073-1f3f-46b1-8b1a-8cdad134d2b3';\n","var map = {\n\t\"./af\": 89127,\n\t\"./af.js\": 89127,\n\t\"./ar\": 67006,\n\t\"./ar-dz\": 47730,\n\t\"./ar-dz.js\": 47730,\n\t\"./ar-kw\": 63215,\n\t\"./ar-kw.js\": 63215,\n\t\"./ar-ly\": 96968,\n\t\"./ar-ly.js\": 96968,\n\t\"./ar-ma\": 52572,\n\t\"./ar-ma.js\": 52572,\n\t\"./ar-sa\": 68319,\n\t\"./ar-sa.js\": 68319,\n\t\"./ar-tn\": 75629,\n\t\"./ar-tn.js\": 75629,\n\t\"./ar.js\": 67006,\n\t\"./az\": 76722,\n\t\"./az.js\": 76722,\n\t\"./be\": 15958,\n\t\"./be.js\": 15958,\n\t\"./bg\": 74921,\n\t\"./bg.js\": 74921,\n\t\"./bm\": 17293,\n\t\"./bm.js\": 17293,\n\t\"./bn\": 52288,\n\t\"./bn-bd\": 9907,\n\t\"./bn-bd.js\": 9907,\n\t\"./bn.js\": 52288,\n\t\"./bo\": 82127,\n\t\"./bo.js\": 82127,\n\t\"./br\": 43922,\n\t\"./br.js\": 43922,\n\t\"./bs\": 78932,\n\t\"./bs.js\": 78932,\n\t\"./ca\": 13246,\n\t\"./ca.js\": 13246,\n\t\"./cs\": 18208,\n\t\"./cs.js\": 18208,\n\t\"./cv\": 26492,\n\t\"./cv.js\": 26492,\n\t\"./cy\": 51818,\n\t\"./cy.js\": 51818,\n\t\"./da\": 12285,\n\t\"./da.js\": 12285,\n\t\"./de\": 6454,\n\t\"./de-at\": 3082,\n\t\"./de-at.js\": 3082,\n\t\"./de-ch\": 9076,\n\t\"./de-ch.js\": 9076,\n\t\"./de.js\": 6454,\n\t\"./dv\": 9016,\n\t\"./dv.js\": 9016,\n\t\"./el\": 83093,\n\t\"./el.js\": 83093,\n\t\"./en-au\": 85535,\n\t\"./en-au.js\": 85535,\n\t\"./en-ca\": 12610,\n\t\"./en-ca.js\": 12610,\n\t\"./en-gb\": 78386,\n\t\"./en-gb.js\": 78386,\n\t\"./en-ie\": 35272,\n\t\"./en-ie.js\": 35272,\n\t\"./en-il\": 73563,\n\t\"./en-il.js\": 73563,\n\t\"./en-in\": 68604,\n\t\"./en-in.js\": 68604,\n\t\"./en-nz\": 82140,\n\t\"./en-nz.js\": 82140,\n\t\"./en-sg\": 28217,\n\t\"./en-sg.js\": 28217,\n\t\"./eo\": 59823,\n\t\"./eo.js\": 59823,\n\t\"./es\": 30312,\n\t\"./es-do\": 69546,\n\t\"./es-do.js\": 69546,\n\t\"./es-mx\": 69089,\n\t\"./es-mx.js\": 69089,\n\t\"./es-us\": 37781,\n\t\"./es-us.js\": 37781,\n\t\"./es.js\": 30312,\n\t\"./et\": 58563,\n\t\"./et.js\": 58563,\n\t\"./eu\": 64003,\n\t\"./eu.js\": 64003,\n\t\"./fa\": 40463,\n\t\"./fa.js\": 40463,\n\t\"./fi\": 68941,\n\t\"./fi.js\": 68941,\n\t\"./fil\": 51742,\n\t\"./fil.js\": 51742,\n\t\"./fo\": 40006,\n\t\"./fo.js\": 40006,\n\t\"./fr\": 32346,\n\t\"./fr-ca\": 60761,\n\t\"./fr-ca.js\": 60761,\n\t\"./fr-ch\": 10982,\n\t\"./fr-ch.js\": 10982,\n\t\"./fr.js\": 32346,\n\t\"./fy\": 24934,\n\t\"./fy.js\": 24934,\n\t\"./ga\": 22670,\n\t\"./ga.js\": 22670,\n\t\"./gd\": 41733,\n\t\"./gd.js\": 41733,\n\t\"./gl\": 72271,\n\t\"./gl.js\": 72271,\n\t\"./gom-deva\": 75537,\n\t\"./gom-deva.js\": 75537,\n\t\"./gom-latn\": 70763,\n\t\"./gom-latn.js\": 70763,\n\t\"./gu\": 84125,\n\t\"./gu.js\": 84125,\n\t\"./he\": 81651,\n\t\"./he.js\": 81651,\n\t\"./hi\": 18602,\n\t\"./hi.js\": 18602,\n\t\"./hr\": 8641,\n\t\"./hr.js\": 8641,\n\t\"./hu\": 3079,\n\t\"./hu.js\": 3079,\n\t\"./hy-am\": 60443,\n\t\"./hy-am.js\": 60443,\n\t\"./id\": 8963,\n\t\"./id.js\": 8963,\n\t\"./is\": 11343,\n\t\"./is.js\": 11343,\n\t\"./it\": 28072,\n\t\"./it-ch\": 33115,\n\t\"./it-ch.js\": 33115,\n\t\"./it.js\": 28072,\n\t\"./ja\": 58183,\n\t\"./ja.js\": 58183,\n\t\"./jv\": 71064,\n\t\"./jv.js\": 71064,\n\t\"./ka\": 81999,\n\t\"./ka.js\": 81999,\n\t\"./kk\": 29360,\n\t\"./kk.js\": 29360,\n\t\"./km\": 43667,\n\t\"./km.js\": 43667,\n\t\"./kn\": 41882,\n\t\"./kn.js\": 41882,\n\t\"./ko\": 42401,\n\t\"./ko.js\": 42401,\n\t\"./ku\": 42583,\n\t\"./ku.js\": 42583,\n\t\"./ky\": 66751,\n\t\"./ky.js\": 66751,\n\t\"./lb\": 81193,\n\t\"./lb.js\": 81193,\n\t\"./lo\": 80769,\n\t\"./lo.js\": 80769,\n\t\"./lt\": 44409,\n\t\"./lt.js\": 44409,\n\t\"./lv\": 9262,\n\t\"./lv.js\": 9262,\n\t\"./me\": 97514,\n\t\"./me.js\": 97514,\n\t\"./mi\": 83434,\n\t\"./mi.js\": 83434,\n\t\"./mk\": 70610,\n\t\"./mk.js\": 70610,\n\t\"./ml\": 71654,\n\t\"./ml.js\": 71654,\n\t\"./mn\": 86730,\n\t\"./mn.js\": 86730,\n\t\"./mr\": 47196,\n\t\"./mr.js\": 47196,\n\t\"./ms\": 20487,\n\t\"./ms-my\": 14750,\n\t\"./ms-my.js\": 14750,\n\t\"./ms.js\": 20487,\n\t\"./mt\": 58856,\n\t\"./mt.js\": 58856,\n\t\"./my\": 21240,\n\t\"./my.js\": 21240,\n\t\"./nb\": 12121,\n\t\"./nb.js\": 12121,\n\t\"./ne\": 89802,\n\t\"./ne.js\": 89802,\n\t\"./nl\": 80737,\n\t\"./nl-be\": 93497,\n\t\"./nl-be.js\": 93497,\n\t\"./nl.js\": 80737,\n\t\"./nn\": 18153,\n\t\"./nn.js\": 18153,\n\t\"./oc-lnc\": 55173,\n\t\"./oc-lnc.js\": 55173,\n\t\"./pa-in\": 10499,\n\t\"./pa-in.js\": 10499,\n\t\"./pl\": 53629,\n\t\"./pl.js\": 53629,\n\t\"./pt\": 95702,\n\t\"./pt-br\": 23312,\n\t\"./pt-br.js\": 23312,\n\t\"./pt.js\": 95702,\n\t\"./ro\": 10719,\n\t\"./ro.js\": 10719,\n\t\"./ru\": 33778,\n\t\"./ru.js\": 33778,\n\t\"./sd\": 25545,\n\t\"./sd.js\": 25545,\n\t\"./se\": 35811,\n\t\"./se.js\": 35811,\n\t\"./si\": 12015,\n\t\"./si.js\": 12015,\n\t\"./sk\": 21587,\n\t\"./sk.js\": 21587,\n\t\"./sl\": 20147,\n\t\"./sl.js\": 20147,\n\t\"./sq\": 36821,\n\t\"./sq.js\": 36821,\n\t\"./sr\": 63019,\n\t\"./sr-cyrl\": 37792,\n\t\"./sr-cyrl.js\": 37792,\n\t\"./sr.js\": 63019,\n\t\"./ss\": 15078,\n\t\"./ss.js\": 15078,\n\t\"./sv\": 13593,\n\t\"./sv.js\": 13593,\n\t\"./sw\": 57655,\n\t\"./sw.js\": 57655,\n\t\"./ta\": 51553,\n\t\"./ta.js\": 51553,\n\t\"./te\": 65967,\n\t\"./te.js\": 65967,\n\t\"./tet\": 39236,\n\t\"./tet.js\": 39236,\n\t\"./tg\": 82091,\n\t\"./tg.js\": 82091,\n\t\"./th\": 44141,\n\t\"./th.js\": 44141,\n\t\"./tk\": 14204,\n\t\"./tk.js\": 14204,\n\t\"./tl-ph\": 98941,\n\t\"./tl-ph.js\": 98941,\n\t\"./tlh\": 99565,\n\t\"./tlh.js\": 99565,\n\t\"./tr\": 6075,\n\t\"./tr.js\": 6075,\n\t\"./tzl\": 91637,\n\t\"./tzl.js\": 91637,\n\t\"./tzm\": 48231,\n\t\"./tzm-latn\": 84943,\n\t\"./tzm-latn.js\": 84943,\n\t\"./tzm.js\": 48231,\n\t\"./ug-cn\": 27822,\n\t\"./ug-cn.js\": 27822,\n\t\"./uk\": 17263,\n\t\"./uk.js\": 17263,\n\t\"./ur\": 71769,\n\t\"./ur.js\": 71769,\n\t\"./uz\": 29736,\n\t\"./uz-latn\": 24725,\n\t\"./uz-latn.js\": 24725,\n\t\"./uz.js\": 29736,\n\t\"./vi\": 9562,\n\t\"./vi.js\": 9562,\n\t\"./x-pseudo\": 7219,\n\t\"./x-pseudo.js\": 7219,\n\t\"./yo\": 76195,\n\t\"./yo.js\": 76195,\n\t\"./zh-cn\": 37289,\n\t\"./zh-cn.js\": 37289,\n\t\"./zh-hk\": 51589,\n\t\"./zh-hk.js\": 51589,\n\t\"./zh-mo\": 49708,\n\t\"./zh-mo.js\": 49708,\n\t\"./zh-tw\": 23384,\n\t\"./zh-tw.js\": 23384\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"],"names":["BASE_WS_API_URL","fetchLastVisit","uuid","openmrsFetch","fetchPatientList","offSet","pageSize","fetchTodayClients","date","moment","format","then","data","entry","length","cleanDuplicatePatientReferences","fetchPatientsFromObservationCodeConcept","codeConcept","valueConcept","cutOffDays","endDate","startDate","subtract","patientRefs","map","enc","resource","subject","reference","Set","Array","from","Promise","all","ref","async","getCohort","cohortUuid","version","cohortMembers","filter","member","voided","getReportingCohort","queryParams","params","join","url","getReportingCohortMembers","members","getCohorts","cohortTypeUuid","results","error","cohort","addPatientToCohort","patientUuid","method","headers","body","patient","Date","evictCohortMembership","membershipUuid","getPatientListsForPatient","membership","fetchPatientsFinalHIVStatus","patientUUID","finalHIVCodeConcept","finalPositiveHIVValueConcept","valueCodeableConcept","coding","display","fetchPatientComputedConcept_HIV_Status","computedHIV_StatusConcept","fetchPatientLastEncounter","encounterType","query","encounterRepresentation","fetchPatientCovidOutcome","covidOutcomesCohortUUID","BASE_FHIR_API_URL","fetchConceptNameByUuid","conceptUuid","AddPatientToListModal","isOpen","close","cohortType","title","excludeCohorts","cohorts","setCohorts","useState","alreadySubscribedCohorts","setAlreadySubscribedCohorts","currentMemberships","setCurrentMemberships","isLoading","setIsLoading","selectedList","setSelectedList","isSubmitting","setIsSubmitting","useEffect","allCohortsRes","currentCohortMemberships","filteredCohorts","some","includes","name","availableLists","useMemo","controls","index","labelText","value","id","key","push","loader","width","alreadySubscribedLists","style","marginLeft","marginBottom","color","fontSize","handleSubmit","useCallback","showToast","kind","critical","description","catch","response","ok","zIndex","open","modalHeading","modalLabel","onRequestClose","passiveModal","primaryButtonText","secondaryButtonText","onRequestSubmit","primaryButtonDisabled","paddingLeft","legendText","orientation","onChange","selected","toString","displayText","usePatient","setIsOpen","patientDisplay","given","family","className","role","onClick","maxWidth","basePath","linkedToCareCodeConcept","linkedToCareYesValueConcept","preTestCounsellingCohort","waitingForHIVTestCohort","postTestCounsellingCohort","clientsEnrolledToCare","todayzAppointmentsCT","clientsAssessedForCovid","covidClientsWithPendingLabResults","covidVaccinatedClients","covid19PositiveClients","dateSpecimenCollected","covidTestType","covidOutcome","careAndTreatmentEncounterType","dateOfServiceEnrollmentConcept","patientTypeEnrollmentConcept","studyPopulationTypeConcept","dateOfHIVDiagnosisConcept","entryPointConcept","re_enrolmentDateConcept","clinicalVisitEncounterType","dateOfEncounterConcept","visitTypeConcept","regimenConcept","returnVisitDateConcept","tbScreeningOutcome","htsRetrospectiveEncounterType","covidCaseAssessmentEncType","covidVaccinationEncType","covidLabTestEncType","covid_Assessment_EncounterUUID","covidReasonsForTestingConcep_UUID","covidOutcomeUUID","covidTypeofTestConcept_UUID","covidPresentSymptonsConcept_UUID","covidEncounterDateTime_UUID","covidSymptomsPresentation","covidLabOrderDate_UUID","covidLabOrderEncounterType_UUID","pcrTestResult","rapidTestResult","covidTestResultConcept_UUID","covidTestStatusConcept_UUID","covidTestResultDate_UUID","covidVaccinationEncounterUUID","covidVaccinationAdministeredConcept_UUID","covidVaccinationDoseAdmininstered_UUID","covidVaccineAdministeredConcept_UUID","covidVaccineConcept_UUID","htsStrategyUUID","art_Therapy_EncounterUUID","artTherapyDateTime_UUID","regimenLine_UUID","therapyPlanConcept","artStopDateUUID","switchDateUUID","substitutionDateUUID","switchReasonUUID","substituteReasonUUID","stopReasonUUID","hivLabResultsEncounterType_UUID","hivCD4Result_UUID","hivCD4Count_UUID","hivDeathDate_UUID","causeOFDeath_UUID","deathSpecific_UUID","deathFormEncounterType_UUID","transferOutEncounterType_UUID","visitDate_UUID","receivingFacility_UUID","TransferOutDate_UUID","verified_UUID","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}