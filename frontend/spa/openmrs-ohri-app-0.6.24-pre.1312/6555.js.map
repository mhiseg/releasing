{"version":3,"file":"6555.js","mappings":"kQAeO,MAAMA,EAAgB,0BAChBC,EACX,2LAQIC,EAAiC,CACrC,CACEC,IAAK,gBACLC,OAAQ,qBACRC,SAAUC,IACDC,EAAAA,EAAAA,IAAoBD,EAAWE,EAAAA,IAA6B,GAErEC,KAAM,CACJC,eAAgBJ,IACdA,EAAUK,mBAAmBC,mBAInC,CACET,IAAK,oBACLC,OAAQ,qBACRC,SAAUC,IACDC,EAAAA,EAAAA,IAAoBD,EAAWO,EAAAA,KAG1C,CACEV,IAAK,cACLC,OAAQ,eACRC,SAAUC,IACDC,EAAAA,EAAAA,IAAoBD,EAAWQ,EAAAA,IAA2B,IAGrE,CACEX,IAAK,UACLC,OAAQ,UACRC,SAAUC,IACDC,EAAAA,EAAAA,IAAoBD,EAAWS,EAAAA,IAG1C,CACEZ,IAAK,UACLC,OAAQ,UACRC,SAAUC,GAAa,CACrB,CACEU,KAAM,CAAEC,KAAM,aAAcC,QAAS,SACrCC,cAAeb,EAAUc,KACzBC,OAAQ,IACRC,MAAO,kBACPC,KAAM,QAER,CACEP,KAAM,CAAEC,KAAM,mBAAoBC,QAAS,SAC3CC,cAAeb,EAAUc,KACzBC,OAAQ,IACRC,MAAO,YACPC,KAAM,QAER,CACEP,KAAM,CAAEC,KAAM,mBAAoBC,QAAS,SAC3CC,cAAeb,EAAUc,KACzBC,OAAQ,IACRC,MAAO,kBACPC,KAAM,QAER,CACEP,KAAM,CAAEC,KAAM,aAAcC,QAAS,SACrCC,cAAeb,EAAUc,KACzBC,OAAQ,IACRC,MAAO,YACPC,KAAM,QAER,CACEP,KAAM,CAAEC,KAAM,gBAAiBC,QAAS,SACxCC,cAAeb,EAAUc,KACzBC,OAAQ,IACRC,MAAO,mBACPC,KAAM,WA2Bd,EArB8D,EAAGC,YAAAA,MAC/D,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,kBACRC,EAAcF,EAAE,mBAAoB,oBACpCG,EAAcH,EAAE,mBAAoB,oBAC1C,OACE,kBAAC,KAAD,CACED,YAAaA,EACbL,cAAeU,EAAAA,GACfb,KAAM,CAAEE,QAAS,QAASD,KAAM,mBAAoBa,KAAM,4BAC1DC,MAAO,CACL,CAAEb,QAAS,QAASD,KAAM,mBAAoBe,gBAAiB,CAAC,+BAChE,CAAEd,QAAS,QAASD,KAAM,aAAce,gBAAiB,KAE3D9B,QAASA,EACT+B,YAAaL,EACbD,YAAaA,EACbO,aAAa","sources":["webpack://openmrs-ohri-app/./src/covid/pages/case-assessment.encounter-lists.tsx"],"sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  covid_Assessment_EncounterUUID,\n  covidReasonsForTestingConcep_UUID,\n  covidOutcomeUUID,\n  covidEncounterDateTime_UUID,\n  covidSymptomsPresentation,\n} from '../../constants';\n\nimport EncounterList, {\n  EncounterListColumn,\n  getObsFromEncounter,\n} from '../../components/encounter-list/encounter-list.component';\n\nexport const covidFormSlot = 'hts-encounter-form-slot';\nexport const covidEncounterRepresentation =\n  'custom:(uuid,encounterDatetime,location:(uuid,name),' +\n  'encounterProviders:(uuid,provider:(uuid,name)),' +\n  'obs:(uuid,obsDatetime,concept:(uuid,name:(uuid,name)),value:(uuid,name:(uuid,name))))';\n\ninterface CovidAssessmentWidgetProps {\n  patientUuid: string;\n}\n\nconst columns: EncounterListColumn[] = [\n  {\n    key: 'encounterDate',\n    header: 'Date of Assessment',\n    getValue: encounter => {\n      return getObsFromEncounter(encounter, covidEncounterDateTime_UUID, true);\n    },\n    link: {\n      handleNavigate: encounter => {\n        encounter.launchFormActions?.viewEncounter();\n      },\n    },\n  },\n  {\n    key: 'reasonsForTesting',\n    header: 'Reason for testing',\n    getValue: encounter => {\n      return getObsFromEncounter(encounter, covidReasonsForTestingConcep_UUID);\n    },\n  },\n  {\n    key: 'symptomatic',\n    header: 'Presentation',\n    getValue: encounter => {\n      return getObsFromEncounter(encounter, covidSymptomsPresentation, false);\n    },\n  },\n  {\n    key: 'outcome',\n    header: 'Outcome',\n    getValue: encounter => {\n      return getObsFromEncounter(encounter, covidOutcomeUUID);\n    },\n  },\n  {\n    key: 'actions',\n    header: 'Actions',\n    getValue: encounter => [\n      {\n        form: { name: 'covid_case', package: 'covid' },\n        encounterUuid: encounter.uuid,\n        intent: '*',\n        label: 'View Assessment',\n        mode: 'view',\n      },\n      {\n        form: { name: 'covid_assessment', package: 'covid' },\n        encounterUuid: encounter.uuid,\n        intent: '*',\n        label: 'View Case',\n        mode: 'view',\n      },\n      {\n        form: { name: 'covid_assessment', package: 'covid' },\n        encounterUuid: encounter.uuid,\n        intent: '*',\n        label: 'Edit Assessment',\n        mode: 'edit',\n      },\n      {\n        form: { name: 'covid_case', package: 'covid' },\n        encounterUuid: encounter.uuid,\n        intent: '*',\n        label: 'Edit Case',\n        mode: 'edit',\n      },\n      {\n        form: { name: 'covid_outcome', package: 'covid' },\n        encounterUuid: encounter.uuid,\n        intent: '*',\n        label: 'Add/Edit Outcome',\n        mode: 'edit',\n      },\n    ],\n  },\n];\n\nconst CovidAssessment: React.FC<CovidAssessmentWidgetProps> = ({ patientUuid }) => {\n  const { t } = useTranslation();\n  const headerTitle = t('covidAssessments', 'COVID Assessment');\n  const displayText = t('covidAssessments', 'COVID Assessment');\n  return (\n    <EncounterList\n      patientUuid={patientUuid}\n      encounterUuid={covid_Assessment_EncounterUUID}\n      form={{ package: 'covid', name: 'covid_assessment', view: 'covid_assessment_summary' }}\n      forms={[\n        { package: 'covid', name: 'covid_assessment', excludedIntents: ['COVID_LAB_ASSESSMENT_EMBED'] },\n        { package: 'covid', name: 'covid_case', excludedIntents: [] },\n      ]}\n      columns={columns}\n      description={displayText}\n      headerTitle={headerTitle}\n      dropdownText=\"Add\"\n    />\n  );\n};\n\nexport default CovidAssessment;\n"],"names":["covidFormSlot","covidEncounterRepresentation","columns","key","header","getValue","encounter","getObsFromEncounter","covidEncounterDateTime_UUID","link","handleNavigate","launchFormActions","viewEncounter","covidReasonsForTestingConcep_UUID","covidSymptomsPresentation","covidOutcomeUUID","form","name","package","encounterUuid","uuid","intent","label","mode","patientUuid","t","useTranslation","headerTitle","displayText","covid_Assessment_EncounterUUID","view","forms","excludedIntents","description","dropdownText"],"sourceRoot":""}