{"version":3,"file":"6729.js","mappings":"+NAyBO,MAAMA,EAAgB,0BAEvBC,EAAiC,CASrC,CACEC,IAAK,kBACLC,OAAQ,sBACRC,SAAUC,IACDC,EAAAA,EAAAA,IAAoBD,EAAWE,EAAAA,IAA0C,IAGpF,CACEL,IAAK,mBACLC,OAAQ,oBACRC,SAAUC,IACDC,EAAAA,EAAAA,IAAoBD,EAAWG,EAAAA,KAG1C,CACEN,IAAK,mBACLC,OAAQ,UACRC,SAAUC,IACR,MAAMI,GAAMC,EAAAA,EAAAA,IAAQL,EAAWM,EAAAA,IAC/B,YAAmBC,WAARH,GAAqBA,GACL,iBAAdA,EAAII,YACDD,IAARH,GAIkB,qBAFlBA,EAAII,MAAMC,OAAOC,MAAKC,GAA+C,UAAhCA,EAAYC,mBAA8BC,MAC/ET,EAAII,MAAMK,KAAKA,OAERZ,EAAAA,EAAAA,IAAoBD,EAAWc,EAAAA,KAKvCb,EAAAA,EAAAA,IAAoBD,EAAWM,EAAAA,MAG1C,CACET,IAAK,UACLC,OAAQ,UACRC,SAAU,SAqBd,EAjBkE,EAAGgB,YAAAA,MACnE,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,kBACRC,EAAcF,EAAE,oBAAqB,gBACrCG,EAAcH,EAAE,oBAAqB,gBAC3C,OACE,kBAAC,KAAD,CACED,YAAaA,EACbK,cAAeC,EAAAA,GACfC,KAAM,CAAEC,QAAS,QAASV,KAAM,qBAChCjB,QAASA,EACT4B,YAAaL,EACbD,YAAaA,EACbO,aAAa","sources":["webpack://openmrs-ohri-app/./src/covid/pages/covid-vaccinations.encounter-list.tsx"],"sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  covidVaccinationEncounterUUID,\n  covidVaccination1stDoseDateConcept_UUID,\n  covidVaccinationTypeConcept_UUID,\n  covidVaccinationNextVacinationDateConcept_UUID,\n  covidVaccinationAdministeredConcept_UUID,\n  covidVaccinationDoseAdmininstered_UUID,\n  covidVaccineAdministeredConcept_UUID,\n  covidVaccineConcept_UUID,\n} from '../../constants';\n\n//Generic Component Import\nimport EncounterList, {\n  EncounterListColumn,\n  getObsFromEncounter,\n  getEncounterValues,\n  findObs,\n} from '../../components/encounter-list/encounter-list.component';\n\ninterface CovidVaccinationsWidgetProps {\n  patientUuid: string;\n}\n\nexport const covidFormSlot = 'hts-encounter-form-slot';\n\nconst columns: EncounterListColumn[] = [\n  //TODO: Add Vaccination Status concept\n  // {\n  //   key: 'covidStatus',\n  //   header: 'Covid Status',\n  //   getValue: encounter => {\n  //     return getObsFromEncounter(encounter, covidVaccinationStatusConcept_UUID);\n  //   },\n  // },\n  {\n    key: 'vaccinationDate',\n    header: 'Date of Vaccination',\n    getValue: encounter => {\n      return getObsFromEncounter(encounter, covidVaccinationAdministeredConcept_UUID, true);\n    },\n  },\n  {\n    key: 'doseAdministered',\n    header: 'Dose Administered',\n    getValue: encounter => {\n      return getObsFromEncounter(encounter, covidVaccinationDoseAdmininstered_UUID);\n    },\n  },\n  {\n    key: 'covidVaccineType',\n    header: 'Vaccine',\n    getValue: encounter => {\n      const obs = findObs(encounter, covidVaccineAdministeredConcept_UUID);\n      if (typeof obs !== undefined && obs) {\n        if (typeof obs.value === 'object') {\n          if (obs !== undefined) {\n            const vaccineNAME =\n              obs.value.names?.find(conceptName => conceptName.conceptNameType === 'SHORT')?.name ||\n              obs.value.name.name;\n            if (vaccineNAME === 'Other non-coded') {\n              return getObsFromEncounter(encounter, covidVaccineConcept_UUID);\n            }\n          }\n        }\n      }\n      return getObsFromEncounter(encounter, covidVaccineAdministeredConcept_UUID);\n    },\n  },\n  {\n    key: 'actions',\n    header: 'Actions',\n    getValue: () => {},\n  },\n];\n\nconst CovidVaccinations: React.FC<CovidVaccinationsWidgetProps> = ({ patientUuid }) => {\n  const { t } = useTranslation();\n  const headerTitle = t('covidVaccinations', 'Vaccinations');\n  const displayText = t('covidVaccinations', 'Vaccinations');\n  return (\n    <EncounterList\n      patientUuid={patientUuid}\n      encounterUuid={covidVaccinationEncounterUUID}\n      form={{ package: 'covid', name: 'covid_vaccination' }}\n      columns={columns}\n      description={displayText}\n      headerTitle={headerTitle}\n      dropdownText=\"Add\"\n    />\n  );\n};\n\nexport default CovidVaccinations;\n"],"names":["covidFormSlot","columns","key","header","getValue","encounter","getObsFromEncounter","covidVaccinationAdministeredConcept_UUID","covidVaccinationDoseAdmininstered_UUID","obs","findObs","covidVaccineAdministeredConcept_UUID","undefined","value","names","find","conceptName","conceptNameType","name","covidVaccineConcept_UUID","patientUuid","t","useTranslation","headerTitle","displayText","encounterUuid","covidVaccinationEncounterUUID","form","package","description","dropdownText"],"sourceRoot":""}