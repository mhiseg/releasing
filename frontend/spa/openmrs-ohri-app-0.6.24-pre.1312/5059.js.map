{"version":3,"file":"5059.js","mappings":"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","sources":["webpack://openmrs-ohri-app/./node_modules/carbon-components-react/es/components/DataTableSkeleton/DataTableSkeleton.js","webpack://openmrs-ohri-app/./node_modules/carbon-components-react/es/components/InlineLoading/InlineLoading.js","webpack://openmrs-ohri-app/./node_modules/carbon-components-react/es/components/Loading/Loading.js","webpack://openmrs-ohri-app/./src/components/patient-list-tabs/ohri-patient-list-tabs.scss?ca13","webpack://openmrs-ohri-app/./src/components/patient-list-tabs/ohri-patient-list-tabs.component.tsx","webpack://openmrs-ohri-app/./src/covid/home/patient-list-tabs/covid-patient-list-tabs.component.tsx","webpack://openmrs-ohri-app/./src/components/patient-list-tabs/ohri-patient-list-tabs.scss"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"headers\", \"rowCount\", \"columnCount\", \"zebra\", \"compact\", \"className\", \"showHeader\", \"showToolbar\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport cx from 'classnames';\nimport { settings } from 'carbon-components';\nvar prefix = settings.prefix;\n\nvar DataTableSkeleton = function DataTableSkeleton(_ref) {\n  var _cx;\n\n  var headers = _ref.headers,\n      rowCount = _ref.rowCount,\n      columnCount = _ref.columnCount,\n      zebra = _ref.zebra,\n      compact = _ref.compact,\n      className = _ref.className,\n      showHeader = _ref.showHeader,\n      showToolbar = _ref.showToolbar,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var dataTableSkeletonClasses = cx(className, (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--skeleton\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--data-table\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--data-table--zebra\"), zebra), _defineProperty(_cx, \"\".concat(prefix, \"--data-table--compact\"), compact), _cx));\n  var rowRepeat = rowCount;\n  var rows = Array(rowRepeat);\n  var columnsArray = Array.from({\n    length: columnCount\n  }, function (_, index) {\n    return index;\n  });\n\n  for (var i = 0; i < rowRepeat; i++) {\n    rows[i] = /*#__PURE__*/React.createElement(\"tr\", {\n      key: i\n    }, columnsArray.map(function (j) {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: j\n      }, /*#__PURE__*/React.createElement(\"span\", null));\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--skeleton \").concat(prefix, \"--data-table-container\")\n  }, showHeader ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--data-table-header\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--data-table-header__title\")\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--data-table-header__description\")\n  })) : null, showToolbar ? /*#__PURE__*/React.createElement(\"section\", {\n    \"aria-label\": \"data table toolbar\",\n    className: \"\".concat(prefix, \"--table-toolbar\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--toolbar-content\")\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--skeleton \").concat(prefix, \"--btn \").concat(prefix, \"--btn--sm\")\n  }))) : null, /*#__PURE__*/React.createElement(\"table\", _extends({\n    className: dataTableSkeletonClasses\n  }, rest), /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", null, columnsArray.map(function (i) {\n    var _headers$i;\n\n    return /*#__PURE__*/React.createElement(\"th\", {\n      key: i\n    }, headers ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bx--table-header-label\"\n    }, (_headers$i = headers[i]) === null || _headers$i === void 0 ? void 0 : _headers$i.header) : /*#__PURE__*/React.createElement(\"span\", null));\n  }))), /*#__PURE__*/React.createElement(\"tbody\", null, rows)));\n};\n\nDataTableSkeleton.propTypes = {\n  /**\n   * Specify an optional className to add.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the number of columns that you want to render in the skeleton state\n   */\n  columnCount: PropTypes.number,\n\n  /**\n   * Optionally specify whether you want the Skeleton to be rendered as a\n   * compact DataTable\n   */\n  compact: PropTypes.bool,\n\n  /**\n   * Optionally specify the displayed headers\n   */\n  headers: PropTypes.oneOfType([PropTypes.array, PropTypes.shape({\n    key: PropTypes.string\n  })]),\n\n  /**\n   * Specify the number of rows that you want to render in the skeleton state\n   */\n  rowCount: PropTypes.number,\n\n  /**\n   * Specify if the table header should be rendered as part of the skeleton.\n   */\n  showHeader: PropTypes.bool,\n\n  /**\n   * Specify if the table toolbar should be rendered as part of the skeleton.\n   */\n  showToolbar: PropTypes.bool,\n\n  /**\n   * Optionally specify whether you want the DataTable to be zebra striped\n   */\n  zebra: PropTypes.bool\n};\nDataTableSkeleton.defaultProps = {\n  rowCount: 5,\n  columnCount: 5,\n  zebra: false,\n  compact: false,\n  showHeader: true,\n  showToolbar: true\n};\nexport default DataTableSkeleton;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"className\", \"success\", \"status\", \"iconDescription\", \"description\", \"onSuccess\", \"successDelay\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { CheckmarkFilled16, ErrorFilled16 } from '@carbon/icons-react';\nimport deprecate from '../../prop-types/deprecate';\nimport Loading from '../Loading';\nimport { usePrefix } from '../../internal/usePrefix';\nexport default function InlineLoading(_ref) {\n  var className = _ref.className,\n      success = _ref.success,\n      _ref$status = _ref.status,\n      status = _ref$status === void 0 ? success ? 'finished' : 'active' : _ref$status,\n      iconDescription = _ref.iconDescription,\n      description = _ref.description,\n      onSuccess = _ref.onSuccess,\n      successDelay = _ref.successDelay,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var loadingClasses = classNames(\"\".concat(prefix, \"--inline-loading\"), className);\n\n  var getLoading = function getLoading() {\n    if (status === 'error') {\n      return /*#__PURE__*/React.createElement(ErrorFilled16, {\n        className: \"\".concat(prefix, \"--inline-loading--error\")\n      }, /*#__PURE__*/React.createElement(\"title\", null, iconDescription));\n    }\n\n    if (status === 'finished') {\n      setTimeout(function () {\n        if (onSuccess) {\n          onSuccess();\n        }\n      }, successDelay);\n      return /*#__PURE__*/React.createElement(CheckmarkFilled16, {\n        className: \"\".concat(prefix, \"--inline-loading__checkmark-container\")\n      }, /*#__PURE__*/React.createElement(\"title\", null, iconDescription));\n    }\n\n    if (status === 'inactive' || status === 'active') {\n      return /*#__PURE__*/React.createElement(Loading, {\n        small: true,\n        description: iconDescription,\n        withOverlay: false,\n        active: status === 'active'\n      });\n    }\n\n    return undefined;\n  };\n\n  var loadingText = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--inline-loading__text\")\n  }, description);\n  var loading = getLoading();\n  var loadingAnimation = loading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--inline-loading__animation\")\n  }, loading);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: loadingClasses\n  }, other, {\n    \"aria-live\": 'assertive' || other['aria-live']\n  }), loadingAnimation, description && loadingText);\n}\nInlineLoading.propTypes = {\n  /**\n   * Specify a custom className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the description for the inline loading text\n   */\n  description: PropTypes.node,\n\n  /**\n   * Specify the description for the inline loading text\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * Provide an optional handler to be invoked when <InlineLoading> is\n   * successful\n   */\n  onSuccess: PropTypes.func,\n\n  /**\n   * Specify the loading status\n   */\n  status: PropTypes.oneOf(['inactive', 'active', 'finished', 'error']),\n\n  /**\n   * Specify whether the load was successful\n   */\n  success: deprecate(PropTypes.bool, \"\\nThe prop `success` for InlineLoading has been deprecated in favor of `status`. Please use `status=\\\"finished\\\"` instead.\"),\n\n  /**\n   * Provide a delay for the `setTimeout` for success\n   */\n  successDelay: PropTypes.number\n};\nInlineLoading.defaultProps = {\n  successDelay: 1500\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"id\", \"active\", \"className\", \"withOverlay\", \"small\", \"description\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useRef } from 'react';\nimport setupGetInstanceId from '../../tools/setupGetInstanceId';\nimport { usePrefix } from '../../internal/usePrefix';\nvar getInstanceId = setupGetInstanceId();\n\nfunction Loading(_ref) {\n  var _cx, _cx2;\n\n  var id = _ref.id,\n      active = _ref.active,\n      customClassName = _ref.className,\n      withOverlay = _ref.withOverlay,\n      small = _ref.small,\n      description = _ref.description,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n\n  var _useRef = useRef(getInstanceId()),\n      instanceId = _useRef.current;\n\n  var loadingClassName = cx(customClassName, (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--loading\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--loading--small\"), small), _defineProperty(_cx, \"\".concat(prefix, \"--loading--stop\"), !active), _cx));\n  var overlayClassName = cx((_cx2 = {}, _defineProperty(_cx2, \"\".concat(prefix, \"--loading-overlay\"), true), _defineProperty(_cx2, \"\".concat(prefix, \"--loading-overlay--stop\"), !active), _cx2));\n  var loadingId = id || \"loading-id-\".concat(instanceId);\n  var loading = /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n    \"aria-atomic\": \"true\",\n    \"aria-labelledby\": loadingId,\n    \"aria-live\": active ? 'assertive' : 'off',\n    className: loadingClassName\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    id: loadingId,\n    className: \"\".concat(prefix, \"--visually-hidden\")\n  }, description), /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"\".concat(prefix, \"--loading__svg\"),\n    viewBox: \"0 0 100 100\"\n  }, /*#__PURE__*/React.createElement(\"title\", null, description), small ? /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"\".concat(prefix, \"--loading__background\"),\n    cx: \"50%\",\n    cy: \"50%\",\n    r: \"44\"\n  }) : null, /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"\".concat(prefix, \"--loading__stroke\"),\n    cx: \"50%\",\n    cy: \"50%\",\n    r: \"44\"\n  })));\n  return withOverlay ? /*#__PURE__*/React.createElement(\"div\", {\n    className: overlayClassName\n  }, loading) : loading;\n}\n\nLoading.propTypes = {\n  /**\n   * Specify whether you want the loading indicator to be spinning or not\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Provide an optional className to be applied to the containing node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify a description that would be used to best describe the loading state\n   */\n  description: PropTypes.string,\n\n  /**\n   * Provide an `id` to uniquely identify the label\n   */\n  id: PropTypes.string,\n\n  /**\n   * Specify whether you would like the small variant of <Loading>\n   */\n  small: PropTypes.bool,\n\n  /**\n   * Specify whether you want the loader to be applied with an overlay\n   */\n  withOverlay: PropTypes.bool\n};\nLoading.defaultProps = {\n  active: true,\n  withOverlay: true,\n  small: false,\n  description: 'Active loading indicator'\n};\nexport default Loading;","\n      import API from \"!../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/@openmrs/webpack-config/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./ohri-patient-list-tabs.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./ohri-patient-list-tabs.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport { Tabs, Tab } from 'carbon-components-react';\nimport styles from './ohri-patient-list-tabs.scss';\nimport CohortPatientList from '../patient-lists/patient-list-cohort.component';\n\nfunction OHRIPatientListTabs({ patientListConfigs }) {\n  return (\n    <Tabs type=\"container\" className={styles.tabContainer}>\n      {patientListConfigs.map((config, index) => {\n        return (\n          <Tab id={index} label={config.label}>\n            <CohortPatientList\n              cohortId={config.cohortId}\n              cohortSlotName={config.cohortSlotName}\n              isReportingCohort={config.isReportingCohort}\n              excludeColumns={config.excludeColumns}\n              otherColumns={config.otherColumns}\n              queryParams={config.queryParams}\n              associatedEncounterType={config.associatedEncounterType}\n              launchableForm={config.launchableForm}\n              extraAssociatedEncounterTypes={config.extraAssociatedEncounterTypes}\n            />\n          </Tab>\n        );\n      })}\n    </Tabs>\n  );\n}\n\nexport default OHRIPatientListTabs;\n","import React from 'react';\nimport {\n  clientsAssessedForCovid,\n  clientsWithoutCovidOutcomes,\n  covidCaseAssessmentEncType,\n  covidClientsWithPendingLabResults,\n  covidLabTestEncType,\n  covidOutcome,\n  covidTestType,\n  covidVaccinatedClients,\n  covidVaccinationDoseAdmininstered_UUID,\n  covidVaccinationEncType,\n  covidVaccineAdministeredConcept_UUID,\n  covidVaccineConcept_UUID,\n  dateSpecimenCollected,\n  finalCovid19Result,\n  pcrTestResult,\n  pcrTestResultDate,\n  rapidAntigenResultDate,\n  rapidTestResult,\n  returnVisitDateConcept,\n} from '../../../constants';\nimport OHRIPatientListTabs from '../../../components/patient-list-tabs/ohri-patient-list-tabs.component';\nimport { useTranslation } from 'react-i18next';\nimport {\n  findObs,\n  getObsFromEncounter,\n  getObsFromEncounters,\n} from '../../../components/encounter-list/encounter-list.component';\nimport moment from 'moment';\n\nfunction CovidHomePatientTabs() {\n  const { t } = useTranslation();\n\n  const tabsConfigs = [\n    {\n      label: t('allCTClients', 'All COVID-19 Clients'),\n      cohortId: clientsAssessedForCovid,\n      isReportingCohort: true,\n      cohortSlotName: 'clients-assessed-for-covid-slot',\n      launchableForm: {\n        package: 'covid',\n        name: 'covid_assessment',\n        editActionText: 'Edit case assessment form',\n        editLatestEncounter: true,\n        targetDashboard: 'covid-assessments',\n      },\n      associatedEncounterType: covidCaseAssessmentEncType,\n      excludeColumns: ['timeAddedToList', 'waitingTime', 'location', 'phoneNumber', 'hivResult'],\n      otherColumns: [\n        {\n          key: 'assessmentDate',\n          header: 'Assessment date',\n          getValue: ({ latestEncounter }) => {\n            return latestEncounter && moment(latestEncounter.encounterDatetime).format('DD-MMM-YYYY');\n          },\n          index: 3,\n        },\n        {\n          key: 'finalAssessment',\n          header: 'Final result',\n          getValue: ({ latestExtraEncounters }) => {\n            const pcrResult = getObsFromEncounters(latestExtraEncounters, pcrTestResult);\n            return pcrResult && pcrResult != '--'\n              ? pcrResult\n              : getObsFromEncounters(latestExtraEncounters, rapidTestResult);\n          },\n        },\n        {\n          key: 'outcome',\n          header: 'Outcome',\n          getValue: ({ latestEncounter }) => {\n            return getObsFromEncounter(latestEncounter, covidOutcome);\n          },\n        },\n      ],\n      extraAssociatedEncounterTypes: [covidLabTestEncType],\n    },\n    {\n      label: t('pendingLabResults', 'Pending lab results'),\n      cohortId: covidClientsWithPendingLabResults,\n      isReportingCohort: true,\n      cohortSlotName: 'pending-covid-lab-results-slot',\n      launchableForm: {\n        package: 'covid',\n        name: 'covid_lab_test',\n        editActionText: 'Enter test result',\n        editLatestEncounter: true,\n        targetDashboard: 'covid-lab-results',\n      },\n      excludeColumns: ['timeAddedToList', 'waitingTime', 'location', 'phoneNumber', 'hivResult'],\n      associatedEncounterType: covidCaseAssessmentEncType,\n      otherColumns: [\n        {\n          key: 'testDate',\n          header: 'Test Date',\n          getValue: ({ latestEncounter }) => {\n            return getObsFromEncounter(latestEncounter, dateSpecimenCollected, true);\n          },\n        },\n        {\n          key: 'testType',\n          header: 'Test Type',\n          getValue: ({ latestEncounter }) => {\n            return getObsFromEncounter(latestEncounter, covidTestType);\n          },\n        },\n      ],\n    },\n    {\n      label: t('scheduledVaccination', 'Scheduled Vaccination'),\n      cohortId: covidVaccinatedClients,\n      isReportingCohort: true,\n      cohortSlotName: 'clients-vaccinated-for-covid-slot',\n      launchableForm: {\n        package: 'covid',\n        name: 'covid_vaccination',\n        editActionText: 'Edit covid vaccination form',\n        editLatestEncounter: true,\n        targetDashboard: 'covid_vaccination',\n      },\n      associatedEncounterType: covidVaccinationEncType,\n      excludeColumns: ['timeAddedToList', 'waitingTime', 'location', 'phoneNumber', 'hivResult'],\n      otherColumns: [\n        {\n          key: 'lastDoseAdministered',\n          header: 'Last Dose Administered',\n          getValue: ({ latestEncounter }) => {\n            return getObsFromEncounter(latestEncounter, covidVaccinationDoseAdmininstered_UUID);\n          },\n        },\n        {\n          key: 'vaccine',\n          header: 'Vaccine',\n          getValue: ({ latestEncounter }) => {\n            const obs = findObs(latestEncounter, covidVaccineAdministeredConcept_UUID);\n            if (typeof obs !== undefined && obs) {\n              if (typeof obs.value === 'object') {\n                const vaccineNAME =\n                  obs.value.names?.find(conceptName => conceptName.conceptNameType === 'SHORT')?.name ||\n                  obs.value.name.name;\n                if (vaccineNAME === 'Other non-coded') {\n                  return getObsFromEncounter(latestEncounter, covidVaccineConcept_UUID);\n                }\n              }\n            }\n            return getObsFromEncounter(latestEncounter, covidVaccineAdministeredConcept_UUID);\n          },\n        },\n        {\n          key: 'returnVisitDate',\n          header: 'Return Visit Date',\n          getValue: ({ latestEncounter }) => {\n            return getObsFromEncounter(latestEncounter, returnVisitDateConcept, true);\n          },\n        },\n      ],\n    },\n  ];\n  return <OHRIPatientListTabs patientListConfigs={tabsConfigs} />;\n}\n\nexport default CovidHomePatientTabs;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.openmrs-ohri__ohri-patient-list-tabs__productiveHeading01___2OCxv{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.openmrs-ohri__ohri-patient-list-tabs__productiveHeading02___20lUq{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.openmrs-ohri__ohri-patient-list-tabs__productiveHeading03___Eg_AU{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.openmrs-ohri__ohri-patient-list-tabs__productiveHeading04___2mJMz{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.openmrs-ohri__ohri-patient-list-tabs__productiveHeading05___299yU{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}.openmrs-ohri__ohri-patient-list-tabs__productiveHeading06___2E8jq{font-size:2rem;font-weight:300;line-height:1.199;letter-spacing:0}.openmrs-ohri__ohri-patient-list-tabs__bodyShort01___2YjnV{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.openmrs-ohri__ohri-patient-list-tabs__helperText01___1j9FE{font-size:.75rem;line-height:1.34;letter-spacing:.32px}.openmrs-ohri__ohri-patient-list-tabs__bodyShort02___1FjTF{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.openmrs-ohri__ohri-patient-list-tabs__bodyLong01___2MB17{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.openmrs-ohri__ohri-patient-list-tabs__bodyLong02___2a3yk{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}.openmrs-ohri__ohri-patient-list-tabs__label01___hgTKp{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.openmrs-ohri__ohri-patient-list-tabs__text01___3jWOH{color:#161616}.openmrs-ohri__ohri-patient-list-tabs__text02___3ZnqG{color:#525252}aside{background-color:#fff !important}div[class*=-esm-login__styles__center]>img{width:140px}.tab-12rem>button{width:12rem !important}.tab-14rem>button{width:14rem !important}.tab-16rem>button{width:16rem !important}.openmrs-ohri__ohri-patient-list-tabs__container___megX5{margin-top:16px;margin-left:inherit;width:100%;overflow-y:hidden}.openmrs-ohri__ohri-patient-list-tabs__tabContainer___d7jsH{margin-top:16px;padding-left:1rem;background-color:#fff}.openmrs-ohri__ohri-patient-list-tabs__tabContainer___d7jsH li button{width:100% !important}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"productiveHeading01\": \"openmrs-ohri__ohri-patient-list-tabs__productiveHeading01___2OCxv\",\n\t\"productiveHeading02\": \"openmrs-ohri__ohri-patient-list-tabs__productiveHeading02___20lUq\",\n\t\"productiveHeading03\": \"openmrs-ohri__ohri-patient-list-tabs__productiveHeading03___Eg_AU\",\n\t\"productiveHeading04\": \"openmrs-ohri__ohri-patient-list-tabs__productiveHeading04___2mJMz\",\n\t\"productiveHeading05\": \"openmrs-ohri__ohri-patient-list-tabs__productiveHeading05___299yU\",\n\t\"productiveHeading06\": \"openmrs-ohri__ohri-patient-list-tabs__productiveHeading06___2E8jq\",\n\t\"bodyShort01\": \"openmrs-ohri__ohri-patient-list-tabs__bodyShort01___2YjnV\",\n\t\"helperText01\": \"openmrs-ohri__ohri-patient-list-tabs__helperText01___1j9FE\",\n\t\"bodyShort02\": \"openmrs-ohri__ohri-patient-list-tabs__bodyShort02___1FjTF\",\n\t\"bodyLong01\": \"openmrs-ohri__ohri-patient-list-tabs__bodyLong01___2MB17\",\n\t\"bodyLong02\": \"openmrs-ohri__ohri-patient-list-tabs__bodyLong02___2a3yk\",\n\t\"label01\": \"openmrs-ohri__ohri-patient-list-tabs__label01___hgTKp\",\n\t\"text01\": \"openmrs-ohri__ohri-patient-list-tabs__text01___3jWOH\",\n\t\"text02\": \"openmrs-ohri__ohri-patient-list-tabs__text02___3ZnqG\",\n\t\"container\": \"openmrs-ohri__ohri-patient-list-tabs__container___megX5\",\n\t\"tabContainer\": \"openmrs-ohri__ohri-patient-list-tabs__tabContainer___d7jsH\"\n};\nmodule.exports = exports;\n"],"names":["_excluded","prefix","settings","DataTableSkeleton","_ref","_cx","headers","rowCount","columnCount","zebra","compact","className","showHeader","showToolbar","rest","_objectWithoutProperties","dataTableSkeletonClasses","cx","_defineProperty","concat","rowRepeat","rows","Array","columnsArray","from","length","_","index","i","React","key","map","j","_extends","_headers$i","header","propTypes","PropTypes","defaultProps","InlineLoading","success","_ref$status","status","iconDescription","description","onSuccess","successDelay","other","usePrefix","loadingClasses","classNames","loadingText","loading","ErrorFilled16","setTimeout","CheckmarkFilled16","Loading","small","withOverlay","active","loadingAnimation","deprecate","getInstanceId","setupGetInstanceId","_cx2","id","customClassName","instanceId","useRef","current","loadingClassName","overlayClassName","loadingId","viewBox","cy","r","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","patientListConfigs","Tabs","type","styles","config","Tab","label","cohortId","cohortSlotName","isReportingCohort","excludeColumns","otherColumns","queryParams","associatedEncounterType","launchableForm","extraAssociatedEncounterTypes","t","useTranslation","tabsConfigs","clientsAssessedForCovid","package","name","editActionText","editLatestEncounter","targetDashboard","covidCaseAssessmentEncType","getValue","latestEncounter","moment","encounterDatetime","format","latestExtraEncounters","pcrResult","getObsFromEncounters","pcrTestResult","rapidTestResult","getObsFromEncounter","covidOutcome","covidLabTestEncType","covidClientsWithPendingLabResults","dateSpecimenCollected","covidTestType","covidVaccinatedClients","covidVaccinationEncType","covidVaccinationDoseAdmininstered_UUID","obs","findObs","covidVaccineAdministeredConcept_UUID","value","names","find","conceptName","conceptNameType","covidVaccineConcept_UUID","returnVisitDateConcept","exports","___CSS_LOADER_API_IMPORT___","push","module","locals"],"sourceRoot":""}