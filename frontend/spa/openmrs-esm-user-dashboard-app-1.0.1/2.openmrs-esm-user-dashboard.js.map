{"version":3,"sources":["webpack:///./src/components/toast-messages/toast-message.css","webpack:///./src/model/loading-status.ts","webpack:///./src/components/widget-loader.component.tsx","webpack:///./src/components/breadcrumb.component.tsx","webpack:///./src/components/toast-messages/toast-message.component.tsx","webpack:///./src/components/toast-messages/index.component.tsx","webpack:///./src/utils.ts","webpack:///./src/openmrs-esm-user-dashboard.tsx","webpack:///./src/root.component.tsx","webpack:///./src/global.css?67e6","webpack:///./src/global.css","webpack:///./src/components/toast-messages/toast-message.css?a99d"],"names":["module","exports","push","i","LoadingStatus","WidgetLoader","props","useState","undefined","componentModule","setComponentModule","Loading","loadingStatus","setLoadingStatus","handles","config","library","name","size","widgetProps","properties","title","isTabletOrMobile","useMediaQuery","query","useEffect","System","then","Loaded","error","Failed","className","style","gridRow","rows","gridColumn","columns","Component","userProps","displayWidget","Breadcrumb","marginHorizonal3Style","margin","href","paths","map","path","key","ToastMessage","type","message","onClose","id","sessionStorage","getItem","setItem","setTimeout","removeItem","toString","success","warning","role","tabIndex","onClick","React","forwardRef","ref","toasts","setToasts","useImperativeHandle","add","newToast","existingToasts","toast","removedToast","filter","oldFetch","window","fetch","result","apply","this","arguments","res","status","location","assign","singleSpaReact","ReactDOM","rootComponent","numberOfColumns","dashboardConfig","setDashboardConfig","configLoadingStatus","setConfigLoadingStatus","loggedInUser","setLoggedInUser","loggedInProvider","setLoggedInProvider","toastMessageRef","createRef","widgetHandles","showMessage","messageDetails","current","Math","floor","random","isLoggedIn","user","authenticated","sub","getCurrentUser","includeAuthStatus","subscribe","unsubscribe","dashboardType","pathname","split","pop","configPromise","openmrsFetch","providerPromise","uuid","Promise","all","configResponse","providerResponse","data","results","breadcrumbs","gridTemplateColumns","layout","String","repeat","trimRight","contents","widget","widgetConfig","provider","locale","displayDashboard","bootstrap","mount","unmount","content","options","transform","locals"],"mappings":"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","file":"2.openmrs-esm-user-dashboard.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".toast-messages {\\n  display: flex;\\n  flex-direction: column-reverse;\\n}\\n\\n.top-right {\\n  position: absolute;\\n  top: 0px;\\n  right: 0px;\\n}\\n\\n.note-container .close-icon {\\n  font-size: 1em !important;\\n}\\n\\n.note-container .note {\\n  margin: 0px !important;\\n}\\n\", \"\"]);\n","enum LoadingStatus {\n  Loading = 0,\n  Loaded,\n  Failed\n}\n\nexport default LoadingStatus;\n","import React, { useEffect, useState } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\n\nimport LoadingStatus from \"../model/loading-status\";\n\nexport default function WidgetLoader(props: WidgetLoaderProps) {\n  const [componentModule, setComponentModule] = useState(undefined);\n  const [loadingStatus, setLoadingStatus] = useState(LoadingStatus.Loading);\n\n  const { handles = {} } = props;\n  const { module, name = \"default\" } = props.config.library;\n  const { size } = props.config;\n  const { properties: widgetProps } = props.config;\n  const { title = \"Control\" } = widgetProps;\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 600px)\" });\n\n  useEffect(() => {\n    System.import(module)\n      .then(module => {\n        setComponentModule(module);\n        setLoadingStatus(LoadingStatus.Loaded);\n      })\n      .catch(error => {\n        setLoadingStatus(LoadingStatus.Failed);\n      });\n  }, []);\n\n  function renderWidget() {\n    const Component = componentModule[name];\n    return <Component {...props.userProps} {...widgetProps} {...handles} />;\n  }\n\n  function renderLoadingMessage() {\n    return <span className=\"loading\">Loading...</span>;\n  }\n\n  function renderErrorMessage() {\n    return <span className=\"error\">Unable to load {title}</span>;\n  }\n\n  function displayWidget() {\n    switch (loadingStatus) {\n      case LoadingStatus.Loaded:\n        return renderWidget();\n      case LoadingStatus.Loading:\n        return renderLoadingMessage();\n      default:\n        return renderErrorMessage();\n    }\n  }\n\n  const getWidgetRowSize = () => (size && size.rows ? size.rows : 1);\n  const getWidgetColumnSize = () =>\n    !isTabletOrMobile && size && size.columns ? size.columns : 1;\n  const getWidgetSizeStyle = (): GridSize => ({\n    gridRow: `span ${getWidgetRowSize()}`,\n    gridColumn: `span ${getWidgetColumnSize()}`\n  });\n\n  return (\n    <div className=\"widget-container\" style={getWidgetSizeStyle()}>\n      {displayWidget()}\n    </div>\n  );\n}\n\ntype WidgetLoaderProps = {\n  config: {\n    size?: {\n      rows?: number;\n      columns?: number;\n    };\n    library: {\n      module: string;\n      name?: string;\n    };\n    properties: any;\n  };\n  userProps: any;\n  handles?: any;\n};\n\ntype GridSize = {\n  gridRow: string;\n  gridColumn: string;\n};\n","import React, { Fragment } from \"react\";\n\nexport default function Breadcrumb(props: BreadcrumbProps) {\n  const marginHorizonal3Style = { margin: \"0px 3px\" };\n  const getPathLink = ({ name, href }: BreadcrumbPath) => (\n    <Fragment key={name}>\n      <i className=\"icon-chevron-right link\" style={marginHorizonal3Style}></i>\n      {href ? <a href={href}>{name}</a> : <span>{name}</span>}\n    </Fragment>\n  );\n\n  return (\n    <div className=\"breadcrumb\">\n      <a href=\"/openmrs\">\n        <i className=\"icon-home small\"></i>\n      </a>\n      {props.paths.map(path => getPathLink(path))}\n    </div>\n  );\n}\n\ntype BreadcrumbProps = {\n  paths: BreadcrumbPath[];\n};\n\nexport type BreadcrumbPath = {\n  name: string;\n  href?: string;\n};\n","import React from \"react\";\n\nimport \"./toast-message.css\";\n\nexport default function ToastMessage(props: ToastMessageProperties) {\n  const { type, message, onClose, id } = props;\n  const icons = {\n    error: \"remove\",\n    success: \"ok\",\n    warning: \"warning-sign\"\n  };\n\n  if (!sessionStorage.getItem(id)) {\n    sessionStorage.setItem(\n      id,\n      setTimeout(() => {\n        onClose();\n        sessionStorage.removeItem(id);\n      }, 5000).toString()\n    );\n  }\n\n  return (\n    <div className=\"note-container\">\n      <div className={`note ${type}`}>\n        <div className=\"text\">\n          <i className={`icon-${icons[type]} medium`}></i>\n          <p>{message}</p>\n        </div>\n        <div\n          role=\"button\"\n          tabIndex={0}\n          className=\"close-icon\"\n          onClick={onClose}\n        >\n          <i title=\"Close\" className=\"icon-remove\"></i>\n        </div>\n      </div>\n    </div>\n  );\n}\n\ntype ToastMessageProperties = {\n  type: string;\n  message: string;\n  onClose: any;\n  id: string;\n};\n","import React, { useState, useImperativeHandle } from \"react\";\nimport ToastMessage from \"./toast-message.component\";\n\nimport \"./toast-message.css\";\n\nexport default React.forwardRef(function ToastMessages(\n  props: ToastMessagesProperties,\n  ref\n) {\n  const [toasts, setToasts] = useState([]);\n  const removeMessage = (removedToast: Toast) => {\n    setToasts(existingToasts =>\n      existingToasts.filter(toast => toast.id !== removedToast.id)\n    );\n  };\n\n  useImperativeHandle(ref, () => {\n    return {\n      add(newToast) {\n        setToasts(existingToasts => [...existingToasts, newToast]);\n      }\n    };\n  });\n\n  return (\n    <div className=\"top-right toast-messages\">\n      {toasts.map(toast => {\n        return (\n          <ToastMessage\n            key={toast.id}\n            {...toast}\n            onClose={() => removeMessage(toast)}\n          ></ToastMessage>\n        );\n      })}\n    </div>\n  );\n});\n\ntype ToastMessagesProperties = {};\n\ntype Toast = {\n  type: string;\n  message: string;\n  id: string;\n};\n","import { render } from \"@testing-library/react\";\nimport { act } from \"react-dom/test-utils\";\n\nexport function setErrorFilter(originalError, errorToFilter: RegExp) {\n  //Todo: Upgrade to React Dom 16.9 to avoid below workaround to resolve \"act\" false positive\n  console.error = (...args) => {\n    if (errorToFilter.test(args[0])) {\n      return;\n    }\n    originalError.call(console, ...args);\n  };\n}\n\nexport const renderWithAct = component => {\n  let wrapper;\n  act(() => {\n    wrapper = render(component);\n  });\n  return wrapper;\n};\n\nexport function setFetchInterceptor() {\n  let oldFetch = window.fetch;\n\n  window.fetch = (function() {\n    return function() {\n      let result = oldFetch.apply(this, arguments);\n      result.then(res => {\n        if (res.status == 401 || res.status == 403) {\n          window.location.assign(\n            \"/openmrs/appui/header/logout.action?successUrl=openmrs\"\n          );\n        }\n      });\n      return result;\n    };\n  })();\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport singleSpaReact from \"single-spa-react\";\nimport Root from \"./root.component\";\nimport \"./global.css\";\nimport { setFetchInterceptor } from \"./utils\";\n\nsetFetchInterceptor();\nconst { bootstrap, mount, unmount } = singleSpaReact({\n  React,\n  ReactDOM,\n  rootComponent: Root\n});\n\nexport { bootstrap, mount, unmount };\n","import React, { useEffect, useState } from \"react\";\nimport { openmrsFetch, getCurrentUser } from \"@openmrs/esm-api\";\nimport { useMediaQuery } from \"react-responsive\";\n\nimport WidgetLoader from \"./components/widget-loader.component\";\nimport LoadingStatus from \"./model/loading-status\";\nimport Breadcrumb, { BreadcrumbPath } from \"./components/breadcrumb.component\";\nimport ToastMessages from \"./components/toast-messages/index.component\";\n\nexport default function Root(props: RootProps) {\n  const rootConfigPath = \"/frontend/dashboard-configs\";\n  const providerByUserUrl = \"/ws/rest/v1/provider?user=\";\n  const [dashboardConfig, setDashboardConfig] = useState(undefined);\n  const [configLoadingStatus, setConfigLoadingStatus] = useState(\n    LoadingStatus.Loading\n  );\n  const [loggedInUser, setLoggedInUser] = React.useState(null);\n  const [loggedInProvider, setLoggedInProvider] = React.useState(null);\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 600px)\" });\n  const toastMessageRef = React.createRef();\n\n  const widgetHandles = {\n    showMessage(messageDetails) {\n      if (toastMessageRef.current[\"add\"]) {\n        const toast = {\n          ...messageDetails,\n          id: Math.floor(1000 + Math.random() * 9000)\n        };\n        toastMessageRef.current[\"add\"](toast);\n      }\n    }\n  };\n\n  const isLoggedIn = user => user && user.authenticated;\n  const getUserProps = (user, provider) => ({\n    id: user.user.uuid,\n    locale: user.locale,\n    provider: provider.uuid\n  });\n  useEffect(() => {\n    const sub = getCurrentUser({ includeAuthStatus: true }).subscribe(user =>\n      setLoggedInUser(user)\n    );\n\n    return () => sub.unsubscribe();\n  }, []);\n\n  useEffect(() => {\n    if (!isLoggedIn(loggedInUser)) {\n      return;\n    }\n\n    let dashboardType = window.location.pathname.split(\"/\").pop();\n    const configPromise = openmrsFetch(\n      `${rootConfigPath}/${dashboardType}.json`\n    );\n    const providerPromise = openmrsFetch(\n      `${providerByUserUrl}${loggedInUser.user.uuid}`\n    );\n\n    Promise.all([configPromise, providerPromise])\n      .then(([configResponse, providerResponse]) => {\n        setLoggedInProvider(providerResponse.data.results[0]);\n        setDashboardConfig(configResponse.data);\n        setConfigLoadingStatus(LoadingStatus.Loaded);\n      })\n      .catch(error => {\n        setConfigLoadingStatus(LoadingStatus.Failed);\n      });\n  }, [loggedInUser]);\n\n  function renderDashboard() {\n    const widgetKey = widgetConfig =>\n      `${widgetConfig.library.module}-${\n        widgetConfig.library.name ? widgetConfig.library.name : \"\"\n      }`;\n\n    return (\n      <>\n        {dashboardConfig.contents.map(widget => {\n          return (\n            <WidgetLoader\n              key={widgetKey(widget)}\n              config={widget}\n              userProps={getUserProps(loggedInUser, loggedInProvider)}\n              handles={widgetHandles}\n            ></WidgetLoader>\n          );\n        })}\n      </>\n    );\n  }\n\n  function renderLoadingMessage() {\n    return <span className=\"loading\">Loading...</span>;\n  }\n\n  function renderErrorMessage(message) {\n    return <span className=\"error\">{message}</span>;\n  }\n\n  function displayDashboard() {\n    switch (configLoadingStatus) {\n      case LoadingStatus.Loaded:\n        return renderDashboard();\n      case LoadingStatus.Loading:\n        return renderLoadingMessage();\n      default:\n        return renderErrorMessage(\"Unable to load dashboard\");\n    }\n  }\n\n  function getColumnsLayoutStyle(): string {\n    let numberOfColumns = 1;\n    if (!isTabletOrMobile) {\n      numberOfColumns =\n        configLoadingStatus === LoadingStatus.Loaded &&\n        dashboardConfig.layout &&\n        dashboardConfig.layout.columns\n          ? dashboardConfig.layout.columns\n          : 2;\n    }\n\n    return String(\"1fr \")\n      .repeat(numberOfColumns)\n      .trimRight();\n  }\n\n  const getDashboardTitle = () =>\n    configLoadingStatus == LoadingStatus.Loaded\n      ? dashboardConfig.title\n      : \"My Dashboard\";\n\n  const getDefaultBreadcrumb = (): BreadcrumbPath => ({\n    name: getDashboardTitle()\n  });\n\n  const breadcrumbs = () =>\n    dashboardConfig && dashboardConfig.breadcrumbs\n      ? dashboardConfig.breadcrumbs\n      : [getDefaultBreadcrumb()];\n\n  return (\n    isLoggedIn(loggedInUser) && (\n      <div className=\"content dashboard-container\">\n        <Breadcrumb paths={breadcrumbs()}></Breadcrumb>\n        <div\n          style={{ gridTemplateColumns: getColumnsLayoutStyle() }}\n          className=\"dashboard\"\n        >\n          {displayDashboard()}\n        </div>\n        <ToastMessages ref={toastMessageRef}></ToastMessages>\n      </div>\n    )\n  );\n}\n\ntype RootProps = {};\n","\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js!./global.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/dist/cjs.js!./global.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/dist/cjs.js!./global.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".dashboard {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n  grid-auto-rows: 50%;\\n  grid-gap: 25px;\\n  height: 95%;\\n}\\n\\n.dashboard-container {\\n  bottom: 50px;\\n}\\n\\n.error {\\n  color: red;\\n}\\n\\n.loading {\\n  font-weight: bold;\\n}\\n\\n.widget-container {\\n  background: #eee;\\n  text-align: center;\\n  display: flex;\\n  flex-flow: column;\\n  position: relative;\\n}\\n\", \"\"]);\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!./toast-message.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!./toast-message.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!./toast-message.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}