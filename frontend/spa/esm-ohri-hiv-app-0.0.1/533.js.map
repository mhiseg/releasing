{"version":3,"file":"533.js","mappings":"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","sources":["webpack://esm-ohri-hiv-app/./src/api/api.ts","webpack://esm-ohri-hiv-app/./src/components/loading/loading.component.scss?283e","webpack://esm-ohri-hiv-app/./src/components/loading/loading.component.tsx","webpack://esm-ohri-hiv-app/./src/components/patient-banner/patient-banner.scss?41c4","webpack://esm-ohri-hiv-app/./src/components/patient-banner/patient-banner.component.tsx","webpack://esm-ohri-hiv-app/./src/constants.ts","webpack://esm-ohri-hiv-app/./src/forms/constants.ts","webpack://esm-ohri-hiv-app/./src/forms/utils/boolean-utils.ts","webpack://esm-ohri-hiv-app/./src/forms/utils/expression-runner.ts","webpack://esm-ohri-hiv-app/./src/forms/validators/ohri-form-validator.ts","webpack://esm-ohri-hiv-app/./src/forms/ohri-form.scss?acea","webpack://esm-ohri-hiv-app/./src/forms/components/sidebar/ohri-form-sidebar.component.scss?6cda","webpack://esm-ohri-hiv-app/./src/utils/ohri-sidebar.ts","webpack://esm-ohri-hiv-app/./src/forms/components/sidebar/ohri-form-sidebar.component.tsx","webpack://esm-ohri-hiv-app/./src/forms/ohri-form-context.tsx","webpack://esm-ohri-hiv-app/./src/forms/ohri-form.resource.ts","webpack://esm-ohri-hiv-app/./src/forms/components/inputs/_input.scss?c627","webpack://esm-ohri-hiv-app/./src/forms/components/inputs/unspecified/ohri-unspecified.component.tsx","webpack://esm-ohri-hiv-app/./src/forms/components/section/ohri-form-section.scss?cf9d","webpack://esm-ohri-hiv-app/./src/forms/components/section/ohri-form-section.component.tsx","webpack://esm-ohri-hiv-app/./src/forms/components/group/ohri-obs-group.component.tsx","webpack://esm-ohri-hiv-app/./src/forms/components/label/ohri-label.component.tsx","webpack://esm-ohri-hiv-app/./src/forms/components/value/ohri-value.component.tsx","webpack://esm-ohri-hiv-app/./src/forms/utils/ohri-form-helper.ts","webpack://esm-ohri-hiv-app/./src/forms/validators/default-value-validator.ts","webpack://esm-ohri-hiv-app/./src/forms/components/repeat/ohri-repeat.component.tsx","webpack://esm-ohri-hiv-app/./src/forms/submission-handlers/base-handlers.ts","webpack://esm-ohri-hiv-app/./src/forms/components/inputs/markdown/ohri-markdown.component.tsx","webpack://esm-ohri-hiv-app/./src/forms/validators/ohri-date-validator.ts","webpack://esm-ohri-hiv-app/./src/forms/validators/ohri-js-expression-validator.ts","webpack://esm-ohri-hiv-app/./src/forms/registry/registry.ts","webpack://esm-ohri-hiv-app/./src/forms/components/inputs/text/ohri-text.component.tsx","webpack://esm-ohri-hiv-app/./src/forms/components/inputs/radio/ohri-radio.component.tsx","webpack://esm-ohri-hiv-app/./src/forms/components/inputs/date/ohri-date.component.tsx","webpack://esm-ohri-hiv-app/./src/forms/components/inputs/number/ohri-number.component.tsx","webpack://esm-ohri-hiv-app/./src/forms/components/inputs/multi-select/ohri-multi-select.component.tsx","webpack://esm-ohri-hiv-app/./src/forms/components/inputs/content-switcher/ohri-content-switcher.component.tsx","webpack://esm-ohri-hiv-app/./src/forms/components/inputs/location/ohri-encounter-location.component.tsx","webpack://esm-ohri-hiv-app/./src/forms/components/inputs/select/ohri-dropdown.component.tsx","webpack://esm-ohri-hiv-app/./src/forms/components/inputs/text-area/ohri-text-area.component.tsx","webpack://esm-ohri-hiv-app/./src/forms/components/inputs/toggle/ohri-toggle.component.tsx","webpack://esm-ohri-hiv-app/./src/forms/components/inputs/fixed-value/ohri-fixed-value.component.tsx","webpack://esm-ohri-hiv-app/./src/forms/components/page/_page.scss?b0fc","webpack://esm-ohri-hiv-app/./src/forms/components/page/ohri-form-page.tsx","webpack://esm-ohri-hiv-app/./src/forms/utils/instant-effect.ts","webpack://esm-ohri-hiv-app/./src/forms/components/encounter/ohri-encounter-form.tsx","webpack://esm-ohri-hiv-app/./src/forms/ohri-form.component.tsx","webpack://esm-ohri-hiv-app/./src/pages/hts/encounters-list/ohri-form-view.component.tsx","webpack://esm-ohri-hiv-app/./src/components/loading/loading.component.scss","webpack://esm-ohri-hiv-app/./src/components/patient-banner/patient-banner.scss","webpack://esm-ohri-hiv-app/./src/forms/components/inputs/_input.scss","webpack://esm-ohri-hiv-app/./src/forms/components/page/_page.scss","webpack://esm-ohri-hiv-app/./src/forms/components/section/ohri-form-section.scss","webpack://esm-ohri-hiv-app/./src/forms/components/sidebar/ohri-form-sidebar.component.scss","webpack://esm-ohri-hiv-app/./src/forms/ohri-form.scss","webpack://esm-ohri-hiv-app//Users/larslemos/Documents/DEVELOPMENT/OPENMRS/openmrs-esm-ohri/node_modules/moment/locale|sync|/^\\.\\/.*$/"],"sourcesContent":["import { openmrsFetch } from '@openmrs/esm-framework';\nimport moment from 'moment';\nimport { getObsFromEncounter } from '../components/encounter-list/encounter-list.component';\nimport {\n  finalHIVCodeConcept,\n  finalPositiveHIVValueConcept,\n  computedHIV_StatusConcept,\n  encounterRepresentation,\n  covidOutcomeUUID,\n  covid_Assessment_EncounterUUID,\n} from '../constants';\n\nconst BASE_WS_API_URL = '/ws/rest/v1/';\nconst BASE_FHIR_API_URL = '/ws/fhir2/R4/';\n\nexport function fetchLastVisit(uuid: string) {\n  return openmrsFetch(`/ws/fhir2/R4/Encounter?patient=${uuid}&_sort=-date&_count=1`);\n}\n\nexport function fetchPatientList(offSet: number = 1, pageSize: number = 10) {\n  return openmrsFetch(`/ws/fhir2/R4/Patient?_getpagesoffset=${offSet}&_count=${pageSize}`);\n}\n\nexport function fetchTodayClients() {\n  let date = moment().format('YYYY-MM-DD');\n  return openmrsFetch(`/ws/fhir2/R4/Encounter?date=${date}`).then(({ data }) => {\n    if (data.entry?.length) {\n      return cleanDuplicatePatientReferences(data);\n    }\n    return [];\n  });\n}\n\nexport function fetchPatientsFromObservationCodeConcept(\n  codeConcept: string,\n  valueConcept?: string,\n  cutOffDays?: number,\n) {\n  let endDate = moment().format('YYYY-MM-DD');\n  let startDate = moment()\n    .subtract(cutOffDays, 'days')\n    .format('YYYY-MM-DD');\n\n  return openmrsFetch(\n    `/ws/fhir2/R4/Observation?code=${codeConcept}${valueConcept ? `&value-concept=${valueConcept}` : ''}${\n      cutOffDays ? `&_lastUpdated=ge${startDate}&_lastUpdated=le${endDate}` : ''\n    }`,\n  ).then(({ data }) => {\n    if (data.entry?.length) {\n      return cleanDuplicatePatientReferences(data);\n    }\n    return [];\n  });\n}\n\nfunction cleanDuplicatePatientReferences(data) {\n  let patientRefs = data.entry.map(enc => {\n    return enc.resource.subject.reference;\n  });\n  patientRefs = new Set([...patientRefs]);\n  patientRefs = Array.from(patientRefs);\n  return Promise.all(\n    patientRefs.map(ref => {\n      return openmrsFetch(BASE_FHIR_API_URL + ref);\n    }),\n  );\n}\n\nexport function performPatientSearch(query, objectVersion) {\n  return openmrsFetch(`${BASE_WS_API_URL}/patient?q=${query}${objectVersion ? `&v=${objectVersion}` : ''}`, {\n    method: 'GET',\n  });\n}\n\nexport function getPatients(searchPhrase?: string, offset?: number, pageSize: number = 10) {\n  return openmrsFetch(\n    `/ws/fhir2/R4/Patient?_count=${pageSize}${searchPhrase ? `&name=${searchPhrase}` : ''}${\n      offset ? `&_getpagesoffset=${offset}` : ''\n    }`,\n    {\n      method: 'GET',\n    },\n  );\n}\n\nexport async function getCohort(cohortUuid: string, version?: string) {\n  const { data } = await openmrsFetch(\n    BASE_WS_API_URL + `cohortm/cohort/${cohortUuid}${version ? `?v=${version}` : ``}`,\n  );\n  data.cohortMembers = data.cohortMembers.filter(member => !member.voided);\n  return data;\n}\n\nexport async function getReportingCohort(cohortUuid: string, queryParams?: string[]) {\n  const params = queryParams ? queryParams.join('&') : '';\n  const url = params ? `reportingrest/cohort/${cohortUuid}?${params}` : `reportingrest/cohort/${cohortUuid}`;\n  const { data } = await openmrsFetch(BASE_WS_API_URL + url);\n  return data;\n}\n\nexport async function getReportingCohortMembers(cohortUuid: string, queryParams?: string[]) {\n  const params = queryParams ? queryParams.join('&') : '';\n  const url = params ? `reportingrest/cohort/${cohortUuid}?${params}` : `reportingrest/cohort/${cohortUuid}`;\n  const { data } = await openmrsFetch(BASE_WS_API_URL + url);\n  return Promise.all(\n    data.members.map(member => {\n      return openmrsFetch(BASE_WS_API_URL + `patient/${member.uuid}?v=full`);\n    }),\n  );\n}\n\nexport async function getCohorts(cohortTypeUuid?: string) {\n  const {\n    data: { results, error },\n  } = await openmrsFetch(\n    BASE_WS_API_URL +\n      `cohortm/cohort?v=custom:(uuid,name,voided)${cohortTypeUuid ? `&cohortType=${cohortTypeUuid}` : ''}`,\n  );\n  if (error) {\n    throw error;\n  }\n  return results.filter(cohort => !cohort.voided);\n}\n\nexport function addPatientToCohort(patientUuid: string, cohortUuid: string) {\n  return openmrsFetch(`${BASE_WS_API_URL}cohortm/cohortmember`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: {\n      patient: patientUuid,\n      cohort: cohortUuid,\n      startDate: new Date(),\n    },\n  });\n}\n\nexport function evictCohortMembership(membershipUuid: string) {\n  return openmrsFetch(`${BASE_WS_API_URL}cohortm/cohortmember/${membershipUuid}`, { method: 'DELETE' });\n}\n\nexport async function getPatientListsForPatient(patientUuid: string) {\n  const {\n    data: { results, error },\n  } = await openmrsFetch(`${BASE_WS_API_URL}cohortm/cohortmember?patient=${patientUuid}&v=full`);\n  if (error) {\n    throw error;\n  }\n  return results.filter(membership => !membership.voided);\n}\n\nexport function fetchPatientsFinalHIVStatus(patientUUID: string) {\n  return openmrsFetch(\n    `/ws/fhir2/R4/Observation?code=${finalHIVCodeConcept}&value-concept=${finalPositiveHIVValueConcept}&patient=${patientUUID}&_sort=-date&_count=1`,\n  ).then(({ data }) => {\n    if (data.entry?.length) {\n      return data.entry[0].resource.valueCodeableConcept.coding[0].display;\n    }\n    return 'Negative';\n  });\n}\n\nexport function fetchPatientObservationFromEncounter(\n  patientUUID: string,\n  encounterUUID: string,\n  observationCode: string,\n) {\n  return openmrsFetch(\n    `/ws/fhir2/R4/Observation?patient=${patientUUID}&encounter=${encounterUUID}&code=${observationCode}&_sort=-date&_count=1`,\n  );\n}\n\nexport function fetchPatientComputedConcept_HIV_Status(patientUUID: string) {\n  return openmrsFetch(\n    `/ws/fhir2/R4/Observation?code=${computedHIV_StatusConcept}&value-concept=${computedHIV_StatusConcept}&patient=${patientUUID}&_sort=-date&_count=1`,\n  ).then(({ data }) => {\n    if (data.entry?.length) {\n      return data.entry[0].resource.valueCodeableConcept.coding[0].display;\n    }\n    return 'Negative';\n  });\n}\n\n// TODO: the WS/REST Encounter resource doesn't support sorting, figure out a better approach ie. FHIR or Reporting\nexport function fetchPatientLastEncounter(patientUuid: string, encounterType) {\n  const query = `encounterType=${encounterType}&patient=${patientUuid}`;\n  return openmrsFetch(`/ws/rest/v1/encounter?${query}&v=${encounterRepresentation}`).then(({ data }) => {\n    if (data.results.length) {\n      return data.results[data.results.length - 1];\n    }\n\n    return null;\n  });\n}\n\nexport function fetchPatientCovidOutcome(patientUuid: string) {\n  //TODO: Continue logic to filter outcome\n  // const query = `encounterType=${covidOutcomeUUID}&patient=${patientUuid}`;\n  // return getObsFromEncounter(covid_Assessment_EncounterUUID, covidOutcomeUUID);\n  // });\n}\n\nexport function fetchConceptNameByUuid(conceptUuid: string) {\n  return openmrsFetch(`/ws/rest/v1/concept/${conceptUuid}/name?limit=1`).then(({ data }) => {\n    if (data.results.length) {\n      const concept = data.results[data.results.length - 1];\n      return concept.display;\n    }\n  });\n}\n","\n      import API from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./loading.component.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./loading.component.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport Loading from 'carbon-components-react/es/components/Loading';\nimport styles from './loading.component.scss';\n\nconst LoadingIcon: React.FC = () => (\n  <div className={styles['centerLoadingSVG']}>\n    <Loading description=\"Active loading indicator\" withOverlay={false} small />\n  </div>\n);\n\nexport default LoadingIcon;\n","\n      import API from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./patient-banner.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./patient-banner.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { ExtensionSlot } from '@openmrs/esm-framework';\nimport React from 'react';\nimport styles from './patient-banner.scss';\n\nexport const PatientBanner: React.FC<{ patient: any }> = ({ patient }) => {\n  return (\n    <div className={styles.patientBannerContainer}>\n      <ExtensionSlot\n        extensionSlotName=\"patient-header-slot\"\n        state={{\n          patient,\n          patientUuid: patient.id,\n        }}\n      />\n    </div>\n  );\n};\n","export const careSetting = '6f0c9a92-6f24-11e3-af88-005056821db0';\n\nexport const daysDurationUnit = {\n  uuid: '1072AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA',\n  display: 'Days',\n};\n\nexport const basePath = '${openmrsSpaBase}/patient/';\nexport const encounterRepresentation =\n  'custom:(uuid,encounterDatetime,location:(uuid,name),' +\n  'encounterProviders:(uuid,provider:(uuid,name)),' +\n  'obs:(uuid,obsDatetime,groupMembers,concept:(uuid,name:(uuid,name)),value:(uuid,name:(uuid,name),' +\n  'names:(uuid,conceptNameType,name))))';\n\n// Final HIV Test Result Concepts\nexport const finalHIVCodeConcept = 'e16b0068-b6a2-46b7-aba9-e3be00a7b4ab';\nexport const finalPositiveHIVValueConcept = '6378487b-584d-4422-a6a6-56c8830873ff';\nexport const computedHIV_StatusConcept = 'a5261998-c635-4e27-870c-e837faf6cf9a';\n\n// Linked to Care Concepts\nexport const linkedToCareCodeConcept = 'e8e8fe71-adbb-48e7-b531-589985094d30';\nexport const linkedToCareYesValueConcept = '1065AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\n\n// Cohorts\nexport const preTestCounsellingCohort = 'e4d801f0-e2fd-11eb-8212-7d7156e00a1f';\nexport const waitingForHIVTestCohort = 'cdee0abe-e471-11eb-8212-7d7156e00a1f';\nexport const postTestCounsellingCohort = '01af2130-e472-11eb-8212-7d7156e00a1f';\nexport const clientsEnrolledToCare = '51bec6f7-df43-426e-a83e-c1ae5501372f';\nexport const todayzAppointmentsCT = 'ccbcf6d8-77b7-44a5-bb43-d352478ea4e9';\n\n// COVID Cohorts\nexport const clientsAssessedForCovid = 'ec373b01-4ba3-488e-a322-9dd6a50cfdf7';\nexport const covidClientsWithPendingLabResults = '166aa2b1-ce55-4d16-9643-ca9d2e2694ea';\nexport const clientsWithoutCovidOutcomes = 'db6c4a18-28c6-423c-9da0-58d19e364a7f';\nexport const allCovidAssessments = 'ec373b01-4ba3-488e-a322-9dd6a50cfdf7';\nexport const covidVaccinatedClients = 'b5d52da9-10c2-43af-ae23-552acc5e445b';\nexport const covid19PositiveClients = '1523b1e5-b6d0-44fb-bd9e-c91bfefb4d1c';\n\n// COVID Concepts\nexport const dateSpecimenCollected = '159951AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const covidTestType = '069f6dfe-88c1-4a45-a894-0d99549c8718';\nexport const covidOutcome = 'a845f3e6-4432-4de4-9fff-37fa270b1a06';\nexport const rapidAntigenResultDate = 'af159c77-bc5d-46dd-90d9-bcbffb22267f';\nexport const pcrTestResultDate = '4a77ab44-0323-490e-96be-e168c0e5c9de';\nexport const finalCovid19Result = '5da5c21b-969f-41bd-9091-e40d4c707544';\n\n// Service Enrollment Concepts\nexport const careAndTreatmentEncounterType = '7e54cd64-f9c3-11eb-8e6a-57478ce139b0';\nexport const dateOfServiceEnrollmentConcept = '160555AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const patientTypeEnrollmentConcept = '83e40f2c-c316-43e6-a12e-20a338100281';\nexport const studyPopulationTypeConcept = '166432AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const dateOfHIVDiagnosisConcept = '160554AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\n\n// Clinical visit\nexport const clinicalVisitEncounterType = 'cb0a65a7-0587-477e-89b9-cf2fd144f1d4';\nexport const dateOfEncounterConcept = '163137AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const visitTypeConcept = '8a9809e9-8a0b-4e0e-b1f6-80b0cbbe361b';\nexport const regimenConcept = 'dfbe256e-30ba-4033-837a-2e8477f2e7cd';\nexport const expressCareProgramStatusConcept = '159832AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'; // differentiated Care Services\nexport const returnVisitDateConcept = '5096AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'; // Next Appointment Date\n\n// Encounter types\nexport const htsRetrospectiveEncounterType = '79c1f50f-f77d-42e2-ad2a-d29304dde2fe';\nexport const covidCaseAssessmentEncType = '253a43d3-c99e-415c-8b78-ee7d4d3c1d54';\n\n// HTS Retrospective\nexport const htsRetrospectiveType = '79c1f50f-f77d-42e2-ad2a-d29304dde2fe';\n\n// Covid Restrospective\n//   const covidEncounterUUID = '902839fa-f58c-44a1-95a4-dba62d7263f8'; // Covid Case Report\nexport const covid_Assessment_EncounterUUID = '253a43d3-c99e-415c-8b78-ee7d4d3c1d54';\nexport const covidReasonsForTestingConcep_UUID = 'ae46f4b1-c15d-4bba-ab41-b9157b82b0ce'; // Reasons for testing\nexport const covidTestTypeUUID = '069f6dfe-88c1-4a45-a894-0d99549c8718'; // SARS2-Cov2 Test Type\nexport const covidTestResultUUID = '3f4ee14b-b4ab-4597-9fe9-406883b63d76'; // Diagnostic PCR Result\nexport const covidOutcomeUUID = 'a845f3e6-4432-4de4-9fff-37fa270b1a06';\n\nexport const covidSpecimenCollectiDate_UUID = '159951AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'; // Date specimen collected\nexport const covidPatientStatusUUID = 'de3bc9b7-05b5-41b6-a38d-8d2eec646c4f'; // Client Health Status\n\nexport const covidTreatementOutConcept_UUID = 'a845f3e6-4432-4de4-9fff-37fa270b1a06';\nexport const covidSARS_TestResultConcept_UUID = '89feed9c-1dd9-477a-ab1c-86f5f75f6762';\n\n// Covid Assessment\nexport const covidSARS_TestResult_Name_UUID = '0961651c-d52e-41dd-957a-94b9ce08e4eb';\nexport const covidReasonsForTestingUUID = '5793ad0f-d726-4918-a1b5-f25f4fb2b857';\nexport const covidTreatmenOutConceptName_UUID = '28d43e48-3673-4671-a6b1-3ed45fdfcba6';\nexport const covidSpecimentTestDate_UUID = '499df97a-2a34-4562-946a-3c4d5608b67f';\nexport const covidTypeofTestConcept_UUID = '069f6dfe-88c1-4a45-a894-0d99549c8718';\nexport const covidSymptosConcept_UUID = '';\nexport const covidPresentSymptonsConcept_UUID = '244b0dc0-eb1b-46ae-b62a-f580345d4f46';\nexport const covidComorbidityPresentConcept_UUID = '166020AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const covidUnderComorbidityConcept_UUID = '0651869c-6e90-48d6-b25c-406270c76bee';\nexport const covidPresentSymptonsName_UUID = '12568215-ae1c-42ec-b7e8-8818d2761f46';\nexport const covidPatientStatusConcept_UUID = 'de3bc9b7-05b5-41b6-a38d-8d2eec646c4f';\n\n//Covid Lab Order\nexport const covidLabOrderDate_UUID = '162078AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const covidLabOrderEncounterType_UUID = 'a77d3e7f-5c8f-4074-a207-77a70e197b0c';\n\n//Covid Lab Results\nexport const covidSpecimenCollectionDate_UUID = '159951AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const covidLabResultsEncounterType_UUID = '253a43d3-c99e-415c-8b78-ee7d4d3c1d54';\nexport const covidSpecimentTypeConcept_UUID = 'ae127f82-1861-4165-ac81-8554e5a3aac4';\nexport const covidTestResultConcept_UUID = '161934AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const covidRapidTestResultDate_UUID = 'af159c77-bc5d-46dd-90d9-bcbffb22267f';\nexport const covidDiagnosticPcrResult_UUID = '3f4ee14b-b4ab-4597-9fe9-406883b63d76';\nexport const covidDiagnorticPcrResultDate_UUID = '4a77ab44-0323-490e-96be-e168c0e5c9de';\nexport const covidTestStatusConcept_UUID = '6681366c-2174-489a-b951-13a1404935bf';\n\n// Covid Vaccination\nexport const covidVaccinationEncounterUUID = '5b37ce7a-c55e-4226-bdc8-5af04025a6de';\nexport const covidVaccinationStatusUUID = '40cb816f-797b-4cb4-a9fb-2727b2373623'; // Has the patient been vaccinated\nexport const covidVaccinationStatusConcept_UUID = 'de3bc9b7-05b5-41b6-a38d-8d2eec646c4f'; // What is the patient status with regard to COVID-19?\nexport const covidVaccination1stDoseDateConcept_UUID = 'c85eb064-5ef7-4ac6-8e56-4749bd58df44'; // What is COVID-19 vaccination date (1st dose)?\nexport const covidVaccination2ndDoseDateConcept_UUID = '42ee7f5c-fdd3-48c1-8d3a-5c6e248e6cb9'; // What is COVID-19 vaccination date (2nd dose)?\nexport const covidVaccinationTypeConcept_UUID = 'a31d1148-bbcc-4ad6-a015-8359d66bcfdc'; // What COVID-19 vaccine was administered?\nexport const covidVaccinationAdministeredConcept_UUID = '1410AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'; // Which date COVID-19 vaccine was administered?\nexport const covidVaccinationNextVacinationDateConcept_UUID = '5096AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const covidVaccinationDoseAdmininstered_UUID = '97bf47f9-0ba7-4d00-99bd-8939cd586072';\n\n// HTS HIV\nexport const hivTestResultConceptUUID = 'e16b0068-b6a2-46b7-aba9-e3be00a7b4ab';\nexport const hivTestDateConceptUUID = '140414BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB';\n\n// HIV Lab Results\nexport const hivLabResultsEncounterType_UUID = ' 15272be5-ae9c-4278-a303-4b8907eae73b';\nexport const hivLabTestResultConcept_UUID = '';\nexport const hivReasonViralLoadRequest_UUID = '86cc0cfe-bace-4969-94b6-d139f4971d13';\nexport const hivReasonCD4Request_UUID = '759e89a6-3260-4aee-9922-86a6301bcff3';\nexport const hivDateViralLoadResult_UUID = '163281AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const hivDateViralLoadInterpretation_UUID = '686dc1b2-68b5-4024-b311-bd2f5e3ce394';\nexport const hivDateCD4Result_UUID = '159376AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const hivCD4Result_UUID = '657AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const hivCD4Count_UUID = '5497AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\n","export const HTSEncounterType = '30b849bd-c4f4-4254-a033-fe9cf01001d8';\nexport const ConceptTrue = 'cf82933b-3f3f-45e7-a5ab-5d31aaee3da3';\nexport const ConceptFalse = '488b58ff-64f5-4f8a-8979-fa79940b1594';\nexport const UnspecifiedValue = 'OHRI_UNSPECIFIED';\n","/**\n * Evaluates whether a value is truthy. This should be used when a string value is expected to parsed into a boolean ie.\n * ```bash\n *  'false' => false\n *  'true' => true\n * ```\n */\nexport function isTrue(value: string | boolean): boolean {\n  if (typeof value == 'boolean') {\n    return value;\n  }\n  if (typeof value == 'string') {\n    return value == 'true';\n  }\n  // TODO: throw an exception?\n  return !!value;\n}\n","import moment from 'moment';\nimport { ConceptFalse, ConceptTrue } from '../constants';\nimport { OHRIFormField, OHRIFormPage, OHRIFormSection } from '../types';\nimport { isEmpty as isValueEmpty } from '../validators/ohri-form-validator';\n\nexport interface FormNode {\n  value: OHRIFormPage | OHRIFormSection | OHRIFormField;\n  type: 'field' | 'page' | 'section';\n}\n\nexport interface ExpressionContext {\n  mode: 'enter' | 'edit' | 'view';\n  myValue?: any;\n}\n\nexport function evaluateExpression(\n  expression: string,\n  node: FormNode,\n  allFields: Array<OHRIFormField>,\n  allFieldValues: Record<string, any>,\n  context: ExpressionContext,\n): boolean {\n  const allFieldsKeys = allFields.map(f => f.id);\n  const parts = expression.trim().split(' ');\n  // setup runtime variables\n  const { mode, myValue } = context;\n\n  function isEmpty(value) {\n    if (allFieldsKeys.includes(value)) {\n      registerDependency(\n        node,\n        allFields.find(candidate => candidate.id == value),\n      );\n      return isValueEmpty(allFieldValues[value]);\n    }\n    return isValueEmpty(value);\n  }\n\n  function today() {\n    return new Date();\n  }\n\n  function includes(questionId, value) {\n    if (allFieldsKeys.includes(questionId)) {\n      registerDependency(\n        node,\n        allFields.find(candidate => candidate.id === questionId),\n      );\n      return allFieldValues[questionId]?.includes(value);\n    }\n    return false;\n  }\n\n  function isDateBefore(left: Date, right: string | Date, format?: string) {\n    let otherDate: any = right;\n    if (typeof right == 'string') {\n      otherDate = format ? moment(right, format, true).toDate() : moment(right, 'YYYY-MM-DD', true).toDate();\n    }\n    return left?.getTime() < otherDate.getTime();\n  }\n\n  parts.forEach((part, index) => {\n    if (index % 2 == 0) {\n      if (allFieldsKeys.includes(part)) {\n        const determinant = allFields.find(field => field.id === part);\n        registerDependency(node, determinant);\n        // prep eval variables\n        let determinantValue = allFieldValues[part];\n        if (determinant.questionOptions.rendering == 'toggle') {\n          determinantValue = determinantValue ? ConceptTrue : ConceptFalse;\n        }\n        if (typeof determinantValue == 'string') {\n          determinantValue = `'${determinantValue}'`;\n        }\n        const regx = new RegExp(part, 'g');\n        expression = expression.replace(regx, determinantValue);\n      }\n    }\n  });\n  try {\n    return eval(expression);\n  } catch (error) {\n    console.error(error);\n  }\n  return false;\n}\n\nfunction registerDependency(node: FormNode, determinant: OHRIFormField) {\n  switch (node.type) {\n    case 'page':\n      if (!determinant.pageDependants) {\n        determinant.pageDependants = new Set();\n      }\n      determinant.pageDependants.add(node.value.label);\n      break;\n    case 'section':\n      if (!determinant.sectionDependants) {\n        determinant.sectionDependants = new Set();\n      }\n      determinant.sectionDependants.add(node.value.label);\n    default:\n      if (!determinant.fieldDependants) {\n        determinant.fieldDependants = new Set();\n      }\n      determinant.fieldDependants.add(node.value['id']);\n  }\n}\n","import { FieldValidator, OHRIFormField } from '../types';\nimport { isTrue } from '../utils/boolean-utils';\n\nexport const fieldRequiredErrCode = 'field.required';\n\nexport const OHRIFieldValidator: FieldValidator = {\n  validate: (field: OHRIFormField, value: any) => {\n    if (field['submission']?.unspecified) {\n      return [];\n    }\n    if (isTrue(field.required) || isTrue(field.unspecified)) {\n      if (isEmpty(value)) {\n        return [{ errCode: fieldRequiredErrCode, errMessage: 'Field is mandatory' }];\n      }\n    }\n    return [];\n  },\n};\n\nexport function isEmpty(value: any): boolean {\n  if (value === undefined || value === null || value === '') {\n    return true;\n  }\n  if (typeof value == 'string' && !value?.trim()) {\n    return true;\n  }\n  if (Array.isArray(value) && !value.length) {\n    return true;\n  }\n  return false;\n}\n","\n      import API from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./ohri-form.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./ohri-form.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./ohri-form-sidebar.component.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./ohri-form-sidebar.component.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","export function scrollIntoView(viewId: string) {\n  document.getElementById(viewId).scrollIntoView({\n    behavior: 'smooth',\n    block: 'start',\n    inline: 'start',\n  });\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport styles from './ohri-form-sidebar.component.scss';\nimport { scrollIntoView } from '../../../utils/ohri-sidebar';\nimport { Button, Toggle } from 'carbon-components-react';\nimport { isEmpty } from '../../validators/ohri-form-validator';\n\nfunction OHRIFormSidebar({\n  scrollAblePages,\n  selectedPage,\n  mode,\n  onCancel,\n  handleClose,\n  values,\n  setValues,\n  allowUnspecifiedAll,\n  defaultPage,\n}) {\n  const [activeLink, setActiveLink] = useState(selectedPage);\n\n  useEffect(() => {\n    if (defaultPage && [...scrollAblePages].find(({ label, isHidden }) => label === defaultPage && !isHidden)) {\n      scrollIntoView(joinWord(defaultPage));\n    }\n  }, [defaultPage]);\n\n  const joinWord = value => {\n    return value.replace(/\\s/g, '');\n  };\n\n  const unspecifiedFields = useMemo(() => {\n    return (\n      Object.keys(values)\n        .filter(key => key.endsWith('-unspecified'))\n        // find parent control\n        .map(key => key.split('-unspecified')[0])\n        // factor-out those with values\n        .filter(key => isEmpty(values[key]))\n        // return the unspecified control keys\n        .map(key => `${key}-unspecified`)\n    );\n  }, [values]);\n\n  const handleClick = selected => {\n    const activeID = selected.replace(/\\s/g, '');\n    setActiveLink(selected);\n    scrollIntoView(activeID);\n  };\n\n  const markAllAsUnspecified = useCallback(\n    toggled => {\n      if (toggled) {\n        unspecifiedFields.forEach(field => {\n          values[field] = true;\n        });\n      } else {\n        unspecifiedFields.forEach(field => {\n          values[field] = false;\n        });\n      }\n      setValues(values);\n    },\n    [unspecifiedFields],\n  );\n  return (\n    <div className={styles.sidebar}>\n      {[...scrollAblePages].map((page, index) => {\n        return (\n          !page.isHidden && (\n            <div\n              aria-hidden=\"true\"\n              className={joinWord(page.label) === selectedPage ? styles.sidebarSectionActive : styles.sidebarSection}\n              key={index}\n              onClick={() => handleClick(page.label)}>\n              {/* eslint-disable-next-line no-console */}\n              <div className={styles.sidebarSectionLink}>{page.label}</div>\n            </div>\n          )\n        );\n      })}\n      <hr className={styles.sideBarHorizontalLine} />\n      <div className={styles.sidenavActions}>\n        {allowUnspecifiedAll && (\n          <div style={{ marginBottom: '.6rem' }}>\n            <Toggle\n              labelText=\"\"\n              id=\"auto-unspecifier\"\n              labelA=\"Unspecify All\"\n              labelB=\"Revert\"\n              onToggle={markAllAsUnspecified}\n            />\n          </div>\n        )}\n        {mode != 'view' && (\n          <Button style={{ marginBottom: '0.625rem', width: '11rem' }} type=\"submit\">\n            Save\n          </Button>\n        )}\n        <Button\n          style={{ width: '11rem' }}\n          kind=\"tertiary\"\n          onClick={() => {\n            onCancel && onCancel();\n            handleClose && handleClose();\n          }}>\n          {mode == 'view' ? 'Close' : 'Cancel'}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default OHRIFormSidebar;\n","import React from 'react';\nimport { SessionMode } from './types';\n\ntype OHRIFormContextProps = {\n  values: Record<string, any>;\n  setFieldValue: (field: string, value: any, shouldValidate?: boolean) => void;\n  setEncounterLocation: (value: any) => void;\n  obsGroupsToVoid: Array<any>;\n  setObsGroupsToVoid: (value: any) => void;\n  encounterContext: EncounterContext;\n  fields: any;\n};\n\nexport interface EncounterContext {\n  patient: any;\n  encounter: any;\n  location: any;\n  sessionMode: SessionMode;\n  date: Date;\n}\n\nexport const OHRIFormContext = React.createContext<OHRIFormContextProps | undefined>(undefined);\n","import { openmrsFetch, openmrsObservableFetch } from '@openmrs/esm-framework';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport function saveEncounter(abortController: AbortController, payload, encounterUuid?: string) {\n  let url = '/ws/rest/v1/encounter';\n  if (encounterUuid) {\n    url = url + `/${encounterUuid}`;\n  }\n  return openmrsFetch(url, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n    body: payload,\n    signal: abortController.signal,\n  });\n}\n\nexport function getConcept(conceptUuid: string, v: string): Observable<any> {\n  return openmrsObservableFetch(`/ws/rest/v1/concept/${conceptUuid}?v=${v}`).pipe(map(response => response['data']));\n}\n\nexport function getLocationsByTag(tag: string): Observable<{ uuid: string; display: string }[]> {\n  return openmrsObservableFetch(`/ws/rest/v1/location?tag=${tag}&v=custom:(uuid,display)`).pipe(\n    map(({ data }) => data['results']),\n  );\n}\n","\n      import API from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./_input.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./_input.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { Checkbox } from 'carbon-components-react';\nimport { useField } from 'formik';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport styles from '../_input.scss';\nimport { OHRIFieldValidator } from '../../../validators/ohri-form-validator';\nimport { OHRIFormField } from '../../../types';\nimport { isTrue } from '../../../utils/boolean-utils';\n\nexport const OHRIUnspecified: React.FC<{\n  question: OHRIFormField;\n}> = ({ question }) => {\n  const [field, meta] = useField(`${question.id}-unspecified`);\n  const { setFieldValue } = React.useContext(OHRIFormContext);\n  const [previouslyUnspecified, setPreviouslyUnspecified] = useState(false);\n\n  useEffect(() => {\n    if (field.value) {\n      setPreviouslyUnspecified(true);\n      question['submission'] = {\n        unspecified: true,\n        errors: [],\n      };\n      let emptyValue = null;\n      switch (question.questionOptions.rendering) {\n        case 'date':\n          emptyValue = '';\n          break;\n        case 'checkbox':\n          emptyValue = [];\n      }\n      setFieldValue(question.id, emptyValue);\n      question.value = null;\n    } else if (previouslyUnspecified && !question.value) {\n      question['submission'] = {\n        unspecified: false,\n        errors: OHRIFieldValidator.validate(question, null),\n      };\n    }\n  }, [field.value]);\n\n  useEffect(() => {\n    if (question.value) {\n      setFieldValue(`${question.id}-unspecified`, false);\n    }\n  }, [question.value]);\n\n  const handleOnChange = useCallback(value => {\n    setFieldValue(`${question.id}-unspecified`, value);\n  }, []);\n\n  return (\n    !question.isHidden &&\n    !isTrue(question.readonly) && (\n      <div className={styles.unspecified}>\n        <Checkbox\n          id={`${question.id}-unspcified`}\n          labelText=\"Unspecified\"\n          value=\"Unspecified\"\n          onChange={handleOnChange}\n          checked={field.value}\n          disabled={question.disabled}\n        />\n      </div>\n    )\n  );\n};\n","\n      import API from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./ohri-form-section.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./ohri-form-section.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useCallback, useState } from 'react';\nimport styles from './ohri-form-section.scss';\nimport { getFieldComponent, getHandler } from '../../registry/registry';\nimport { OHRIUnspecified } from '../inputs/unspecified/ohri-unspecified.component';\nimport { OHRIFormField } from '../../types';\nimport { isTrue } from '../../utils/boolean-utils';\n\nexport const getFieldControl = (question: OHRIFormField) => {\n  // Check if a concept wasn't provided\n  if (question.type == 'obs' && !question.questionOptions.concept) {\n    // Disable the control\n    question.disabled = true;\n    // Since we don't have a concept, just render a text input\n    return getFieldComponent('text');\n  }\n  return getFieldComponent(question.questionOptions.rendering);\n};\n\nexport const supportsUnspecified = question => {\n  return (\n    isTrue(question.unspecified) &&\n    question.questionOptions.rendering != 'toggle' &&\n    question.questionOptions.rendering != 'encounter-location'\n  );\n};\nconst OHRIFormSection = ({ fields, onFieldChange, sectionTitle, showTitle }) => {\n  return (\n    <div className={styles.sectionContainer}>\n      {fields.map((value, index) => {\n        const component = getFieldControl(value);\n        if (component) {\n          const qnFragment = React.createElement(component, {\n            question: value,\n            onChange: onFieldChange,\n            key: index,\n            handler: getHandler(value.type),\n          });\n\n          return supportsUnspecified(value) && value.questionOptions.rendering != 'group' ? (\n            <div className={styles.questionOverrides}>\n              {qnFragment}\n              <OHRIUnspecified question={value} />\n            </div>\n          ) : (\n            <div className={styles.questionOverrides}>{qnFragment}</div>\n          );\n        }\n      })}\n    </div>\n  );\n};\n\nexport default OHRIFormSection;\n","import { Column, Row } from 'carbon-components-react/lib/components/Grid';\nimport React from 'react';\nimport { getFieldComponent, getHandler } from '../../registry/registry';\nimport { OHRIFormFieldProps } from '../../types';\nimport { OHRIUnspecified } from '../inputs/unspecified/ohri-unspecified.component';\nimport styles from '../inputs/_input.scss';\nimport { getFieldControl, supportsUnspecified } from '../section/ohri-form-section.component';\nexport interface ObsGroupProps extends OHRIFormFieldProps {\n  deleteControl?: any;\n}\n\nexport const OHRIObsGroup: React.FC<ObsGroupProps> = ({ question, onChange, deleteControl }) => {\n  const groupContent = question.questions\n    .filter(groupMember => !groupMember.isHidden)\n    .map((groupMember, index) => {\n      const component = getFieldControl(groupMember);\n      if (component) {\n        const qnFragment = React.createElement(component, {\n          question: groupMember,\n          onChange: onChange,\n          key: index,\n          handler: getHandler(groupMember.type),\n        });\n        return (\n          <Column className={styles.obsGroupColumn}>\n            {supportsUnspecified(groupMember) ? (\n              <>\n                {qnFragment}\n                <OHRIUnspecified question={groupMember} />\n              </>\n            ) : (\n              qnFragment\n            )}\n          </Column>\n        );\n      }\n    });\n  if (groupContent) {\n    groupContent.push(deleteControl);\n  }\n  return <Row>{groupContent}</Row>;\n};\n","import { TooltipDefinition } from 'carbon-components-react';\nimport React from 'react';\nimport styles from '../inputs/_input.scss';\n\nexport const OHRILabel: React.FC<{ value: string; tooltipText?: string }> = ({ value, tooltipText }) => {\n  return (\n    <div className={styles.ohriLabel}>\n      <TooltipDefinition direction=\"bottom\" tabIndex={0} tooltipText={tooltipText}>\n        <span className=\"bx--label\">{value}</span>\n      </TooltipDefinition>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const OHRIValueEmpty = () => {\n  return (\n    <div>\n      <span style={{ fontSize: '.875rem', color: '#c6c6c6' }}>(Blank)</span>\n    </div>\n  );\n};\n\nexport const OHRIValueDisplay = ({ value }) => {\n  return (\n    <div>\n      <span style={{ fontSize: '.875rem' }}>{value}</span>\n    </div>\n  );\n};\n","import { fetchConceptNameByUuid } from '../../api/api';\nimport { ConceptFalse, ConceptTrue } from '../constants';\nimport { EncounterContext } from '../ohri-form-context';\nimport { getHandler } from '../registry/registry';\nimport { OHRIFormField, OHRIFormSection, SubmissionHandler } from '../types';\nimport { OHRIDefaultFieldValueValidator } from '../validators/default-value-validator';\nimport { isEmpty } from '../validators/ohri-form-validator';\n\nexport function cascadeVisibityToChildFields(\n  visibility: boolean,\n  section: OHRIFormSection,\n  allFields: Array<OHRIFormField>,\n) {\n  const candidateIds = section.questions.map(q => q.id);\n  allFields\n    .filter(field => candidateIds.includes(field.id))\n    .forEach(field => {\n      field.isParentHidden = visibility;\n    });\n}\n\nexport function inferInitialValueFromDefaultFieldValue(\n  field: OHRIFormField,\n  context: EncounterContext,\n  handler: SubmissionHandler,\n) {\n  if (field.questionOptions.rendering == 'toggle') {\n    return field.questionOptions.defaultValue == ConceptTrue;\n  }\n  // validate default value\n  if (!OHRIDefaultFieldValueValidator.validate(field, field.questionOptions.defaultValue).length) {\n    // construct observation\n    handler.handleFieldSubmission(field, field.questionOptions.defaultValue, context);\n    return field.questionOptions.defaultValue;\n  }\n}\n\nexport function getConceptNameAndUUID(conceptUuid: string) {\n  return fetchConceptNameByUuid(conceptUuid).then(conceptName => {\n    return `Concept Name: ${conceptName} \\n UUID: ${conceptUuid}`;\n  });\n}\n","import moment from 'moment';\nimport { FieldValidator, OHRIFormField } from '../types';\n\nexport const OHRIDefaultFieldValueValidator: FieldValidator = {\n  validate: (field: OHRIFormField, value: any) => {\n    const codedTypes = ['radio', 'checkbox', 'select', 'content-switcher'];\n    if (codedTypes.includes(field.questionOptions.rendering)) {\n      // check whether value exists in answers\n      if (!field.questionOptions.answers?.find(answer => answer.concept == value)) {\n        return [{ errCode: 'invalid.defaultValue', errMessage: 'Value not found in coded answers list' }];\n      }\n    }\n    if (field.questionOptions.rendering == 'date') {\n      // Check if value is a valid date value\n      if (!moment(value, moment.ISO_8601, true).isValid()) {\n        return [{ errCode: 'invalid.defaultValue', errMessage: `Invalid date value: '${value}'` }];\n      }\n    }\n    if (field.questionOptions.rendering == 'number') {\n      if (isNaN(value)) {\n        return [{ errCode: 'invalid.defaultValue', errMessage: `Invalid numerical  value: '${value}'` }];\n      }\n    }\n    return [];\n  },\n};\n","import { ButtonSet, Column, FormGroup } from 'carbon-components-react';\nimport Button from 'carbon-components-react/lib/components/Button';\nimport Row from 'carbon-components-react/lib/components/Grid/Row';\nimport { useFormikContext } from 'formik';\nimport { cloneDeep } from 'lodash';\nimport moment from 'moment';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { ConceptTrue } from '../../constants';\nimport { OHRIFormContext } from '../../ohri-form-context';\nimport { getConcept } from '../../ohri-form.resource';\nimport { getHandler } from '../../registry/registry';\nimport { OHRIFormField, OHRIFormFieldProps } from '../../types';\nimport { OHRIObsGroup } from '../group/ohri-obs-group.component';\nimport { TrashCan32, Add16 } from '@carbon/icons-react';\nimport { useLayoutType } from '@openmrs/esm-framework';\nimport styles from '../inputs/_input.scss';\n\nexport const getInitialValueFromObs = (field: OHRIFormField, obsGroup: any) => {\n  const rendering = field.questionOptions.rendering;\n  const obs = obsGroup.groupMembers.filter(o => o.concept.uuid == field.questionOptions.concept);\n  if (obs.length) {\n    field.value = obs[0];\n    if (rendering == 'radio' || rendering == 'content-switcher') {\n      getConcept(field.questionOptions.concept, 'custom:(uuid,display,datatype:(uuid,display,name))').subscribe(\n        result => {\n          if (result.datatype.name == 'Boolean') {\n            field.value.value = obs[0].value.uuid;\n          }\n        },\n      );\n    }\n    if (typeof obs[0].value == 'string' || typeof obs[0].value == 'number') {\n      return field.questionOptions.rendering == 'date' ? moment(obs[0].value).toDate() : obs[0].value;\n    }\n    if (field.questionOptions.rendering == 'checkbox') {\n      field.value = obs;\n      return field.value.map(o => o.value.uuid);\n    }\n    if (field.questionOptions.rendering == 'toggle') {\n      field.value.value = obs[0].value.uuid;\n      return obs[0].value == ConceptTrue;\n    }\n    return obs[0].value?.uuid;\n  }\n  return '';\n};\n\nexport const OHRIRepeat: React.FC<OHRIFormFieldProps> = ({ question, onChange }) => {\n  const [questions, setQuestions] = useState([question]);\n  const { fields, encounterContext, obsGroupsToVoid } = React.useContext(OHRIFormContext);\n  const { values, setValues } = useFormikContext();\n  const [counter, setCounter] = useState(0);\n  const viewPort = useLayoutType();\n\n  const rowWidth = useMemo(() => {\n    if (viewPort == 'phone' || viewPort == 'tablet') {\n      return '50rem';\n    }\n    return '90rem';\n  }, [viewPort]);\n\n  useEffect(() => {\n    if (encounterContext.encounter && !counter) {\n      const alreadyMappedGroup = question.value?.uuid;\n      const unMappedObsGroups = encounterContext.encounter.obs.filter(\n        obs => obs.concept.uuid === question.questionOptions.concept && obs.uuid != alreadyMappedGroup,\n      );\n      // create new fields and map them values\n      let tempCounter = counter;\n      unMappedObsGroups.forEach(obsGroup => {\n        tempCounter = tempCounter + 1;\n        handleAdd(tempCounter, obsGroup);\n      });\n      setCounter(tempCounter);\n    }\n  }, [values]);\n\n  useEffect(() => {\n    questions[0] = question;\n    setQuestions([...questions]);\n  }, [question]);\n\n  const handleAdd = (count: number, obsGroup?: any) => {\n    const idSuffix = count;\n    const next = cloneDeep(question);\n    next.value = obsGroup;\n    next.id = `${next.id}-${idSuffix}`;\n    next.questions.forEach(q => {\n      q.id = `${q.id}-${idSuffix}`;\n      q['groupId'] = next.id;\n      q.value = null;\n      let initialValue = obsGroup ? getInitialValueFromObs(q, obsGroup) : null;\n      values[`${q.id}`] = initialValue ? initialValue : q.questionOptions.rendering == 'checkbox' ? [] : '';\n      fields.push(q);\n    });\n    setValues(values);\n    fields.push(next);\n    questions.push(next);\n    setQuestions(questions);\n  };\n\n  const removeQuestion = (question: OHRIFormField) => {\n    if (question.value && question.value.uuid) {\n      // obs group should be voided\n      question.value['voided'] = true;\n      delete question.value.value;\n      obsGroupsToVoid.push(question.value);\n    }\n    setQuestions(questions.filter(q => q.id !== question.id));\n    // cleanup\n    const dueFields = [question.id, ...question.questions.map(q => q.id)];\n    dueFields.forEach(field => {\n      const index = fields.findIndex(f => f.id === field);\n      fields.splice(index, 1);\n      delete values[field];\n    });\n  };\n  const nodes = questions.map((question, index) => {\n    const deleteControl =\n      index !== 0 ? (\n        <Column style={{ paddingTop: '1.2rem', marginLeft: '.5rem' }}>\n          <Button\n            renderIcon={TrashCan32}\n            kind=\"danger--tertiary\"\n            onClick={() => removeQuestion(question)}\n            hasIconOnly\n          />\n        </Column>\n      ) : null;\n    return (\n      <>\n        <Row style={{ margin: '0', marginBottom: '1rem', marginTop: '1rem', width: rowWidth }}>\n          <OHRIObsGroup question={question} onChange={onChange} handler={getHandler('obsGroup')} />\n          {deleteControl}\n        </Row>\n      </>\n    );\n  });\n\n  nodes.push(\n    <Row>\n      <Column>\n        <Button\n          renderIcon={Add16}\n          kind=\"ghost\"\n          onClick={() => {\n            const nextCount = counter + 1;\n            handleAdd(nextCount, null);\n            setCounter(nextCount);\n          }}>\n          {question.questionOptions.repeatOptions?.addText || 'Add'}\n        </Button>\n      </Column>\n    </Row>,\n  );\n  return (\n    !question.isHidden && (\n      <div style={{ marginTop: '0.65rem', marginBottom: '2rem' }}>\n        <FormGroup legendText={question.label}>{nodes}</FormGroup>\n      </div>\n    )\n  );\n};\n","import moment from 'moment';\nimport { useContext } from 'react';\nimport { ConceptFalse, ConceptTrue } from '../constants';\nimport { EncounterContext, OHRIFormContext } from '../ohri-form-context';\nimport { getConcept } from '../ohri-form.resource';\nimport { OHRIFormField, SubmissionHandler } from '../types';\nimport { OHRIDefaultFieldValueValidator } from '../validators/default-value-validator';\nimport { isEmpty } from '../validators/ohri-form-validator';\n\n/**\n * Obs handler\n */\nexport const ObsSubmissionHandler: SubmissionHandler = {\n  handleFieldSubmission: (field: OHRIFormField, value: any, context: EncounterContext) => {\n    if (field.questionOptions.rendering == 'checkbox') {\n      return multiSelectObsHandler(field, value, context);\n    }\n    if (field.questionOptions.rendering == 'toggle') {\n      return constructObs(value, context, field);\n    }\n    if (field.value) {\n      if (context.sessionMode == 'edit' && !value) {\n        field.value.voided = true;\n      } else if (!value) {\n        field.value = undefined;\n      } else {\n        if (field.questionOptions.rendering == 'date') {\n          field.value.value = moment(value).format('YYYY-MM-DD HH:mm');\n        } else {\n          field.value.value = value;\n        }\n        field.value.voided = false;\n      }\n    } else {\n      if (field.questionOptions.rendering == 'date') {\n        field.value = constructObs(moment(value).format('YYYY-MM-DD HH:mm'), context, field);\n        return field.value;\n      }\n      field.value = constructObs(value, context, field);\n    }\n    return field.value;\n  },\n  getInitialValue: (encounter: any, field: OHRIFormField, allFormFields: Array<OHRIFormField>) => {\n    let obs = encounter.obs.find(o => o.concept.uuid == field.questionOptions.concept);\n    let parentField = null;\n    let obsGroup = null;\n    // If this field is a group member and the obs was picked from the encounters's top obs leaves,\n    // chances are high this obs wasn't captured as part of the obs group. return empty.\n    // this should be solved by tracking obs through `formFieldNamespace`.\n    if (obs && field['groupId']) {\n      return '';\n    }\n    if (!obs && field['groupId']) {\n      parentField = allFormFields.find(f => f.id == field['groupId']);\n      obsGroup = encounter.obs.find(o => o.concept.uuid == parentField.questionOptions.concept);\n      if (obsGroup) {\n        parentField.value = obsGroup;\n        obs = obsGroup.groupMembers?.find(o => o.concept.uuid == field.questionOptions.concept);\n      }\n    }\n    if (obs) {\n      const rendering = field.questionOptions.rendering;\n      field.value = obs;\n      if (rendering == 'radio' || rendering == 'content-switcher') {\n        getConcept(field.questionOptions.concept, 'custom:(uuid,display,datatype:(uuid,display,name))').subscribe(\n          result => {\n            if (result.datatype.name == 'Boolean') {\n              field.value.value = obs.value.uuid;\n            }\n          },\n        );\n      }\n      if (typeof obs.value == 'string' || typeof obs.value == 'number') {\n        if (field.questionOptions.rendering == 'date') {\n          field.value.value = moment(field.value.value).format('YYYY-MM-DD HH:mm');\n          return moment(obs.value).toDate();\n        }\n        return obs.value;\n      }\n      if (field.questionOptions.rendering == 'checkbox') {\n        field.value = encounter.obs.filter(o => o.concept.uuid == field.questionOptions.concept);\n        if (!field.value.length && field['groupId']) {\n          field.value = obsGroup.groupMembers.filter(o => o.concept.uuid == field.questionOptions.concept);\n        }\n        return field.value.map(o => o.value.uuid);\n      }\n      if (field.questionOptions.rendering == 'toggle') {\n        field.value.value = obs.value.uuid;\n        return obs.value == ConceptTrue;\n      }\n      return obs.value?.uuid;\n    }\n    return '';\n  },\n  getDisplayValue: (field: OHRIFormField, value: any) => {\n    const rendering = field.questionOptions.rendering;\n    if (!field.value) {\n      return null;\n    }\n    if (field.questionOptions.rendering == 'checkbox') {\n      return value.map(\n        chosenOption => field.questionOptions.answers.find(option => option.concept == chosenOption).label,\n      );\n    }\n    if (rendering == 'content-switcher' || rendering == 'select' || rendering == 'toggle') {\n      const concept = typeof field.value.value === 'object' ? field.value.value.uuid : field.value.value;\n      return field.questionOptions.answers.find(option => option.concept == concept).label;\n    }\n    if (rendering == 'radio') {\n      return field.questionOptions.answers.find(option => option.concept == value).label;\n    }\n    return value;\n  },\n};\n\n/**\n * Encounter location handler\n */\nexport const EncounterLocationSubmissionHandler: SubmissionHandler = {\n  handleFieldSubmission: (field: OHRIFormField, value: any, context: EncounterContext) => {\n    return null;\n  },\n  getInitialValue: (encounter: any, field: OHRIFormField) => {\n    return {\n      display: encounter.location.name,\n      uuid: encounter.location.uuid,\n    };\n  },\n  getDisplayValue: (field: OHRIFormField, value) => {\n    return value.display;\n  },\n};\n\n///////////////////////////////\n// Helpers\n//////////////////////////////\n\nconst constructObs = (value: any, context: EncounterContext, field: OHRIFormField) => {\n  return {\n    person: context.patient.id,\n    obsDatetime: context.date,\n    concept: field.questionOptions.concept,\n    location: context.location,\n    order: null,\n    groupMembers: [],\n    voided: false,\n    // formFieldNamespace: 'ohri-forms',\n    // formFieldPath: 'field-id',\n    value: value,\n  };\n};\n\nconst multiSelectObsHandler = (field: OHRIFormField, values: Array<string>, context: EncounterContext) => {\n  if (!field.value) {\n    field.value = [];\n  }\n  values.forEach(value => {\n    const obs = field.value.find(o => {\n      if (typeof o.value == 'string') {\n        return o.value == value;\n      }\n      return o.value.uuid == value;\n    });\n    if (obs && obs.voided) {\n      obs.voided = false;\n    } else {\n      obs || field.value.push(constructObs(value, context, field));\n    }\n  });\n\n  // void or remove unchecked options\n  field.questionOptions.answers\n    .filter(opt => !values.some(v => v == opt.concept))\n    .forEach(opt => {\n      const observations = field.value.filter(o => {\n        if (typeof o.value == 'string') {\n          return o.value == opt.concept;\n        }\n        return o.value.uuid == opt.concept;\n      });\n      if (!observations.length) {\n        return;\n      }\n      observations.forEach(obs => {\n        if (context.sessionMode == 'edit' && obs.uuid) {\n          obs.voided = true;\n        } else {\n          field.value = field.value.filter(o => o.value !== opt.concept);\n        }\n      });\n    });\n  return field.value;\n};\n","import React from 'react';\nimport { OHRIFormFieldProps } from '../../../types';\nimport ReactMarkdown from 'react-markdown';\n\nconst OHRIMarkdown: React.FC<OHRIFormFieldProps> = ({ question }) =>\n  !question.isHidden && <ReactMarkdown children={question.value.join('\\n')} />;\n\nexport default OHRIMarkdown;\n","import { FieldValidator, OHRIFormField } from '../types';\nimport { isTrue } from '../utils/boolean-utils';\nimport { OHRIFieldValidator } from './ohri-form-validator';\n\nexport const OHRIDateValidator: FieldValidator = {\n  validate: (field: OHRIFormField, value: Date, config: any) => {\n    const now = new Date();\n    const errors = !value ? OHRIFieldValidator.validate(field, value) : [];\n    if (errors.length) {\n      return errors;\n    }\n    if (value && !isTrue(config?.allowFutureDates)) {\n      return value.getTime() > now.getTime()\n        ? [{ errCode: 'value.invalid', errMessage: 'Future dates not allowed' }]\n        : [];\n    }\n    return [];\n  },\n};\n","import { FieldValidator, OHRIFormField } from '../types';\nimport { evaluateExpression, ExpressionContext } from '../utils/expression-runner';\n\ninterface JSExpressionValidatorConfig {\n  failsWhenExpression: string;\n  message: string;\n  fields: OHRIFormField[];\n  expressionContext: ExpressionContext;\n  values: Record<string, any>;\n}\n\nexport const OHRIJSExpressionValidator: FieldValidator = {\n  validate: function(field: OHRIFormField, value: any, config: JSExpressionValidatorConfig) {\n    config.expressionContext.myValue = value;\n    if (config.failsWhenExpression) {\n      return evaluateExpression(\n        config.failsWhenExpression,\n        { value: field, type: 'field' },\n        config.fields,\n        { ...config.values, [field.id]: value },\n        config.expressionContext,\n      )\n        ? [{ errCode: 'value.invalid', errMessage: config.message || 'Invalid value' }]\n        : [];\n    }\n    return [];\n  },\n};\n","import { OHRIObsGroup } from '../components/group/ohri-obs-group.component';\nimport { OHRIContentSwitcher } from '../components/inputs/content-switcher/ohri-content-switcher.component';\nimport OHRIDate from '../components/inputs/date/ohri-date.component';\nimport { OHRIEncounterLocationPicker } from '../components/inputs/location/ohri-encounter-location.component';\nimport { OHRIMultiSelect } from '../components/inputs/multi-select/ohri-multi-select.component';\nimport OHRINumber from '../components/inputs/number/ohri-number.component';\nimport OHRIRadio from '../components/inputs/radio/ohri-radio.component';\nimport OHRIDropdown from '../components/inputs/select/ohri-dropdown.component';\nimport OHRITextArea from '../components/inputs/text-area/ohri-text-area.component';\nimport OHRIText from '../components/inputs/text/ohri-text.component';\nimport OHRIToggle from '../components/inputs/toggle/ohri-toggle.component';\nimport { OHRIRepeat } from '../components/repeat/ohri-repeat.component';\nimport { OHRIFieldValidator } from '../validators/ohri-form-validator';\nimport { EncounterLocationSubmissionHandler, ObsSubmissionHandler } from '../submission-handlers/base-handlers';\nimport { FieldValidator, SubmissionHandler } from '../types';\nimport OHRIFixedValue from '../components/inputs/fixed-value/ohri-fixed-value.component';\nimport OHRIMarkdown from '../components/inputs/markdown/ohri-markdown.component';\nimport { OHRIDateValidator } from '../validators/ohri-date-validator';\nimport { OHRIJSExpressionValidator } from '../validators/ohri-js-expression-validator';\n\nconst baseFieldComponents: Array<RegistryItem> = [\n  {\n    id: 'OHRIText',\n    component: OHRIText,\n    type: 'text',\n  },\n  {\n    id: 'OHRIRadio',\n    component: OHRIRadio,\n    type: 'radio',\n  },\n  {\n    id: 'OHRIDate',\n    component: OHRIDate,\n    type: 'date',\n  },\n  {\n    id: 'OHRINumber',\n    component: OHRINumber,\n    type: 'number',\n  },\n  {\n    id: 'OHRIMultiSelect',\n    component: OHRIMultiSelect,\n    type: 'checkbox',\n  },\n  {\n    id: 'OHRIContentSwitcher',\n    component: OHRIContentSwitcher,\n    type: 'content-switcher',\n  },\n  {\n    id: 'OHRIEncounterLocationPicker',\n    component: OHRIEncounterLocationPicker,\n    type: 'encounter-location',\n  },\n  {\n    id: 'OHRIDropdown',\n    component: OHRIDropdown,\n    type: 'select',\n  },\n  {\n    id: 'OHRITextArea',\n    component: OHRITextArea,\n    type: 'textarea',\n  },\n  {\n    id: 'OHRIToggle',\n    component: OHRIToggle,\n    type: 'toggle',\n  },\n  {\n    id: 'OHRIObsGroup',\n    component: OHRIObsGroup,\n    type: 'group',\n  },\n  {\n    id: 'OHRIRepeat',\n    component: OHRIRepeat,\n    type: 'repeating',\n  },\n  {\n    id: 'OHRIFixedValue',\n    component: OHRIFixedValue,\n    type: 'fixed-value',\n  },\n  {\n    id: 'OHRIMarkdown',\n    component: OHRIMarkdown,\n    type: 'markdown',\n  },\n];\n\nconst baseHandlers: Array<RegistryItem> = [\n  {\n    id: 'ObsSubmissionHandler',\n    component: ObsSubmissionHandler,\n    type: 'obs',\n  },\n  {\n    id: 'ObsGroupHandler',\n    component: ObsSubmissionHandler,\n    type: 'obsGroup',\n  },\n  {\n    id: 'EncounterLocationSubmissionHandler',\n    component: EncounterLocationSubmissionHandler,\n    type: 'encounterLocation',\n  },\n];\n\nconst fieldValidators: Array<ValidatorRegistryItem> = [\n  {\n    id: 'OHRIBaseValidator',\n    component: OHRIFieldValidator,\n  },\n  {\n    id: 'date',\n    component: OHRIDateValidator,\n  },\n  {\n    id: 'js_expression',\n    component: OHRIJSExpressionValidator,\n  },\n];\n\nexport const getFieldComponent = renderType => {\n  return baseFieldComponents.find(item => item.type == renderType)?.component;\n};\n\nexport function getHandler(type: string): SubmissionHandler {\n  return baseHandlers.find(handler => handler.type == type)?.component;\n}\n\nexport function addHandler(handler: RegistryItem) {\n  baseHandlers.push(handler);\n}\n\nexport function addFieldComponent(fieldComponent: RegistryItem) {\n  baseFieldComponents.push(fieldComponent);\n}\n\nexport function addvalidator(validator: ValidatorRegistryItem) {\n  if (validator) {\n    fieldValidators.push(validator);\n  }\n}\n\nexport function getValidator(id: string): FieldValidator {\n  return fieldValidators.find(validator => validator.id == id)?.component || fieldValidators[0].component;\n}\n\nexport interface RegistryItem {\n  id: string;\n  component: any;\n  type?: string;\n}\n\ninterface ValidatorRegistryItem extends RegistryItem {\n  component: FieldValidator;\n}\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { TextInput } from 'carbon-components-react';\nimport { OHRIFormFieldProps } from '../../../types';\nimport styles from '../_input.scss';\nimport { useField } from 'formik';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport { OHRILabel } from '../../label/ohri-label.component';\nimport { OHRIValueEmpty, OHRIValueDisplay } from '../../value/ohri-value.component';\nimport { fieldRequiredErrCode, OHRIFieldValidator } from '../../../validators/ohri-form-validator';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { getConceptNameAndUUID } from '../../../utils/ohri-form-helper';\n\nconst OHRIText: React.FC<OHRIFormFieldProps> = ({ question, onChange, handler }) => {\n  const [field, meta] = useField(question.id);\n  const { setFieldValue, encounterContext } = React.useContext(OHRIFormContext);\n  const [previousValue, setPreviousValue] = useState();\n  const [errors, setErrors] = useState([]);\n  const [conceptName, setConceptName] = useState('Loading...');\n  const isFieldRequiredError = useMemo(() => errors[0]?.errCode == fieldRequiredErrCode, [errors]);\n\n  useEffect(() => {\n    if (question['submission']?.errors) {\n      setErrors(question['submission']?.errors);\n    }\n  }, [question['submission']]);\n\n  field.onBlur = () => {\n    if (field.value && question.unspecified) {\n      setFieldValue(`${question.id}-unspecified`, false);\n    }\n    if (previousValue !== field.value) {\n      onChange(question.id, field.value, setErrors);\n      question.value = handler.handleFieldSubmission(question, field.value, encounterContext);\n    }\n  };\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRILabel value={question.label} tooltipText={conceptName} />\n      {field.value ? <OHRIValueDisplay value={field.value} /> : <OHRIValueEmpty />}\n    </div>\n  ) : (\n    !question.isHidden && (\n      <div className={styles.formField}>\n        <div\n          className={\n            isFieldRequiredError ? `${styles.textInputOverrides} ${styles.errorLabel}` : styles.textInputOverrides\n          }>\n          <TextInput\n            {...field}\n            id={question.id}\n            labelText={question.label}\n            name={question.id}\n            value={field.value || ''}\n            onFocus={() => setPreviousValue(field.value)}\n            disabled={question.disabled}\n            invalid={!isFieldRequiredError && errors.length > 0}\n            invalidText={errors.length && errors[0].errMessage}\n          />\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default OHRIText;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { FormGroup, RadioButtonGroup, RadioButton } from 'carbon-components-react';\nimport { OHRIFormFieldProps } from '../../../types';\nimport { useField } from 'formik';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport { OHRILabel } from '../../label/ohri-label.component';\nimport { OHRIValueEmpty, OHRIValueDisplay } from '../../value/ohri-value.component';\nimport styles from '../_input.scss';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { getConceptNameAndUUID } from '../../../utils/ohri-form-helper';\nimport { fieldRequiredErrCode } from '../../../validators/ohri-form-validator';\n\nconst OHRIRadio: React.FC<OHRIFormFieldProps> = ({ question, onChange, handler }) => {\n  const [field, meta] = useField(question.id);\n  const { setFieldValue, encounterContext } = React.useContext(OHRIFormContext);\n  const [errors, setErrors] = useState([]);\n  const [conceptName, setConceptName] = useState('Loading...');\n  const isFieldRequiredError = useMemo(() => errors[0]?.errCode == fieldRequiredErrCode, [errors]);\n\n  useEffect(() => {\n    if (question['submission']?.errors) {\n      setErrors(question['submission']?.errors);\n    }\n  }, [question['submission']]);\n\n  const handleChange = value => {\n    setFieldValue(question.id, value);\n    onChange(question.id, value, setErrors);\n    question.value = handler.handleFieldSubmission(question, value, encounterContext);\n  };\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRILabel value={question.label} tooltipText={conceptName} />\n      {field.value ? <OHRIValueDisplay value={handler.getDisplayValue(question, field.value)} /> : <OHRIValueEmpty />}\n    </div>\n  ) : (\n    !question.isHidden && (\n      <FormGroup\n        style={{ paddingBottom: '1rem' }}\n        legendText={question.label}\n        className={isFieldRequiredError && styles.errorLegend}\n        disabled={question.disabled}\n        invalid={!isFieldRequiredError && errors.length > 0}>\n        <RadioButtonGroup\n          defaultSelected=\"default-selected\"\n          name={question.id}\n          valueSelected={field.value}\n          onChange={handleChange}\n          orientation=\"vertical\">\n          {question.questionOptions.answers.map((answer, index) => {\n            return (\n              <RadioButton\n                id={`${question.id}-${answer.label}`}\n                labelText={answer.label}\n                value={answer.concept}\n                key={index}\n              />\n            );\n          })}\n        </RadioButtonGroup>\n        {!isFieldRequiredError && errors?.length > 0 && (\n          <div className={styles.errorLabel}>\n            <div className={`bx--form-requirement`}>{errors[0].errMessage}</div>\n          </div>\n        )}\n      </FormGroup>\n    )\n  );\n};\n\nexport default OHRIRadio;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { OHRIFormFieldProps } from '../../../types';\nimport { DatePicker, DatePickerInput } from 'carbon-components-react';\nimport { useField } from 'formik';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport styles from '../_input.scss';\nimport { OHRILabel } from '../../label/ohri-label.component';\nimport { OHRIValueEmpty, OHRIValueDisplay } from '../../value/ohri-value.component';\nimport { fieldRequiredErrCode, OHRIFieldValidator } from '../../../validators/ohri-form-validator';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { getConceptNameAndUUID } from '../../../utils/ohri-form-helper';\n\nconst OHRIDate: React.FC<OHRIFormFieldProps> = ({ question, onChange, handler }) => {\n  const [field, meta] = useField(question.id);\n  const { setFieldValue, encounterContext } = React.useContext(OHRIFormContext);\n  const [errors, setErrors] = useState([]);\n  const [conceptName, setConceptName] = useState('Loading...');\n  const isFieldRequiredError = useMemo(() => errors[0]?.errCode == fieldRequiredErrCode, [errors]);\n\n  useEffect(() => {\n    if (question['submission']?.errors) {\n      setErrors(question['submission']?.errors);\n    }\n  }, [question['submission']]);\n\n  const onDateChange = ([date]) => {\n    const refinedDate = date instanceof Date ? new Date(date.getTime() - date.getTimezoneOffset() * 60000) : date;\n    setFieldValue(question.id, refinedDate);\n    onChange(question.id, refinedDate, setErrors);\n    question.value = handler.handleFieldSubmission(question, refinedDate, encounterContext);\n  };\n  const { placeHolder, carbonDateformat } = useMemo(() => {\n    const formatObj = new Intl.DateTimeFormat(window.navigator.language).formatToParts(new Date());\n    const placeHolder = formatObj\n      .map(obj => {\n        switch (obj.type) {\n          case 'day':\n            return 'dd';\n          case 'month':\n            return 'mm';\n          case 'year':\n            return 'yyyy';\n          default:\n            return obj.value;\n        }\n      })\n      .join('');\n    const carbonDateformat = formatObj\n      .map(obj => {\n        switch (obj.type) {\n          case 'day':\n            return 'd';\n          case 'month':\n            return 'm';\n          case 'year':\n            return 'Y';\n          default:\n            return obj.value;\n        }\n      })\n      .join('');\n    return { placeHolder: placeHolder, carbonDateformat: carbonDateformat };\n  }, []);\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRILabel value={question.label} tooltipText={conceptName} />\n      {field.value ? (\n        <OHRIValueDisplay\n          value={field.value instanceof Date ? field.value.toLocaleDateString(window.navigator.language) : field.value}\n        />\n      ) : (\n        <OHRIValueEmpty />\n      )}\n    </div>\n  ) : (\n    !question.isHidden && (\n      <div className={styles.formField}>\n        <DatePicker\n          datePickerType=\"single\"\n          onChange={onDateChange}\n          className={`${styles.datePickerOverrides} ${isFieldRequiredError ? styles.errorLabel : ''} ${\n            question.disabled || isTrue(question.readonly) ? styles.disabledLabelOverrides : ''\n          }`}\n          dateFormat={carbonDateformat}>\n          <DatePickerInput\n            id={question.id}\n            placeholder={placeHolder}\n            labelText={question.label}\n            value={\n              field.value instanceof Date ? field.value.toLocaleDateString(window.navigator.language) : field.value\n            }\n            disabled={question.disabled}\n            invalid={!isFieldRequiredError && errors.length > 0}\n            invalidText={errors[0]?.errMessage}\n          />\n        </DatePicker>\n      </div>\n    )\n  );\n};\n\nexport default OHRIDate;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { NumberInput } from 'carbon-components-react';\nimport { OHRIFormFieldProps } from '../../../types';\nimport { useField } from 'formik';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport styles from '../_input.scss';\nimport { OHRILabel } from '../../label/ohri-label.component';\nimport { OHRIValueEmpty, OHRIValueDisplay } from '../../value/ohri-value.component';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { fieldRequiredErrCode } from '../../../validators/ohri-form-validator';\n\nconst OHRINumber: React.FC<OHRIFormFieldProps> = ({ question, onChange, handler }) => {\n  const [field, meta] = useField(question.id);\n  const { setFieldValue, encounterContext } = React.useContext(OHRIFormContext);\n  const [previousValue, setPreviousValue] = useState();\n  const [errors, setErrors] = useState([]);\n  const isFieldRequiredError = useMemo(() => errors[0]?.errCode == fieldRequiredErrCode, [errors]);\n\n  useEffect(() => {\n    if (question['submission']?.errors) {\n      setErrors(question['submission']?.errors);\n    }\n  }, [question['submission']]);\n\n  field.onBlur = () => {\n    if (field.value && question.unspecified) {\n      setFieldValue(`${question.id}-unspecified`, false);\n    }\n    if (previousValue !== field.value) {\n      onChange(question.id, field.value, setErrors);\n      question.value = handler.handleFieldSubmission(question, field.value, encounterContext);\n    }\n  };\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRILabel value={question.label} />\n      {field.value ? <OHRIValueDisplay value={field.value} /> : <OHRIValueEmpty />}\n    </div>\n  ) : (\n    !question.isHidden && (\n      <div className={styles.numberInputWrapper}>\n        <NumberInput\n          {...field}\n          id={question.id}\n          invalid={!isFieldRequiredError && errors.length > 0}\n          invalidText={errors[0]?.errMessage}\n          label={question.label}\n          max={question.questionOptions.max || undefined}\n          min={question.questionOptions.min || undefined}\n          name={question.id}\n          value={field.value || ''}\n          onFocus={() => setPreviousValue(field.value)}\n          allowEmpty={true}\n          size=\"xl\"\n          disabled={question.disabled}\n          className={isFieldRequiredError ? styles.errorLabel : ''}\n        />\n      </div>\n    )\n  );\n};\n\nexport default OHRINumber;\n","import { ListItem, MultiSelect, UnorderedList } from 'carbon-components-react';\nimport { useField } from 'formik';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport { OHRIFormFieldProps } from '../../../types';\nimport { OHRILabel } from '../../label/ohri-label.component';\nimport { OHRIValueEmpty } from '../../value/ohri-value.component';\nimport { useTranslation } from 'react-i18next';\nimport styles from '../_input.scss';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { getConceptNameAndUUID } from '../../../utils/ohri-form-helper';\nimport { fieldRequiredErrCode } from '../../../validators/ohri-form-validator';\n\nexport const OHRIMultiSelect: React.FC<OHRIFormFieldProps> = ({ question, onChange, handler }) => {\n  const { t } = useTranslation();\n  const [field, meta] = useField(question.id);\n  const { setFieldValue, encounterContext } = React.useContext(OHRIFormContext);\n  const [errors, setErrors] = useState([]);\n  const [counter, setCounter] = useState(0);\n  const [touched, setTouched] = useState(false);\n  const [conceptName, setConceptName] = useState('Loading...');\n  const isFieldRequiredError = useMemo(() => errors[0]?.errCode == fieldRequiredErrCode, [errors]);\n\n  useEffect(() => {\n    // Carbon's MultiSelect has issues related to not updating the component based on the `initialSelectedItems` prop\n    // this is an intermittent issue. As a temporary solution, were are forcing the component to re-render\n    if (field.value && field.value.length == 0) {\n      // chances are high the value was cleared\n      // force the Multiselect component to be re-mounted\n      setCounter(counter + 1);\n    } else if (!touched && question.value) {\n      setCounter(counter + 1);\n    }\n  }, [field.value]);\n\n  useEffect(() => {\n    if (question['submission']?.errors) {\n      setErrors(question['submission']?.errors);\n    }\n  }, [question['submission']]);\n\n  const questionItems = question.questionOptions.answers.map((option, index) => ({\n    id: `${question.id}-${option.concept}`,\n    concept: option.concept,\n    label: option.label,\n    key: index,\n  }));\n\n  const initiallySelectedQuestionItems = [];\n  questionItems.forEach(item => {\n    if (field.value?.includes(item.concept)) {\n      initiallySelectedQuestionItems.push(item);\n    }\n  });\n\n  const handleSelectItemsChange = ({ selectedItems }) => {\n    setTouched(true);\n    const value = selectedItems.map(selectedItem => selectedItem.concept);\n    setFieldValue(question.id, value);\n    onChange(question.id, value, setErrors);\n    question.value = handler.handleFieldSubmission(question, value, encounterContext);\n  };\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRILabel value={question.label} tooltipText={conceptName} />\n      {field.value?.length ? (\n        <UnorderedList style={{ marginLeft: '1rem' }}>\n          {handler.getDisplayValue(question, field.value).map(displayValue => (\n            <ListItem>{displayValue}</ListItem>\n          ))}\n        </UnorderedList>\n      ) : (\n        <OHRIValueEmpty />\n      )}\n    </div>\n  ) : (\n    !question.isHidden && (\n      <>\n        <div\n          className={\n            isFieldRequiredError\n              ? `${styles.multiselectOverride} ${styles.errorLabel}`\n              : `${styles.multiselectOverride}`\n          }>\n          <MultiSelect.Filterable\n            placeholder={t('filterItemsInMultiselect', 'Search...')}\n            onChange={handleSelectItemsChange}\n            id={question.label}\n            items={questionItems}\n            initialSelectedItems={initiallySelectedQuestionItems}\n            label={''}\n            titleText={question.label}\n            key={counter}\n            itemToString={item => (item ? item.label : ' ')}\n            disabled={question.disabled}\n            invalid={!isFieldRequiredError && errors.length > 0}\n            invalidText={errors[0]?.errMessage}\n          />\n        </div>\n        <div className={styles.formField}>\n          <OHRILabel value={'Selected Items'} />\n          {field.value?.length ? (\n            <UnorderedList style={{ marginLeft: '1rem' }}>\n              {handler.getDisplayValue(question, field.value)?.map(displayValue => displayValue + ', ')}\n            </UnorderedList>\n          ) : (\n            <OHRIValueEmpty />\n          )}\n        </div>\n      </>\n    )\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { FormGroup, ContentSwitcher, Switch } from 'carbon-components-react';\nimport { OHRIFormFieldProps } from '../../../types';\nimport styles from '../_input.scss';\nimport { useField } from 'formik';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport { OHRILabel } from '../../label/ohri-label.component';\nimport { OHRIValueEmpty, OHRIValueDisplay } from '../../value/ohri-value.component';\nimport { OHRIFieldValidator } from '../../../validators/ohri-form-validator';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { getConceptNameAndUUID } from '../../../utils/ohri-form-helper';\n\nexport const OHRIContentSwitcher: React.FC<OHRIFormFieldProps> = ({ question, onChange, handler }) => {\n  const [field, meta] = useField(question.id);\n  const { setFieldValue, encounterContext, values } = React.useContext(OHRIFormContext);\n  const [errors, setErrors] = useState([]);\n  const [conceptName, setConceptName] = useState('Loading...');\n\n  useEffect(() => {\n    if (question['submission']?.errors) {\n      setErrors(question['submission']?.errors);\n    }\n  }, [question['submission']]);\n\n  const handleChange = value => {\n    setFieldValue(question.id, value?.name);\n    onChange(question.id, value?.name, setErrors);\n    question.value = handler.handleFieldSubmission(question, value?.name, encounterContext);\n  };\n  const selectedIndex = useMemo(\n    () => question.questionOptions.answers.findIndex(option => option.concept == field.value),\n    [field.value],\n  );\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRILabel value={question.label} tooltipText={conceptName} />\n      {field.value ? <OHRIValueDisplay value={handler.getDisplayValue(question, field.value)} /> : <OHRIValueEmpty />}\n    </div>\n  ) : (\n    !question.isHidden && (\n      <div className={styles.textContainer}>\n        <FormGroup legendText={question.label} className={errors.length ? styles.errorLegend : ''}>\n          <ContentSwitcher onChange={handleChange} selectedIndex={selectedIndex} className={styles.selectedOption}>\n            {question.questionOptions.answers.map((option, index) => (\n              <Switch\n                className={selectedIndex === index ? styles.switchOverrides : styles.switchOverridesNone}\n                name={option.concept || option.value}\n                text={option.label}\n                key={index}\n                disabled={question.disabled}\n              />\n            ))}\n          </ContentSwitcher>\n        </FormGroup>\n      </div>\n    )\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Dropdown } from 'carbon-components-react';\nimport { OHRIFormField } from '../../../types';\nimport styles from '../_input.scss';\nimport { useField } from 'formik';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport { getLocationsByTag } from '../../../ohri-form.resource';\nimport { createErrorHandler } from '@openmrs/esm-framework';\nimport { OHRILabel } from '../../label/ohri-label.component';\nimport { OHRIValueDisplay, OHRIValueEmpty } from '../../value/ohri-value.component';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { getConceptNameAndUUID } from '../../../utils/ohri-form-helper';\n\nexport const OHRIEncounterLocationPicker: React.FC<{ question: OHRIFormField; onChange: any }> = ({ question }) => {\n  const [field, meta] = useField(question.id);\n  const { setEncounterLocation, setFieldValue, encounterContext } = React.useContext(OHRIFormContext);\n  const [locations, setLocations] = useState([]);\n  const [conceptName, setConceptName] = useState('Loading...');\n\n  useEffect(() => {\n    if (question.questionOptions.locationTag) {\n      getLocationsByTag(\n        question.questionOptions.locationTag\n          .trim()\n          .split(' ')\n          .join('%20'),\n      ).subscribe(\n        results => setLocations(results),\n        error => createErrorHandler(),\n      );\n    }\n  }, []);\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRILabel value={question.label} tooltipText={conceptName} />\n      {field.value ? <OHRIValueDisplay value={field.value.display} /> : <OHRIValueEmpty />}\n    </div>\n  ) : (\n    !question.isHidden && (\n      <div className={styles.formInputField}>\n        <Dropdown\n          id={question.id}\n          titleText={question.label}\n          label=\"Choose location\"\n          items={locations}\n          itemToString={item => item.display}\n          selectedItem={field.value}\n          onChange={({ selectedItem }) => {\n            setFieldValue(question.id, selectedItem);\n            setEncounterLocation(selectedItem);\n          }}\n          disabled={question.disabled}\n        />\n      </div>\n    )\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Dropdown } from 'carbon-components-react';\nimport { useField } from 'formik';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport { OHRIFormFieldProps } from '../../../types';\nimport { OHRILabel } from '../../label/ohri-label.component';\nimport { OHRIValueEmpty, OHRIValueDisplay } from '../../value/ohri-value.component';\nimport styles from '../_input.scss';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { getConceptNameAndUUID } from '../../../utils/ohri-form-helper';\nimport { fieldRequiredErrCode } from '../../../validators/ohri-form-validator';\n\nconst OHRIDropdown: React.FC<OHRIFormFieldProps> = ({ question, onChange, handler }) => {\n  const [field, meta] = useField(question.id);\n  const { setFieldValue, encounterContext } = React.useContext(OHRIFormContext);\n  const [items, setItems] = React.useState([]);\n  const [errors, setErrors] = useState([]);\n  const [conceptName, setConceptName] = useState('Loading...');\n  const isFieldRequiredError = useMemo(() => errors[0]?.errCode == fieldRequiredErrCode, [errors]);\n\n  useEffect(() => {\n    if (question['submission']?.errors) {\n      setErrors(question['submission']?.errors);\n    }\n  }, [question['submission']]);\n\n  const handleChange = value => {\n    setFieldValue(question.id, value);\n    onChange(question.id, value, setErrors);\n    question.value = handler.handleFieldSubmission(question, value, encounterContext);\n  };\n\n  const itemToString = item => {\n    const answer = question.questionOptions.answers.find(opt => (opt.value ? opt.value == item : opt.concept == item));\n    return answer?.label;\n  };\n  useEffect(() => {\n    setItems(question.questionOptions.answers.map(item => item.value || item.concept));\n  }, [question.questionOptions.answers]);\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRILabel value={question.label} tooltipText={conceptName} />\n      {field.value ? <OHRIValueDisplay value={handler.getDisplayValue(question, field.value)} /> : <OHRIValueEmpty />}\n    </div>\n  ) : (\n    !question.isHidden && (\n      <div className={styles.formInputField}>\n        <div\n          className={\n            isFieldRequiredError ? `${styles.errorLabel} ${styles.dropDownOverride}` : styles.dropDownOverride\n          }>\n          <Dropdown\n            id={question.id}\n            titleText={question.label}\n            label=\"Choose an option\"\n            items={items}\n            itemToString={itemToString}\n            selectedItem={field.value}\n            onChange={({ selectedItem }) => handleChange(selectedItem)}\n            disabled={question.disabled}\n            invalid={!isFieldRequiredError && errors.length > 0}\n            invalidText={errors.length && errors[0].errMessage}\n          />\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default OHRIDropdown;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { TextArea } from 'carbon-components-react';\nimport { OHRIFormFieldProps } from '../../../types';\nimport styles from '../_input.scss';\nimport { useField } from 'formik';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport { OHRILabel } from '../../label/ohri-label.component';\nimport { OHRIValueEmpty, OHRIValueDisplay } from '../../value/ohri-value.component';\nimport { fieldRequiredErrCode, OHRIFieldValidator } from '../../../validators/ohri-form-validator';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { getConceptNameAndUUID } from '../../../utils/ohri-form-helper';\n\nconst OHRITextArea: React.FC<OHRIFormFieldProps> = ({ question, onChange, handler }) => {\n  const [field, meta] = useField(question.id);\n  const { setFieldValue, encounterContext } = React.useContext(OHRIFormContext);\n  const [previousValue, setPreviousValue] = useState();\n  const [errors, setErrors] = useState([]);\n  const [conceptName, setConceptName] = useState('Loading...');\n  const isFieldRequiredError = useMemo(() => errors[0]?.errCode == fieldRequiredErrCode, [errors]);\n\n  useEffect(() => {\n    if (question['submission']?.errors) {\n      setErrors(question['submission']?.errors);\n    }\n  }, [question['submission']]);\n\n  field.onBlur = () => {\n    if (field.value && question.unspecified) {\n      setFieldValue(`${question.id}-unspecified`, false);\n    }\n    if (previousValue !== field.value) {\n      onChange(question.id, field.value, setErrors);\n      question.value = handler.handleFieldSubmission(question, field.value, encounterContext);\n    }\n  };\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRILabel value={question.label} tooltipText={conceptName} />\n      {field.value ? <OHRIValueDisplay value={field.value} /> : <OHRIValueEmpty />}\n    </div>\n  ) : (\n    !question.isHidden && (\n      <div className={styles.formField}>\n        <div\n          className={\n            isFieldRequiredError ? `${styles.textInputOverrides} ${styles.errorLabel}` : styles.textInputOverrides\n          }>\n          <TextArea\n            {...field}\n            id={question.id}\n            labelText={question.label}\n            name={question.id}\n            value={field.value || ''}\n            onFocus={() => setPreviousValue(field.value)}\n            rows={question.questionOptions.rows || 4}\n            disabled={question.disabled}\n            invalid={!isFieldRequiredError && errors.length > 0}\n            invalidText={errors.length && errors[0].errMessage}\n          />\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default OHRITextArea;\n","import React, { useEffect, useState } from 'react';\nimport { Toggle } from 'carbon-components-react';\nimport { OHRIFormFieldProps } from '../../../types';\nimport styles from '../_input.scss';\nimport { useField } from 'formik';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport { OHRILabel } from '../../label/ohri-label.component';\nimport { OHRIValueEmpty, OHRIValueDisplay } from '../../value/ohri-value.component';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { getConceptNameAndUUID } from '../../../utils/ohri-form-helper';\n\nconst OHRIToggle: React.FC<OHRIFormFieldProps> = ({ question, onChange, handler }) => {\n  const [field, meta] = useField(question.id);\n  const { setFieldValue, encounterContext, values } = React.useContext(OHRIFormContext);\n  const [conceptName, setConceptName] = useState('Loading...');\n\n  const handleChange = value => {\n    setFieldValue(question.id, value);\n    onChange(question.id, value, null);\n    question.value = handler.handleFieldSubmission(question, value, encounterContext);\n  };\n\n  useEffect(() => {\n    // The toogle input doesn't support blank values\n    // by default, the value should be false\n    if (!question.value && encounterContext.sessionMode == 'enter') {\n      question.value = handler.handleFieldSubmission(question, field.value, encounterContext);\n    }\n  }, []);\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRILabel value={question.label} tooltipText={conceptName} />\n      {field.value ? <OHRIValueDisplay value={handler.getDisplayValue(question, field.value)} /> : <OHRIValueEmpty />}\n    </div>\n  ) : (\n    !question.isHidden && (\n      <div className={styles.formField}>\n        <Toggle\n          labelText={question.label}\n          id={question.id}\n          labelA={question.questionOptions.toggleOptions.labelFalse}\n          labelB={question.questionOptions.toggleOptions.labelTrue}\n          onToggle={handleChange}\n          toggled={!!field.value}\n          disabled={question.disabled}\n        />\n      </div>\n    )\n  );\n};\n\nexport default OHRIToggle;\n","import React, { useEffect } from 'react';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport { OHRIFormFieldProps } from '../../../types';\n\nconst OHRIFixedValue: React.FC<OHRIFormFieldProps> = ({ question, handler }) => {\n  const { encounterContext } = React.useContext(OHRIFormContext);\n  useEffect(() => {\n    if (question.value && typeof question.value == 'string') {\n      const value = question.value;\n      delete question.value;\n      question.value = handler.handleFieldSubmission(question, value, encounterContext);\n    }\n  }, []);\n  // return (\n  //   !question.isHidden && (\n  //     <div className={styles.formFields}>\n  //       <OHRILabel value={question.label} />\n  //       {question.value ? <OHRIValueDisplay value={question.value?.value} /> : <OHRIValueEmpty />}\n  //     </div>\n  //   )\n  // );\n  return <></>;\n};\n\nexport default OHRIFixedValue;\n","\n      import API from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./_page.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./_page.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport styles from './_page.scss';\nimport OHRIFormSection from '../section/ohri-form-section.component';\nimport { Waypoint } from 'react-waypoint';\nimport { Accordion, AccordionItem } from 'carbon-components-react';\n\nfunction OHRIFormPage({ page, onFieldChange, setSelectedPage, isCollapsed }) {\n  let newLabel = page.label.replace(/\\s/g, '');\n\n  const handleEnter = elementID => {\n    setSelectedPage(elementID);\n  };\n\n  return (\n    <Waypoint onEnter={() => handleEnter(newLabel)} topOffset=\"10%\" bottomOffset=\"60%\">\n      <div id={newLabel} className={styles.pageContent}>\n        <div style={{}} className={styles.pageHeader}>\n          <p className={styles.pageTitle}>{page.label}</p>\n        </div>\n        <Accordion>\n          {/* <p className={styles.required}>All fields are required unless marked optional</p> */}\n          {page.sections.map((sec, index) => {\n            return (\n              <AccordionItem title={sec.label} open={isCollapsed} className={styles.sectionContent}>\n                <div className={styles.formSection} key={index}>\n                  <OHRIFormSection\n                    fields={sec.questions}\n                    showTitle={page.sections.length > 1}\n                    onFieldChange={onFieldChange}\n                    sectionTitle={sec.label}\n                    key={index}\n                  />\n                </div>\n              </AccordionItem>\n            );\n          })}\n        </Accordion>\n      </div>\n    </Waypoint>\n  );\n}\n\nexport default OHRIFormPage;\n","import { useEffect } from 'react';\n\n// Sometimes you want to run parent effects before those of the children. E.g. when setting\n// something up or binding document event listeners. By passing the effect to the first child it\n// will run before any effects by later children.\n// For details, see: https://github.com/facebook/react/issues/15281#issuecomment-781196823\nexport function InstantEffect({ effect }) {\n  useEffect(() => effect?.(), [effect]);\n  return null;\n}\n","import { openmrsObservableFetch } from '@openmrs/esm-framework';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { encounterRepresentation } from '../../../constants';\nimport { ConceptFalse, ConceptTrue } from '../../constants';\nimport { OHRIFormContext } from '../../ohri-form-context';\nimport { saveEncounter } from '../../ohri-form.resource';\nimport { getHandler, getValidator } from '../../registry/registry';\nimport {\n  EncounterDescriptor,\n  OHRIFormField,\n  OHRIFormPage as OHRIFormPageProps,\n  OHRIFormSchema,\n  OHRIFormSection,\n  SessionMode,\n} from '../../types';\nimport { cascadeVisibityToChildFields, inferInitialValueFromDefaultFieldValue } from '../../utils/ohri-form-helper';\nimport { isEmpty, isEmpty as isValueEmpty, OHRIFieldValidator } from '../../validators/ohri-form-validator';\nimport OHRIFormPage from '../page/ohri-form-page';\nimport { InstantEffect } from '../../utils/instant-effect';\nimport { FormSubmissionHandler } from '../../ohri-form.component';\nimport { isTrue } from '../../utils/boolean-utils';\nimport { evaluateExpression, FormNode } from '../../utils/expression-runner';\n\ninterface OHRIEncounterFormProps {\n  formJson: OHRIFormSchema;\n  patient: any;\n  encounterDate: Date;\n  provider: string;\n  location: { uuid: string; name: string };\n  values: Record<string, any>;\n  isCollapsed: boolean;\n  sessionMode: SessionMode;\n  scrollablePages: Set<OHRIFormPageProps>;\n  handlers: Map<string, FormSubmissionHandler>;\n  allInitialValues: Record<string, any>;\n  setAllInitialValues: (values: Record<string, any>) => void;\n  setScrollablePages: (pages: Set<OHRIFormPageProps>) => void;\n  setFieldValue: (field: string, value: any, shouldValidate?: boolean) => void;\n  setSelectedPage: (page: string) => void;\n}\n\nexport const OHRIEncounterForm: React.FC<OHRIEncounterFormProps> = ({\n  formJson,\n  patient,\n  encounterDate,\n  provider,\n  location,\n  values,\n  isCollapsed,\n  sessionMode,\n  scrollablePages,\n  setScrollablePages,\n  setFieldValue,\n  setSelectedPage,\n  handlers,\n  allInitialValues,\n  setAllInitialValues,\n}) => {\n  const [fields, setFields] = useState<Array<OHRIFormField>>([]);\n  const [encounterLocation, setEncounterLocation] = useState(null);\n  const [encounter, setEncounter] = useState<EncounterDescriptor>(null);\n  const [form, setForm] = useState<OHRIFormSchema>(formJson);\n  const [obsGroupsToVoid, setObsGroupsToVoid] = useState([]);\n  const [formInitialValues, setFormInitialValues] = useState({});\n\n  const addScrollablePages = useCallback(() => {\n    formJson.pages.forEach(page => {\n      if (!page.isSubform) {\n        scrollablePages.add(page);\n      }\n    });\n    return () => {\n      formJson.pages.forEach(page => {\n        if (!page.isSubform) {\n          scrollablePages.delete(page);\n        }\n      });\n    };\n  }, [scrollablePages, formJson]);\n\n  const encounterContext = {\n    patient: patient,\n    encounter: encounter,\n    location: location,\n    sessionMode: sessionMode || (form?.encounter ? 'edit' : 'enter'),\n    date: encounterDate,\n  };\n\n  useEffect(() => {\n    if (!encounterLocation) {\n      setEncounterLocation(location);\n    }\n  }, [location]);\n\n  useEffect(() => {\n    const allFormFields: Array<OHRIFormField> = [];\n    const tempInitVals = {};\n    form.pages.forEach(page =>\n      page.sections.forEach(section => {\n        section.questions.forEach(question => {\n          allFormFields.push(question);\n          if (question.type == 'obsGroup') {\n            question.questions.forEach(groupedField => {\n              // set group id\n              groupedField['groupId'] = question.id;\n              allFormFields.push(groupedField);\n            });\n          }\n        });\n      }),\n    );\n    // set Formik initial values\n    if (encounter) {\n      allFormFields.forEach(field => {\n        const handler = getHandler(field.type);\n        let existingVal = handler?.getInitialValue(encounter, field, allFormFields);\n        if (isEmpty(existingVal) && !isEmpty(field.questionOptions.defaultValue)) {\n          existingVal = inferInitialValueFromDefaultFieldValue(field, encounterContext, handler);\n        }\n        tempInitVals[field.id] = existingVal === null || existingVal === undefined ? '' : existingVal;\n        if (field.unspecified) {\n          tempInitVals[`${field.id}-unspecified`] = !!!existingVal;\n        }\n      });\n      setEncounterLocation(encounter.location);\n    } else {\n      const emptyValues = {\n        checkbox: [],\n        toggle: false,\n        default: '',\n      };\n      allFormFields.forEach(field => {\n        let value = null;\n        if (!isEmpty(field.questionOptions.defaultValue)) {\n          value = inferInitialValueFromDefaultFieldValue(field, encounterContext, getHandler(field.type));\n        }\n        if (!isEmpty(value)) {\n          tempInitVals[field.id] = value;\n        } else {\n          tempInitVals[field.id] =\n            emptyValues[field.questionOptions.rendering] != undefined\n              ? emptyValues[field.questionOptions.rendering]\n              : emptyValues.default;\n        }\n        if (field.unspecified) {\n          tempInitVals[`${field.id}-unspecified`] = false;\n        }\n      });\n    }\n    // prepare fields\n    setFields(\n      allFormFields.map(field => {\n        if (field.hide) {\n          evalHide({ value: field, type: 'field' }, allFormFields, tempInitVals);\n        } else {\n          field.isHidden = false;\n        }\n        if (typeof field.readonly == 'string' && field.readonly?.split(' ')?.length > 1) {\n          // needed to store the expression for further evaluations\n          field['readonlyExpression'] = field.readonly;\n          field.readonly = evaluateExpression(\n            field.readonly,\n            { value: field, type: 'field' },\n            allFormFields,\n            tempInitVals,\n            {\n              mode: sessionMode,\n            },\n          );\n        }\n        return field;\n      }),\n    );\n    form.pages.forEach(page => {\n      if (page.hide) {\n        evalHide({ value: page, type: 'page' }, allFormFields, tempInitVals);\n      } else {\n        page.isHidden = false;\n      }\n    });\n    setForm(form);\n    setFormInitialValues(tempInitVals);\n    setAllInitialValues({ ...allInitialValues, ...tempInitVals });\n  }, [encounter]);\n\n  useEffect(() => {\n    let subscription;\n    if (formJson.encounter && typeof formJson.encounter == 'string') {\n      subscription = openmrsObservableFetch<EncounterDescriptor>(\n        `/ws/rest/v1/encounter/${formJson.encounter}?v=${encounterRepresentation}`,\n      ).subscribe(({ data }) => setEncounter(data));\n    } else if (typeof formJson.encounter == 'object') {\n      setEncounter(formJson.encounter);\n    }\n    return () => subscription?.unsubscribe();\n  }, [formJson.encounter]);\n\n  const evalHide = (node, allFields: OHRIFormField[], allValues: Record<string, any>) => {\n    const { value, type } = node;\n    const isHidden = evaluateExpression(value['hide']?.hideWhenExpression, node, allFields, allValues, {\n      mode: sessionMode,\n    });\n    node.value.isHidden = isHidden;\n    // cascade visibility\n    if (type == 'page') {\n      value['sections'].forEach(section => {\n        section.isParentHidden = isHidden;\n        cascadeVisibityToChildFields(isHidden, section, allFields);\n      });\n    }\n    if (type == 'section') {\n      cascadeVisibityToChildFields(isHidden, value, allFields);\n    }\n  };\n\n  const addObs = useCallback((obsList: Array<any>, obs: any) => {\n    if (Array.isArray(obs)) {\n      obs.forEach(o => {\n        delete o.formFieldNamespace;\n        delete o.formFieldPath;\n        if (isValueEmpty(o.groupMembers)) {\n          delete o.groupMembers;\n        } else {\n          o.groupMembers.forEach(obsChild => {\n            delete obsChild.formFieldNamespace;\n            delete obsChild.formFieldPath;\n            if (isValueEmpty(obsChild.groupMembers)) {\n              delete obsChild.groupMembers;\n            }\n          });\n        }\n        obsList.push(o);\n      });\n    } else {\n      delete obs.formFieldNamespace;\n      delete obs.formFieldPath;\n      if (isValueEmpty(obs.groupMembers)) {\n        delete obs.groupMembers;\n      } else {\n        obs.groupMembers.forEach(obsChild => {\n          delete obsChild.formFieldNamespace;\n          delete obsChild.formFieldPath;\n          if (isValueEmpty(obsChild.groupMembers)) {\n            delete obsChild.groupMembers;\n          }\n        });\n      }\n      obsList.push(obs);\n    }\n  }, []);\n\n  const validate = useCallback(\n    values => {\n      let formHasErrors = false;\n      // handle field validation\n      fields\n        .filter(field => !field.isParentHidden && !field.disabled && !field.isHidden && !isTrue(field.readonly))\n        .filter(field => field['submission']?.unspecified != true)\n        .forEach(field => {\n          const errors = OHRIFieldValidator.validate(field, values[field.id]);\n          if (errors.length) {\n            field['submission'] = {\n              ...field['submission'],\n              errors: errors,\n            };\n            formHasErrors = true;\n            return;\n          }\n        });\n      return !formHasErrors;\n    },\n    [fields],\n  );\n\n  const handleFormSubmit = (values: Record<string, any>) => {\n    const obsForSubmission = [];\n    fields\n      .filter(field => field.value || field.type == 'obsGroup') // filter out fields with empty values except groups\n      .filter(field => !field.isParentHidden && !field.isHidden && (field.type == 'obs' || field.type == 'obsGroup'))\n      .filter(field => !field['groupId']) // filter out grouped obs\n      .forEach(field => {\n        if (field.type == 'obsGroup') {\n          const obsGroup = {\n            person: patient.id,\n            obsDatetime: encounterDate,\n            concept: field.questionOptions.concept,\n            location: encounterLocation,\n            order: null,\n            groupMembers: [],\n            uuid: field?.value?.uuid,\n            voided: false,\n          };\n          let hasValue = false;\n          field.questions.forEach(groupedField => {\n            if (groupedField.value) {\n              hasValue = true;\n              if (Array.isArray(groupedField.value)) {\n                obsGroup.groupMembers.push(...groupedField.value);\n              } else {\n                obsGroup.groupMembers.push(groupedField.value);\n              }\n            }\n          });\n          hasValue && addObs(obsForSubmission, obsGroup);\n        } else {\n          addObs(obsForSubmission, field.value);\n        }\n      });\n\n    // Add voided obs groups\n    obsGroupsToVoid.forEach(obs => addObs(obsForSubmission, obs));\n    let encounterForSubmission: EncounterDescriptor = {};\n    if (encounter) {\n      Object.assign(encounterForSubmission, encounter);\n      encounterForSubmission['location'] = encounterLocation.uuid;\n      // update encounter providers\n      const hasCurrentProvider =\n        encounterForSubmission['encounterProviders'].findIndex(encProvider => encProvider.provider.uuid == provider) !==\n        -1;\n      if (!hasCurrentProvider) {\n        encounterForSubmission['encounterProviders'] = [\n          ...encounterForSubmission.encounterProviders,\n          {\n            provider: provider,\n            encounterRole: '240b26f9-dd88-4172-823d-4a8bfeb7841f',\n          },\n        ];\n      }\n      encounterForSubmission['obs'] = obsForSubmission;\n    } else {\n      encounterForSubmission = {\n        patient: patient.id,\n        encounterDatetime: encounterDate,\n        location: encounterLocation.uuid,\n        encounterType: formJson.encounterType,\n        encounterProviders: [\n          {\n            provider: provider,\n            encounterRole: '240b26f9-dd88-4172-823d-4a8bfeb7841f',\n          },\n        ],\n        obs: obsForSubmission,\n      };\n    }\n    if (encounterForSubmission.obs?.length || encounterForSubmission.orders?.length) {\n      const ac = new AbortController();\n      return saveEncounter(ac, encounterForSubmission, encounter?.uuid);\n    }\n  };\n\n  const onFieldChange = (fieldName: string, value: any, setErrors) => {\n    const field = fields.find(field => field.id == fieldName);\n    const validators = Array.isArray(field.validators)\n      ? [{ type: 'OHRIBaseValidator' }, ...field.validators]\n      : [{ type: 'OHRIBaseValidator' }];\n    if (Array.isArray(field.validators)) {\n    }\n    // handle validation\n    const basevalidatorConfig = {\n      expressionContext: { mode: sessionMode },\n      values: { ...values, [fieldName]: value },\n      fields,\n    };\n    for (let validatorConfig of validators) {\n      const errors =\n        getValidator(validatorConfig.type)?.validate(field, value, { ...basevalidatorConfig, ...validatorConfig }) ||\n        [];\n      setErrors && setErrors(errors);\n      if (errors.length) {\n        return;\n      }\n    }\n    if (field.questionOptions.rendering == 'toggle') {\n      value = value ? ConceptTrue : ConceptFalse;\n    }\n    if (field.fieldDependants) {\n      field.fieldDependants.forEach(dep => {\n        const dependant = fields.find(f => f.id == dep);\n        evalHide({ value: dependant, type: 'field' }, fields, { ...values, [fieldName]: value });\n        if (dependant['readonlyExpression']) {\n          dependant.readonly = evaluateExpression(\n            dependant['readonlyExpression'],\n            { value: dependant, type: 'field' },\n            fields,\n            { ...values, [fieldName]: value },\n            {\n              mode: sessionMode,\n            },\n          );\n        }\n        let fields_temp = [...fields];\n        const index = fields_temp.findIndex(f => f.id == dep);\n        fields_temp[index] = dependant;\n        setFields(fields_temp);\n      });\n    }\n    if (field.pageDependants) {\n      field.pageDependants?.forEach(dep => {\n        const dependant = form.pages.find(f => f.label == dep);\n        evalHide({ value: dependant, type: 'page' }, fields, { ...values, [fieldName]: value });\n        let form_temp = form;\n        const index = form_temp.pages.findIndex(page => page.label == dep);\n        form_temp[index] = dependant;\n        setForm(form_temp);\n      });\n    }\n  };\n\n  // set handler\n  handlers.set(form.name, { validate: validate, submit: handleFormSubmit });\n\n  return (\n    <OHRIFormContext.Provider\n      value={{\n        values: values,\n        setFieldValue: setFieldValue,\n        setEncounterLocation: setEncounterLocation,\n        setObsGroupsToVoid: setObsGroupsToVoid,\n        obsGroupsToVoid: obsGroupsToVoid,\n        fields: fields,\n        encounterContext,\n      }}>\n      <InstantEffect effect={addScrollablePages} />\n      {form.pages.map((page, index) => {\n        if (isTrue(page.isHidden)) {\n          return null;\n        }\n        if (isTrue(page.isSubform) && page.subform?.form) {\n          if (sessionMode != 'enter' && !page.subform?.form.encounter) {\n            return null;\n          }\n          // filter out all nested subforms\n          page.subform.form.pages = page.subform.form.pages.filter(page => !isTrue(page.isSubform));\n          return (\n            <OHRIEncounterForm\n              key={index}\n              formJson={page.subform?.form}\n              patient={patient}\n              encounterDate={encounterDate}\n              provider={provider}\n              location={location}\n              values={values}\n              isCollapsed={isCollapsed}\n              sessionMode={sessionMode}\n              scrollablePages={scrollablePages}\n              setAllInitialValues={setAllInitialValues}\n              allInitialValues={allInitialValues}\n              setScrollablePages={setScrollablePages}\n              setFieldValue={setFieldValue}\n              setSelectedPage={setSelectedPage}\n              handlers={handlers}\n            />\n          );\n        }\n        return (\n          <OHRIFormPage\n            page={page}\n            onFieldChange={onFieldChange}\n            setSelectedPage={setSelectedPage}\n            isCollapsed={isCollapsed}\n          />\n        );\n      })}\n    </OHRIFormContext.Provider>\n  );\n};\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport styles from './ohri-form.scss';\nimport { Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  useCurrentPatient,\n  useSessionUser,\n  showToast,\n  attach,\n  getAsyncLifecycle,\n  registerExtension,\n  detach,\n} from '@openmrs/esm-framework';\nimport { useTranslation } from 'react-i18next';\nimport LoadingIcon from '../components/loading/loading.component';\nimport { OHRIFormSchema, SessionMode, OHRIFormPage as OHRIFormPageProps } from './types';\nimport OHRIFormSidebar from './components/sidebar/ohri-form-sidebar.component';\nimport { OHRIEncounterForm } from './components/encounter/ohri-encounter-form';\nimport { isTrue } from './utils/boolean-utils';\nimport { PatientBanner } from '../components/patient-banner/patient-banner.component';\n\ninterface OHRIFormProps {\n  formJson: OHRIFormSchema;\n  onSubmit?: any;\n  onCancel?: any;\n  encounterUuid?: string;\n  mode?: SessionMode;\n  handleClose?: any;\n  patientUUID?: string;\n}\n\nexport interface FormSubmissionHandler {\n  validate: (values) => boolean;\n  submit: (values) => Promise<any>;\n}\n\nconst OHRIForm: React.FC<OHRIFormProps> = ({\n  formJson,\n  encounterUuid,\n  mode,\n  onSubmit,\n  onCancel,\n  handleClose,\n  patientUUID,\n}) => {\n  const [currentProvider, setCurrentProvider] = useState(null);\n  const [location, setEncounterLocation] = useState(null);\n  const [, patient] = useCurrentPatient(patientUUID);\n  const session = useSessionUser();\n  const [initialValues, setInitialValues] = useState({});\n  const encDate = new Date();\n  const [scrollAblePages, setScrollablePages] = useState(new Set<OHRIFormPageProps>());\n  const [selectedPage, setSelectedPage] = useState('');\n  const [collapsed, setCollapsed] = useState(true);\n  const { t } = useTranslation();\n  const handlers = new Map<string, FormSubmissionHandler>();\n  const form = useMemo(() => {\n    const copy: OHRIFormSchema = JSON.parse(JSON.stringify(formJson));\n    if (encounterUuid && !copy.encounter) {\n      // Assign this to the parent form\n      copy.encounter = encounterUuid;\n    }\n    let i = copy.pages.length;\n    // let's loop backwards so that we splice in the opposite direction\n    while (i--) {\n      const page = copy.pages[i];\n      if (isTrue(page.isSubform) && !isTrue(page.isHidden) && page.subform?.form?.encounterType == copy.encounterType) {\n        copy.pages.splice(i, 1, ...page.subform.form.pages.filter(page => !isTrue(page.isSubform)));\n      }\n    }\n    return copy;\n  }, [encounterUuid]);\n\n  const sessionMode = useMemo(() => {\n    if (mode) {\n      return mode;\n    }\n    if (encounterUuid) {\n      return 'edit';\n    }\n    return 'enter';\n  }, [mode]);\n\n  useEffect(() => {\n    const extDetails = {\n      id: 'ohri-form-header-toggle-ext',\n      moduleName: '@openmrs/esm-ohri-app',\n      slot: 'patient-chart-workspace-header-slot',\n      load: getAsyncLifecycle(\n        () => import('./components/section-collapsible-toggle/ohri-section-collapsible-toggle.component'),\n        {\n          featureName: 'ohri-form-header-toggle',\n          moduleName: '@openmrs/esm-ohri-app',\n        },\n      ),\n      meta: {\n        handleCollapse: (value: boolean) => {\n          setCollapsed(value);\n        },\n      },\n    };\n    registerExtension(extDetails.id, extDetails);\n    attach('patient-chart-workspace-header-slot', extDetails.id);\n\n    return () => {\n      detach('patient-chart-workspace-header-slot', extDetails.id);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (session) {\n      if (!encounterUuid) {\n        setEncounterLocation(session.sessionLocation);\n      }\n      setCurrentProvider(session.currentProvider.uuid);\n    }\n  }, [session]);\n\n  const handleFormSubmit = (values: Record<string, any>) => {\n    // validate form and it's suforms\n    let isSubmitable = true;\n    handlers.forEach(handler => {\n      const result = handler?.validate?.(values);\n      if (!result) {\n        isSubmitable = false;\n      }\n    });\n    // do submit\n    if (isSubmitable) {\n      const submissions = [...handlers].map(([key, handler]) => {\n        return handler?.submit?.(values);\n      });\n      Promise.all(submissions).then(results => {\n        if (mode == 'edit') {\n          showToast({\n            description: t('updatedRecordDescription', 'The patient encounter was updated'),\n            title: t('updatedRecord', 'Record updated'),\n            kind: 'success',\n            critical: true,\n          });\n        } else {\n          showToast({\n            description: t('createdRecordDescription', 'A new encounter was created'),\n            title: t('createdRecord', 'Record created'),\n            kind: 'success',\n            critical: true,\n          });\n        }\n        onSubmit?.();\n      });\n    }\n  };\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={initialValues}\n      validationSchema={Yup.object({})}\n      onSubmit={(values, { setSubmitting }) => {\n        handleFormSubmit(values);\n        setSubmitting(false);\n      }}>\n      {props => (\n        <Form className={`bx--form no-padding ng-untouched ng-pristine ng-invalid ${styles.ohriForm}`}>\n          {!patient ? (\n            <LoadingIcon />\n          ) : (\n            <div className={styles.ohriFormContainer}>\n              <OHRIFormSidebar\n                scrollAblePages={scrollAblePages}\n                selectedPage={selectedPage}\n                mode={mode}\n                onCancel={onCancel}\n                handleClose={handleClose}\n                values={props.values}\n                setValues={props.setValues}\n                allowUnspecifiedAll={formJson.allowUnspecifiedAll}\n                defaultPage={formJson.defaultPage}\n              />\n              <div className={styles.formContent}>\n                <PatientBanner patient={patient} />\n                <div className={styles.formContentBody}>\n                  <OHRIEncounterForm\n                    formJson={form}\n                    patient={patient}\n                    encounterDate={encDate}\n                    provider={currentProvider}\n                    location={location}\n                    values={props.values}\n                    isCollapsed={collapsed}\n                    sessionMode={sessionMode}\n                    scrollablePages={scrollAblePages}\n                    setAllInitialValues={setInitialValues}\n                    allInitialValues={initialValues}\n                    setScrollablePages={setScrollablePages}\n                    setFieldValue={props.setFieldValue}\n                    setSelectedPage={setSelectedPage}\n                    handlers={handlers}\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default OHRIForm;\n","import React, { useCallback } from 'react';\nimport OHRIForm from '../../../forms/ohri-form.component';\nimport { SessionMode } from '../../../forms/types';\n\nconst OHRIFormView: React.FC<{ state: any; closeWorkspace: any; encounterUuid?: string; mode?: SessionMode }> = ({\n  state,\n  closeWorkspace,\n  encounterUuid,\n  mode,\n}) => {\n  const onFormSubmit = useCallback(() => {\n    if (state.updateParent) {\n      state.updateParent();\n    }\n    closeWorkspace();\n  }, []);\n  return (\n    <OHRIForm\n      formJson={state.formJson}\n      onCancel={closeWorkspace}\n      onSubmit={onFormSubmit}\n      encounterUuid={encounterUuid}\n      mode={mode}\n    />\n  );\n};\n\nexport default OHRIFormView;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".esm-ohri-hiv__loading-component__centerLoadingSVG___Vme8M{display:flex;width:100vw;height:100vh;justify-content:center;align-items:center}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"centerLoadingSVG\": \"esm-ohri-hiv__loading-component__centerLoadingSVG___Vme8M\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-light-01: #007d79}.esm-ohri-hiv__patient-banner__productiveHeading01___3IV1N{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.esm-ohri-hiv__patient-banner__productiveHeading02___Fe3xU{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.esm-ohri-hiv__patient-banner__productiveHeading03___3sHJI{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.esm-ohri-hiv__patient-banner__productiveHeading04___1nh3V{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.esm-ohri-hiv__patient-banner__productiveHeading05___2Q8eh{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}.esm-ohri-hiv__patient-banner__productiveHeading06___2OEos{font-size:2rem;font-weight:300;line-height:1.199;letter-spacing:0}.esm-ohri-hiv__patient-banner__bodyShort01___1St_2{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.esm-ohri-hiv__patient-banner__helperText01___3fF-O{font-size:.75rem;line-height:1.34;letter-spacing:.32px}.esm-ohri-hiv__patient-banner__bodyShort02___3XbWf{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.esm-ohri-hiv__patient-banner__bodyLong01___1xcA0{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.esm-ohri-hiv__patient-banner__bodyLong02___1B3y2{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}.esm-ohri-hiv__patient-banner__label01___3xCQ6{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.esm-ohri-hiv__patient-banner__text01___E6Jpi{color:#161616}.esm-ohri-hiv__patient-banner__text02___1FL_i{color:#525252}aside{background-color:#fff !important}.esm-ohri-hiv__patient-banner__patientBannerContainer___3eDTi{align-items:baseline;padding:0;width:inherit}.esm-ohri-hiv__patient-banner__patientBannerContainer___3eDTi>div{width:100%}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"productiveHeading01\": \"esm-ohri-hiv__patient-banner__productiveHeading01___3IV1N\",\n\t\"productiveHeading02\": \"esm-ohri-hiv__patient-banner__productiveHeading02___Fe3xU\",\n\t\"productiveHeading03\": \"esm-ohri-hiv__patient-banner__productiveHeading03___3sHJI\",\n\t\"productiveHeading04\": \"esm-ohri-hiv__patient-banner__productiveHeading04___1nh3V\",\n\t\"productiveHeading05\": \"esm-ohri-hiv__patient-banner__productiveHeading05___2Q8eh\",\n\t\"productiveHeading06\": \"esm-ohri-hiv__patient-banner__productiveHeading06___2OEos\",\n\t\"bodyShort01\": \"esm-ohri-hiv__patient-banner__bodyShort01___1St_2\",\n\t\"helperText01\": \"esm-ohri-hiv__patient-banner__helperText01___3fF-O\",\n\t\"bodyShort02\": \"esm-ohri-hiv__patient-banner__bodyShort02___3XbWf\",\n\t\"bodyLong01\": \"esm-ohri-hiv__patient-banner__bodyLong01___1xcA0\",\n\t\"bodyLong02\": \"esm-ohri-hiv__patient-banner__bodyLong02___1B3y2\",\n\t\"label01\": \"esm-ohri-hiv__patient-banner__label01___3xCQ6\",\n\t\"text01\": \"esm-ohri-hiv__patient-banner__text01___E6Jpi\",\n\t\"text02\": \"esm-ohri-hiv__patient-banner__text02___1FL_i\",\n\t\"patientBannerContainer\": \"esm-ohri-hiv__patient-banner__patientBannerContainer___3eDTi\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-light-01: #007d79}.esm-ohri-hiv___input__productiveHeading01___3efTB{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.esm-ohri-hiv___input__productiveHeading02___3JK0K{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.esm-ohri-hiv___input__productiveHeading03___oSZSr{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.esm-ohri-hiv___input__productiveHeading04___1k7Gz{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.esm-ohri-hiv___input__productiveHeading05___2DS9X{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}.esm-ohri-hiv___input__productiveHeading06___3nquH{font-size:2rem;font-weight:300;line-height:1.199;letter-spacing:0}.esm-ohri-hiv___input__bodyShort01___1-lOo{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.esm-ohri-hiv___input__helperText01___3mUe2{font-size:.75rem;line-height:1.34;letter-spacing:.32px}.esm-ohri-hiv___input__bodyShort02___1SQXu{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.esm-ohri-hiv___input__bodyLong01___1SogS{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.esm-ohri-hiv___input__bodyLong02___1Wtsy{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}.esm-ohri-hiv___input__label01___2tspH{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.esm-ohri-hiv___input__text01___1TD33{color:#161616}.esm-ohri-hiv___input__text02___34XWE{color:#525252}aside{background-color:#fff !important}.esm-ohri-hiv___input__formField___1AY8i,.esm-ohri-hiv___input__numberInputWrapper___3SPQH .bx--number,.esm-ohri-hiv___input__formInputField___xDdc2{padding-bottom:18px;margin-top:10px}.esm-ohri-hiv___input__formField___1AY8i>div>div>label,.esm-ohri-hiv___input__numberInputWrapper___3SPQH .bx--number>div>div>label,.esm-ohri-hiv___input__formInputField___xDdc2>div>div>label{color:#525252}.esm-ohri-hiv___input__ohriFormLabel___2K9Mo{font-size:.75rem}.esm-ohri-hiv___input__datePickerOverrides___gyecw input{width:22.313rem !important}.esm-ohri-hiv___input__disabledLabelOverrides___2vK-E label{color:#525252 !important}.esm-ohri-hiv___input__formInputField___xDdc2{width:auto}.esm-ohri-hiv___input__formInputField___xDdc2>div>div>label{max-width:auto}.esm-ohri-hiv___input__formInputField___xDdc2>div>div>div{width:22.313rem !important}.esm-ohri-hiv___input__multiselectOverride___3kgAo{width:auto;padding-bottom:15px}.esm-ohri-hiv___input__multiselectOverride___3kgAo>div>div{width:22.313rem !important}.esm-ohri-hiv___input__multiselectOverride___3kgAo>div div div input{border:0 !important;border-bottom:1px solid #8d8d8d !important}.esm-ohri-hiv___input__dropDownOverride___2wcnI>div div button{border-bottom:1px solid #8d8d8d !important}.esm-ohri-hiv___input__numberInputWrapper___3SPQH .bx--number{width:22.313rem;font-size:.875rem}.esm-ohri-hiv___input__textContainer___12KRx label{font-size:.875rem !important}.esm-ohri-hiv___input__selectedOption___SZu3V{border-radius:4px;width:15rem}.esm-ohri-hiv___input__selectedOption___SZu3V button{background-color:#f4f4f4}.esm-ohri-hiv___input__switchOverrides___3-ALO{background-color:#edf5ff !important;color:#0f62fe !important;padding:0 0 0 1rem;border:solid 1px #0f62fe !important}.esm-ohri-hiv___input__switchOverrides___3-ALO button:focus{border:none !important}.esm-ohri-hiv___input__selectedOption___SZu3V button:before{display:none !important}.esm-ohri-hiv___input__switchOverridesNone___nXV_C{background-color:#f4f4f4 !important;padding:0 0 0 1rem;border:solid 1px #a6c8ff !important}.esm-ohri-hiv___input__radioButton_ohri___76iRx input[type=radio]{opacity:0 !important;position:fixed;width:0}.esm-ohri-hiv___input__radioButton_ohri___76iRx label{display:inline-block;border:1px solid #a6c8ff;color:#525252;padding:.688rem 1rem;padding-right:3rem;border-radius:4px 0 0 4px;background-color:#f4f4f4}.esm-ohri-hiv___input__radioButton_ohri___76iRx label:last-child{margin-left:-5px;border-radius:0 4px 4px 0}.esm-ohri-hiv___input__radioButton_ohri___76iRx input[type=radio]:checked+label{color:#0f62fe;border-color:#0f62fe;background-color:#edf5ff}.esm-ohri-hiv___input__radioButton_ohri___76iRx>.esm-ohri-hiv___input__bx--radio-button-wrapper___Cimqv{margin-right:0rem !important}.esm-ohri-hiv___input__textInputOverrides___1IitC>div>div{width:22.313rem}.esm-ohri-hiv___input__unspecified___3XG-g{margin-top:-13px}.esm-ohri-hiv___input__unspecified___3XG-g>div label{font-size:12px;color:#525252;padding-bottom:1rem}.esm-ohri-hiv___input__errorLegend___27dMl legend,.esm-ohri-hiv___input__errorLabel___MB7pZ label{color:#da1e28 !important}.esm-ohri-hiv___input__unspecified___3XG-g>div label{font-size:12px;color:#525252}.esm-ohri-hiv___input__errorLabel___MB7pZ .bx--form-requirement{display:block;max-height:12.5rem;overflow:visible;font-weight:400;color:#da1e28}.esm-ohri-hiv___input__obsGroupColumn___1o697{max-width:18rem}.esm-ohri-hiv___input__obsGroupColumn___1o697>div{margin-top:0 !important}.esm-ohri-hiv___input__obsGroupColumn___1o697>div>div>div{max-width:18rem !important}.esm-ohri-hiv___input__obsGroupColumn___1o697>div>div>div>div{max-width:18rem !important}.esm-ohri-hiv___input__repeatContentWrapper___2-Vbg{margin-top:.65rem;margin-bottom:2rem}.esm-ohri-hiv___input__ohriLabel___10_7e{width:auto !important}.esm-ohri-hiv___input__ohriLabel___10_7e .bx--assistive-text{max-width:30rem !important;font-size:.75rem;white-space:pre-line !important}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"productiveHeading01\": \"esm-ohri-hiv___input__productiveHeading01___3efTB\",\n\t\"productiveHeading02\": \"esm-ohri-hiv___input__productiveHeading02___3JK0K\",\n\t\"productiveHeading03\": \"esm-ohri-hiv___input__productiveHeading03___oSZSr\",\n\t\"productiveHeading04\": \"esm-ohri-hiv___input__productiveHeading04___1k7Gz\",\n\t\"productiveHeading05\": \"esm-ohri-hiv___input__productiveHeading05___2DS9X\",\n\t\"productiveHeading06\": \"esm-ohri-hiv___input__productiveHeading06___3nquH\",\n\t\"bodyShort01\": \"esm-ohri-hiv___input__bodyShort01___1-lOo\",\n\t\"helperText01\": \"esm-ohri-hiv___input__helperText01___3mUe2\",\n\t\"bodyShort02\": \"esm-ohri-hiv___input__bodyShort02___1SQXu\",\n\t\"bodyLong01\": \"esm-ohri-hiv___input__bodyLong01___1SogS\",\n\t\"bodyLong02\": \"esm-ohri-hiv___input__bodyLong02___1Wtsy\",\n\t\"label01\": \"esm-ohri-hiv___input__label01___2tspH\",\n\t\"text01\": \"esm-ohri-hiv___input__text01___1TD33\",\n\t\"text02\": \"esm-ohri-hiv___input__text02___34XWE\",\n\t\"formField\": \"esm-ohri-hiv___input__formField___1AY8i\",\n\t\"numberInputWrapper\": \"esm-ohri-hiv___input__numberInputWrapper___3SPQH\",\n\t\"formInputField\": \"esm-ohri-hiv___input__formInputField___xDdc2\",\n\t\"ohriFormLabel\": \"esm-ohri-hiv___input__ohriFormLabel___2K9Mo\",\n\t\"datePickerOverrides\": \"esm-ohri-hiv___input__datePickerOverrides___gyecw\",\n\t\"disabledLabelOverrides\": \"esm-ohri-hiv___input__disabledLabelOverrides___2vK-E\",\n\t\"multiselectOverride\": \"esm-ohri-hiv___input__multiselectOverride___3kgAo\",\n\t\"dropDownOverride\": \"esm-ohri-hiv___input__dropDownOverride___2wcnI\",\n\t\"textContainer\": \"esm-ohri-hiv___input__textContainer___12KRx\",\n\t\"selectedOption\": \"esm-ohri-hiv___input__selectedOption___SZu3V\",\n\t\"switchOverrides\": \"esm-ohri-hiv___input__switchOverrides___3-ALO\",\n\t\"switchOverridesNone\": \"esm-ohri-hiv___input__switchOverridesNone___nXV_C\",\n\t\"radioButton_ohri\": \"esm-ohri-hiv___input__radioButton_ohri___76iRx\",\n\t\"bx--radio-button-wrapper\": \"esm-ohri-hiv___input__bx--radio-button-wrapper___Cimqv\",\n\t\"textInputOverrides\": \"esm-ohri-hiv___input__textInputOverrides___1IitC\",\n\t\"unspecified\": \"esm-ohri-hiv___input__unspecified___3XG-g\",\n\t\"errorLegend\": \"esm-ohri-hiv___input__errorLegend___27dMl\",\n\t\"errorLabel\": \"esm-ohri-hiv___input__errorLabel___MB7pZ\",\n\t\"obsGroupColumn\": \"esm-ohri-hiv___input__obsGroupColumn___1o697\",\n\t\"repeatContentWrapper\": \"esm-ohri-hiv___input__repeatContentWrapper___2-Vbg\",\n\t\"ohriLabel\": \"esm-ohri-hiv___input__ohriLabel___10_7e\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-light-01: #007d79}.esm-ohri-hiv___page__productiveHeading01___1I2AV{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.esm-ohri-hiv___page__productiveHeading02___2KNcV{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.esm-ohri-hiv___page__productiveHeading03___1YOvy{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.esm-ohri-hiv___page__productiveHeading04____JvMS{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.esm-ohri-hiv___page__productiveHeading05___3_pJW{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}.esm-ohri-hiv___page__productiveHeading06___rZ8Qw{font-size:2rem;font-weight:300;line-height:1.199;letter-spacing:0}.esm-ohri-hiv___page__bodyShort01___16s3G{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.esm-ohri-hiv___page__helperText01___2hLb3{font-size:.75rem;line-height:1.34;letter-spacing:.32px}.esm-ohri-hiv___page__bodyShort02___WkF8Q{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.esm-ohri-hiv___page__bodyLong01___3J0pi{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.esm-ohri-hiv___page__bodyLong02___22Cd3{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}.esm-ohri-hiv___page__label01___3K1me{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.esm-ohri-hiv___page__text01___2yS_a{color:#161616}.esm-ohri-hiv___page__text02___3x4Dc{color:#525252}aside{background-color:#fff !important}.esm-ohri-hiv___page__divider___1yvKR{background-color:rgba(107,104,104,.5);margin:25px 0}.esm-ohri-hiv___page__pageContent___3aDP7:last-child>hr{display:none}.esm-ohri-hiv___page__pageHeader___ojjH5{display:flex;flex-direction:row;margin:20px 0 20px 0}.esm-ohri-hiv___page__pageTitle___2VjsK{font-size:1.25rem;font-weight:600;line-height:1.4;color:var(--color-gray-100);width:100%}.esm-ohri-hiv___page__required___1elZl{margin:.25rem 27rem .5rem 0;font-size:.875rem;line-height:1.29;letter-spacing:.16px;color:var(--color-gray-70);width:100%}.esm-ohri-hiv___page__formSection___1fbE6{flex:1 1 65%}.esm-ohri-hiv___page__formSection___1fbE6>div>fieldset{margin-bottom:0 !important}.esm-ohri-hiv___page__collapseToggle___2FuSQ{margin-Left:-180px;margin-bottom:20px;margin-top:-10px}.esm-ohri-hiv___page__sectionContent___CZG98>div{background-color:#f4f4f4}.esm-ohri-hiv___page__formSection___1fbE6>div div div input,.esm-ohri-hiv___page__formSection___1fbE6>div div div textarea,.esm-ohri-hiv___page__formSection___1fbE6>div div div dropdown,.esm-ohri-hiv___page__formSection___1fbE6 .bx--dropdown button{background-color:#fff !important}@media(min-width: 640px){.bx--accordion__content{padding-right:2rem !important}}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"productiveHeading01\": \"esm-ohri-hiv___page__productiveHeading01___1I2AV\",\n\t\"productiveHeading02\": \"esm-ohri-hiv___page__productiveHeading02___2KNcV\",\n\t\"productiveHeading03\": \"esm-ohri-hiv___page__productiveHeading03___1YOvy\",\n\t\"productiveHeading04\": \"esm-ohri-hiv___page__productiveHeading04____JvMS\",\n\t\"productiveHeading05\": \"esm-ohri-hiv___page__productiveHeading05___3_pJW\",\n\t\"productiveHeading06\": \"esm-ohri-hiv___page__productiveHeading06___rZ8Qw\",\n\t\"bodyShort01\": \"esm-ohri-hiv___page__bodyShort01___16s3G\",\n\t\"helperText01\": \"esm-ohri-hiv___page__helperText01___2hLb3\",\n\t\"bodyShort02\": \"esm-ohri-hiv___page__bodyShort02___WkF8Q\",\n\t\"bodyLong01\": \"esm-ohri-hiv___page__bodyLong01___3J0pi\",\n\t\"bodyLong02\": \"esm-ohri-hiv___page__bodyLong02___22Cd3\",\n\t\"label01\": \"esm-ohri-hiv___page__label01___3K1me\",\n\t\"text01\": \"esm-ohri-hiv___page__text01___2yS_a\",\n\t\"text02\": \"esm-ohri-hiv___page__text02___3x4Dc\",\n\t\"divider\": \"esm-ohri-hiv___page__divider___1yvKR\",\n\t\"pageContent\": \"esm-ohri-hiv___page__pageContent___3aDP7\",\n\t\"pageHeader\": \"esm-ohri-hiv___page__pageHeader___ojjH5\",\n\t\"pageTitle\": \"esm-ohri-hiv___page__pageTitle___2VjsK\",\n\t\"required\": \"esm-ohri-hiv___page__required___1elZl\",\n\t\"formSection\": \"esm-ohri-hiv___page__formSection___1fbE6\",\n\t\"collapseToggle\": \"esm-ohri-hiv___page__collapseToggle___2FuSQ\",\n\t\"sectionContent\": \"esm-ohri-hiv___page__sectionContent___CZG98\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".esm-ohri-hiv__ohri-form-section__section___X07w6{border-radius:solid 1px rgba(107,104,104,.5);margin-bottom:3.063rem}.esm-ohri-hiv__ohri-form-section__sectionTitle___1Oajl{max-width:200px;font-size:1rem;font-weight:600;line-height:1.38;color:#525252;margin-bottom:.5rem}.esm-ohri-hiv__ohri-form-section__sectionContainer___iQ7nY{margin-top:1.438rem;width:90%}.esm-ohri-hiv__ohri-form-section__sectionContainer___iQ7nY .bx--fieldset{margin-bottom:0}.esm-ohri-hiv__ohri-form-section__sectionContainer___iQ7nY>div{margin-bottom:1rem}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"section\": \"esm-ohri-hiv__ohri-form-section__section___X07w6\",\n\t\"sectionTitle\": \"esm-ohri-hiv__ohri-form-section__sectionTitle___1Oajl\",\n\t\"sectionContainer\": \"esm-ohri-hiv__ohri-form-section__sectionContainer___iQ7nY\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-light-01: #007d79}.esm-ohri-hiv__ohri-form-sidebar-component__productiveHeading01___2a1ss{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.esm-ohri-hiv__ohri-form-sidebar-component__productiveHeading02___3ztK8{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.esm-ohri-hiv__ohri-form-sidebar-component__productiveHeading03___3UWKO{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.esm-ohri-hiv__ohri-form-sidebar-component__productiveHeading04___2nBC8{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.esm-ohri-hiv__ohri-form-sidebar-component__productiveHeading05___2FERy{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}.esm-ohri-hiv__ohri-form-sidebar-component__productiveHeading06___xd5O-{font-size:2rem;font-weight:300;line-height:1.199;letter-spacing:0}.esm-ohri-hiv__ohri-form-sidebar-component__bodyShort01___fiRR7{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.esm-ohri-hiv__ohri-form-sidebar-component__helperText01___5yubD{font-size:.75rem;line-height:1.34;letter-spacing:.32px}.esm-ohri-hiv__ohri-form-sidebar-component__bodyShort02___1spZ1{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.esm-ohri-hiv__ohri-form-sidebar-component__bodyLong01___1kGp9{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.esm-ohri-hiv__ohri-form-sidebar-component__bodyLong02___qVlAW{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}.esm-ohri-hiv__ohri-form-sidebar-component__label01___3RA0R{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.esm-ohri-hiv__ohri-form-sidebar-component__text01___3SrmB{color:#161616}.esm-ohri-hiv__ohri-form-sidebar-component__text02___3jbh-{color:#525252}aside{background-color:#fff !important}.esm-ohri-hiv__ohri-form-sidebar-component__sidebar___Xr1ih{width:12rem;min-height:8rem;overscroll-behavior:contain;margin:1px 13px 15px 0}.esm-ohri-hiv__ohri-form-sidebar-component__sidebarList___2hsxP{max-Height:100%}.esm-ohri-hiv__ohri-form-sidebar-component__sidenavActions___23RWI{margin-left:.6rem}@media all and (device-width: 600px)and (device-height: 1024px)and (orientation: portrait){.esm-ohri-hiv__ohri-form-sidebar-component__sidebar___Xr1ih{width:11rem;max-height:500px;margin-right:20px;position:fixed}.esm-ohri-hiv__ohri-form-sidebar-component__sidebarList___2hsxP{max-Height:200px;overflow-y:scroll}}.esm-ohri-hiv__ohri-form-sidebar-component__link___2i3jc{margin:.375rem 0 .375rem .5rem;font-size:1rem;line-height:1.43;letter-spacing:.16px;color:#161616;cursor:pointer}.esm-ohri-hiv__ohri-form-sidebar-component__link___2i3jc{margin:.375rem 0 .375rem .5rem;font-size:1rem;line-height:1.43;letter-spacing:.16px;color:#161616;cursor:pointer}.esm-ohri-hiv__ohri-form-sidebar-component__link___2i3jc:hover{outline:none}.esm-ohri-hiv__ohri-form-sidebar-component__sidebarSection___2-GuU{border-left:.5rem solid #9ef0f0;height:auto;margin:.122rem 0 .122rem;padding:.382rem .375rem .118rem 1rem;background-color:#fff;cursor:pointer}.esm-ohri-hiv__ohri-form-sidebar-component__sidebarSectionActive___cav-P{border-left:.5rem solid #009d9a;height:auto;font-weight:600;margin:.122rem 0 .122rem;padding:.382rem .375rem .118rem 1rem;background-color:#ededed;cursor:pointer}.esm-ohri-hiv__ohri-form-sidebar-component__sidebarSectionDone___3Ls24{border-left:.5rem solid #42be65;height:auto;margin:.122rem 0 .122rem;padding:.382rem .375rem .118rem 1rem;background-color:#defbe6;cursor:pointer}.esm-ohri-hiv__ohri-form-sidebar-component__sidebarSectionLink___3snIF{font-size:.875rem;font-stretch:normal;font-style:normal;line-height:1.43;letter-spacing:.16px;color:#161616}.esm-ohri-hiv__ohri-form-sidebar-component__sideBarHorizontalLine___1hFf8{margin-top:1.5rem}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"productiveHeading01\": \"esm-ohri-hiv__ohri-form-sidebar-component__productiveHeading01___2a1ss\",\n\t\"productiveHeading02\": \"esm-ohri-hiv__ohri-form-sidebar-component__productiveHeading02___3ztK8\",\n\t\"productiveHeading03\": \"esm-ohri-hiv__ohri-form-sidebar-component__productiveHeading03___3UWKO\",\n\t\"productiveHeading04\": \"esm-ohri-hiv__ohri-form-sidebar-component__productiveHeading04___2nBC8\",\n\t\"productiveHeading05\": \"esm-ohri-hiv__ohri-form-sidebar-component__productiveHeading05___2FERy\",\n\t\"productiveHeading06\": \"esm-ohri-hiv__ohri-form-sidebar-component__productiveHeading06___xd5O-\",\n\t\"bodyShort01\": \"esm-ohri-hiv__ohri-form-sidebar-component__bodyShort01___fiRR7\",\n\t\"helperText01\": \"esm-ohri-hiv__ohri-form-sidebar-component__helperText01___5yubD\",\n\t\"bodyShort02\": \"esm-ohri-hiv__ohri-form-sidebar-component__bodyShort02___1spZ1\",\n\t\"bodyLong01\": \"esm-ohri-hiv__ohri-form-sidebar-component__bodyLong01___1kGp9\",\n\t\"bodyLong02\": \"esm-ohri-hiv__ohri-form-sidebar-component__bodyLong02___qVlAW\",\n\t\"label01\": \"esm-ohri-hiv__ohri-form-sidebar-component__label01___3RA0R\",\n\t\"text01\": \"esm-ohri-hiv__ohri-form-sidebar-component__text01___3SrmB\",\n\t\"text02\": \"esm-ohri-hiv__ohri-form-sidebar-component__text02___3jbh-\",\n\t\"sidebar\": \"esm-ohri-hiv__ohri-form-sidebar-component__sidebar___Xr1ih\",\n\t\"sidebarList\": \"esm-ohri-hiv__ohri-form-sidebar-component__sidebarList___2hsxP\",\n\t\"sidenavActions\": \"esm-ohri-hiv__ohri-form-sidebar-component__sidenavActions___23RWI\",\n\t\"link\": \"esm-ohri-hiv__ohri-form-sidebar-component__link___2i3jc\",\n\t\"sidebarSection\": \"esm-ohri-hiv__ohri-form-sidebar-component__sidebarSection___2-GuU\",\n\t\"sidebarSectionActive\": \"esm-ohri-hiv__ohri-form-sidebar-component__sidebarSectionActive___cav-P\",\n\t\"sidebarSectionDone\": \"esm-ohri-hiv__ohri-form-sidebar-component__sidebarSectionDone___3Ls24\",\n\t\"sidebarSectionLink\": \"esm-ohri-hiv__ohri-form-sidebar-component__sidebarSectionLink___3snIF\",\n\t\"sideBarHorizontalLine\": \"esm-ohri-hiv__ohri-form-sidebar-component__sideBarHorizontalLine___1hFf8\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".esm-ohri-hiv__ohri-form__ohriForm___2RsoG{height:100%;overflow:hidden}.esm-ohri-hiv__ohri-form__ohriFormContainer___zLqL5{display:-webkit-flex;height:90vh;overflow-y:hidden}.esm-ohri-hiv__ohri-form__ohriFormContainer___zLqL5 .bx--label{font-size:.875rem}.esm-ohri-hiv__ohri-form__formContent___49VEt{margin:0;flex-basis:65%;flex-grow:1;flex-shrink:1;position:relative;overflow-y:hidden;display:flex;flex-direction:column}.esm-ohri-hiv__ohri-form__formContentBody___10Ea0{overflow-y:auto;height:77.5vh;width:inherit;position:sticky}@media(max-width: 768px){.esm-ohri-hiv__ohri-form__ohriFormContainer___zLqL5{height:100vh}}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"ohriForm\": \"esm-ohri-hiv__ohri-form__ohriForm___2RsoG\",\n\t\"ohriFormContainer\": \"esm-ohri-hiv__ohri-form__ohriFormContainer___zLqL5\",\n\t\"formContent\": \"esm-ohri-hiv__ohri-form__formContent___49VEt\",\n\t\"formContentBody\": \"esm-ohri-hiv__ohri-form__formContentBody___10Ea0\"\n};\nmodule.exports = exports;\n","var map = {\n\t\"./af\": 95191,\n\t\"./af.js\": 95191,\n\t\"./ar\": 54358,\n\t\"./ar-dz\": 71727,\n\t\"./ar-dz.js\": 71727,\n\t\"./ar-kw\": 98279,\n\t\"./ar-kw.js\": 98279,\n\t\"./ar-ly\": 87895,\n\t\"./ar-ly.js\": 87895,\n\t\"./ar-ma\": 72766,\n\t\"./ar-ma.js\": 72766,\n\t\"./ar-sa\": 52796,\n\t\"./ar-sa.js\": 52796,\n\t\"./ar-tn\": 12386,\n\t\"./ar-tn.js\": 12386,\n\t\"./ar.js\": 54358,\n\t\"./az\": 57452,\n\t\"./az.js\": 57452,\n\t\"./be\": 79053,\n\t\"./be.js\": 79053,\n\t\"./bg\": 65428,\n\t\"./bg.js\": 65428,\n\t\"./bm\": 21569,\n\t\"./bm.js\": 21569,\n\t\"./bn\": 56212,\n\t\"./bn-bd\": 24635,\n\t\"./bn-bd.js\": 24635,\n\t\"./bn.js\": 56212,\n\t\"./bo\": 13667,\n\t\"./bo.js\": 13667,\n\t\"./br\": 192,\n\t\"./br.js\": 192,\n\t\"./bs\": 51802,\n\t\"./bs.js\": 51802,\n\t\"./ca\": 19118,\n\t\"./ca.js\": 19118,\n\t\"./cs\": 39990,\n\t\"./cs.js\": 39990,\n\t\"./cv\": 30557,\n\t\"./cv.js\": 30557,\n\t\"./cy\": 4227,\n\t\"./cy.js\": 4227,\n\t\"./da\": 95406,\n\t\"./da.js\": 95406,\n\t\"./de\": 87994,\n\t\"./de-at\": 44139,\n\t\"./de-at.js\": 44139,\n\t\"./de-ch\": 86591,\n\t\"./de-ch.js\": 86591,\n\t\"./de.js\": 87994,\n\t\"./dv\": 94649,\n\t\"./dv.js\": 94649,\n\t\"./el\": 14453,\n\t\"./el.js\": 14453,\n\t\"./en-au\": 48428,\n\t\"./en-au.js\": 48428,\n\t\"./en-ca\": 36972,\n\t\"./en-ca.js\": 36972,\n\t\"./en-gb\": 13224,\n\t\"./en-gb.js\": 13224,\n\t\"./en-ie\": 18843,\n\t\"./en-ie.js\": 18843,\n\t\"./en-il\": 32732,\n\t\"./en-il.js\": 32732,\n\t\"./en-in\": 76579,\n\t\"./en-in.js\": 76579,\n\t\"./en-nz\": 29851,\n\t\"./en-nz.js\": 29851,\n\t\"./en-sg\": 70442,\n\t\"./en-sg.js\": 70442,\n\t\"./eo\": 10654,\n\t\"./eo.js\": 10654,\n\t\"./es\": 63621,\n\t\"./es-do\": 68791,\n\t\"./es-do.js\": 68791,\n\t\"./es-mx\": 67278,\n\t\"./es-mx.js\": 67278,\n\t\"./es-us\": 60717,\n\t\"./es-us.js\": 60717,\n\t\"./es.js\": 63621,\n\t\"./et\": 72404,\n\t\"./et.js\": 72404,\n\t\"./eu\": 62944,\n\t\"./eu.js\": 62944,\n\t\"./fa\": 30496,\n\t\"./fa.js\": 30496,\n\t\"./fi\": 98137,\n\t\"./fi.js\": 98137,\n\t\"./fil\": 32872,\n\t\"./fil.js\": 32872,\n\t\"./fo\": 6545,\n\t\"./fo.js\": 6545,\n\t\"./fr\": 49090,\n\t\"./fr-ca\": 13049,\n\t\"./fr-ca.js\": 13049,\n\t\"./fr-ch\": 12338,\n\t\"./fr-ch.js\": 12338,\n\t\"./fr.js\": 49090,\n\t\"./fy\": 95088,\n\t\"./fy.js\": 95088,\n\t\"./ga\": 77812,\n\t\"./ga.js\": 77812,\n\t\"./gd\": 8374,\n\t\"./gd.js\": 8374,\n\t\"./gl\": 63649,\n\t\"./gl.js\": 63649,\n\t\"./gom-deva\": 52674,\n\t\"./gom-deva.js\": 52674,\n\t\"./gom-latn\": 44948,\n\t\"./gom-latn.js\": 44948,\n\t\"./gu\": 24033,\n\t\"./gu.js\": 24033,\n\t\"./he\": 10175,\n\t\"./he.js\": 10175,\n\t\"./hi\": 58055,\n\t\"./hi.js\": 58055,\n\t\"./hr\": 41678,\n\t\"./hr.js\": 41678,\n\t\"./hu\": 85111,\n\t\"./hu.js\": 85111,\n\t\"./hy-am\": 26530,\n\t\"./hy-am.js\": 26530,\n\t\"./id\": 19126,\n\t\"./id.js\": 19126,\n\t\"./is\": 11696,\n\t\"./is.js\": 11696,\n\t\"./it\": 98710,\n\t\"./it-ch\": 38821,\n\t\"./it-ch.js\": 38821,\n\t\"./it.js\": 98710,\n\t\"./ja\": 93974,\n\t\"./ja.js\": 93974,\n\t\"./jv\": 70648,\n\t\"./jv.js\": 70648,\n\t\"./ka\": 54731,\n\t\"./ka.js\": 54731,\n\t\"./kk\": 43501,\n\t\"./kk.js\": 43501,\n\t\"./km\": 84398,\n\t\"./km.js\": 84398,\n\t\"./kn\": 91825,\n\t\"./kn.js\": 91825,\n\t\"./ko\": 13729,\n\t\"./ko.js\": 13729,\n\t\"./ku\": 19670,\n\t\"./ku.js\": 19670,\n\t\"./ky\": 78797,\n\t\"./ky.js\": 78797,\n\t\"./lb\": 50627,\n\t\"./lb.js\": 50627,\n\t\"./lo\": 65859,\n\t\"./lo.js\": 65859,\n\t\"./lt\": 80355,\n\t\"./lt.js\": 80355,\n\t\"./lv\": 16594,\n\t\"./lv.js\": 16594,\n\t\"./me\": 45324,\n\t\"./me.js\": 45324,\n\t\"./mi\": 11689,\n\t\"./mi.js\": 11689,\n\t\"./mk\": 61308,\n\t\"./mk.js\": 61308,\n\t\"./ml\": 85241,\n\t\"./ml.js\": 85241,\n\t\"./mn\": 76320,\n\t\"./mn.js\": 76320,\n\t\"./mr\": 96771,\n\t\"./mr.js\": 96771,\n\t\"./ms\": 20503,\n\t\"./ms-my\": 77748,\n\t\"./ms-my.js\": 77748,\n\t\"./ms.js\": 20503,\n\t\"./mt\": 55534,\n\t\"./mt.js\": 55534,\n\t\"./my\": 62727,\n\t\"./my.js\": 62727,\n\t\"./nb\": 7550,\n\t\"./nb.js\": 7550,\n\t\"./ne\": 49899,\n\t\"./ne.js\": 49899,\n\t\"./nl\": 41228,\n\t\"./nl-be\": 31225,\n\t\"./nl-be.js\": 31225,\n\t\"./nl.js\": 41228,\n\t\"./nn\": 97130,\n\t\"./nn.js\": 97130,\n\t\"./oc-lnc\": 93130,\n\t\"./oc-lnc.js\": 93130,\n\t\"./pa-in\": 91282,\n\t\"./pa-in.js\": 91282,\n\t\"./pl\": 28190,\n\t\"./pl.js\": 28190,\n\t\"./pt\": 41549,\n\t\"./pt-br\": 78135,\n\t\"./pt-br.js\": 78135,\n\t\"./pt.js\": 41549,\n\t\"./ro\": 307,\n\t\"./ro.js\": 307,\n\t\"./ru\": 89272,\n\t\"./ru.js\": 89272,\n\t\"./sd\": 79248,\n\t\"./sd.js\": 79248,\n\t\"./se\": 74969,\n\t\"./se.js\": 74969,\n\t\"./si\": 65522,\n\t\"./si.js\": 65522,\n\t\"./sk\": 61581,\n\t\"./sk.js\": 61581,\n\t\"./sl\": 56428,\n\t\"./sl.js\": 56428,\n\t\"./sq\": 34611,\n\t\"./sq.js\": 34611,\n\t\"./sr\": 19821,\n\t\"./sr-cyrl\": 20185,\n\t\"./sr-cyrl.js\": 20185,\n\t\"./sr.js\": 19821,\n\t\"./ss\": 35029,\n\t\"./ss.js\": 35029,\n\t\"./sv\": 80939,\n\t\"./sv.js\": 80939,\n\t\"./sw\": 73107,\n\t\"./sw.js\": 73107,\n\t\"./ta\": 72304,\n\t\"./ta.js\": 72304,\n\t\"./te\": 72550,\n\t\"./te.js\": 72550,\n\t\"./tet\": 99717,\n\t\"./tet.js\": 99717,\n\t\"./tg\": 87669,\n\t\"./tg.js\": 87669,\n\t\"./th\": 94959,\n\t\"./th.js\": 94959,\n\t\"./tk\": 92661,\n\t\"./tk.js\": 92661,\n\t\"./tl-ph\": 52234,\n\t\"./tl-ph.js\": 52234,\n\t\"./tlh\": 94120,\n\t\"./tlh.js\": 94120,\n\t\"./tr\": 81111,\n\t\"./tr.js\": 81111,\n\t\"./tzl\": 53080,\n\t\"./tzl.js\": 53080,\n\t\"./tzm\": 88246,\n\t\"./tzm-latn\": 25385,\n\t\"./tzm-latn.js\": 25385,\n\t\"./tzm.js\": 88246,\n\t\"./ug-cn\": 48777,\n\t\"./ug-cn.js\": 48777,\n\t\"./uk\": 2014,\n\t\"./uk.js\": 2014,\n\t\"./ur\": 45953,\n\t\"./ur.js\": 45953,\n\t\"./uz\": 89716,\n\t\"./uz-latn\": 87791,\n\t\"./uz-latn.js\": 87791,\n\t\"./uz.js\": 89716,\n\t\"./vi\": 99816,\n\t\"./vi.js\": 99816,\n\t\"./x-pseudo\": 94450,\n\t\"./x-pseudo.js\": 94450,\n\t\"./yo\": 22556,\n\t\"./yo.js\": 22556,\n\t\"./zh-cn\": 7414,\n\t\"./zh-cn.js\": 7414,\n\t\"./zh-hk\": 50824,\n\t\"./zh-hk.js\": 50824,\n\t\"./zh-mo\": 88589,\n\t\"./zh-mo.js\": 88589,\n\t\"./zh-tw\": 63285,\n\t\"./zh-tw.js\": 63285\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 96616;"],"names":["BASE_WS_API_URL","fetchLastVisit","uuid","openmrsFetch","fetchPatientList","offSet","pageSize","fetchTodayClients","date","moment","format","then","data","entry","length","cleanDuplicatePatientReferences","fetchPatientsFromObservationCodeConcept","codeConcept","valueConcept","cutOffDays","endDate","startDate","subtract","patientRefs","map","enc","resource","subject","reference","Set","Array","from","Promise","all","ref","async","getCohort","cohortUuid","version","cohortMembers","filter","member","voided","getReportingCohort","queryParams","params","join","url","getReportingCohortMembers","members","getCohorts","cohortTypeUuid","results","error","cohort","addPatientToCohort","patientUuid","method","headers","body","patient","Date","evictCohortMembership","membershipUuid","getPatientListsForPatient","membership","fetchPatientsFinalHIVStatus","patientUUID","finalHIVCodeConcept","finalPositiveHIVValueConcept","valueCodeableConcept","coding","display","fetchPatientComputedConcept_HIV_Status","computedHIV_StatusConcept","fetchPatientLastEncounter","encounterType","query","encounterRepresentation","fetchConceptNameByUuid","conceptUuid","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","className","styles","Loading","description","withOverlay","small","PatientBanner","ExtensionSlot","extensionSlotName","state","id","basePath","linkedToCareCodeConcept","linkedToCareYesValueConcept","preTestCounsellingCohort","waitingForHIVTestCohort","postTestCounsellingCohort","clientsEnrolledToCare","todayzAppointmentsCT","careAndTreatmentEncounterType","patientTypeEnrollmentConcept","studyPopulationTypeConcept","dateOfHIVDiagnosisConcept","clinicalVisitEncounterType","dateOfEncounterConcept","visitTypeConcept","regimenConcept","expressCareProgramStatusConcept","returnVisitDateConcept","htsRetrospectiveEncounterType","hivTestResultConceptUUID","hivLabResultsEncounterType_UUID","hivCD4Result_UUID","hivCD4Count_UUID","ConceptTrue","ConceptFalse","isTrue","value","evaluateExpression","expression","node","allFields","allFieldValues","context","allFieldsKeys","f","parts","trim","split","isEmpty","includes","registerDependency","find","candidate","isValueEmpty","today","questionId","isDateBefore","left","right","otherDate","toDate","getTime","forEach","part","index","determinant","field","determinantValue","questionOptions","rendering","regx","RegExp","replace","eval","console","type","pageDependants","add","label","sectionDependants","fieldDependants","fieldRequiredErrCode","OHRIFieldValidator","validate","unspecified","required","errCode","errMessage","isArray","scrollIntoView","viewId","document","getElementById","behavior","block","inline","scrollAblePages","selectedPage","mode","onCancel","handleClose","values","setValues","allowUnspecifiedAll","defaultPage","activeLink","setActiveLink","useState","useEffect","isHidden","joinWord","unspecifiedFields","useMemo","Object","keys","key","endsWith","markAllAsUnspecified","useCallback","toggled","page","onClick","selected","activeID","handleClick","style","marginBottom","Toggle","labelText","labelA","labelB","onToggle","Button","width","kind","OHRIFormContext","React","getConcept","v","openmrsObservableFetch","pipe","response","OHRIUnspecified","question","meta","useField","setFieldValue","previouslyUnspecified","setPreviouslyUnspecified","errors","emptyValue","handleOnChange","readonly","Checkbox","onChange","checked","disabled","getFieldControl","concept","getFieldComponent","supportsUnspecified","fields","onFieldChange","sectionTitle","showTitle","component","qnFragment","handler","getHandler","OHRIObsGroup","deleteControl","groupContent","questions","groupMember","push","OHRILabel","tooltipText","TooltipDefinition","direction","tabIndex","OHRIValueEmpty","fontSize","color","OHRIValueDisplay","cascadeVisibityToChildFields","visibility","section","candidateIds","q","isParentHidden","inferInitialValueFromDefaultFieldValue","defaultValue","answers","answer","isValid","isNaN","OHRIDefaultFieldValueValidator","handleFieldSubmission","getConceptNameAndUUID","conceptName","ObsSubmissionHandler","multiSelectObsHandler","constructObs","sessionMode","getInitialValue","encounter","allFormFields","obs","o","parentField","obsGroup","groupMembers","subscribe","result","datatype","name","getDisplayValue","chosenOption","option","person","obsDatetime","location","order","opt","some","observations","OHRIDateValidator","config","now","allowFutureDates","OHRIJSExpressionValidator","expressionContext","myValue","failsWhenExpression","message","baseFieldComponents","encounterContext","previousValue","setPreviousValue","setErrors","setConceptName","isFieldRequiredError","onBlur","conceptTooltip","TextInput","onFocus","invalid","invalidText","FormGroup","paddingBottom","legendText","RadioButtonGroup","defaultSelected","valueSelected","orientation","RadioButton","placeHolder","carbonDateformat","formatObj","Intl","DateTimeFormat","window","navigator","language","formatToParts","obj","toLocaleDateString","DatePicker","datePickerType","refinedDate","getTimezoneOffset","dateFormat","DatePickerInput","placeholder","NumberInput","max","min","allowEmpty","size","t","useTranslation","counter","setCounter","touched","setTouched","questionItems","initiallySelectedQuestionItems","item","UnorderedList","marginLeft","displayValue","ListItem","MultiSelect","selectedItems","selectedItem","items","initialSelectedItems","titleText","itemToString","selectedIndex","findIndex","ContentSwitcher","Switch","text","setEncounterLocation","locations","setLocations","tag","locationTag","createErrorHandler","Dropdown","setItems","handleChange","TextArea","rows","toggleOptions","labelFalse","labelTrue","setQuestions","obsGroupsToVoid","useFormikContext","viewPort","useLayoutType","rowWidth","alreadyMappedGroup","unMappedObsGroups","tempCounter","handleAdd","count","idSuffix","next","cloneDeep","initialValue","getInitialValueFromObs","nodes","Column","paddingTop","renderIcon","TrashCan32","splice","removeQuestion","hasIconOnly","Row","margin","marginTop","Add16","nextCount","repeatOptions","addText","children","baseHandlers","fieldValidators","renderType","getValidator","validator","setSelectedPage","isCollapsed","newLabel","onEnter","topOffset","bottomOffset","Accordion","sections","sec","AccordionItem","title","open","InstantEffect","effect","OHRIEncounterForm","formJson","encounterDate","provider","scrollablePages","setScrollablePages","handlers","allInitialValues","setAllInitialValues","setFields","encounterLocation","setEncounter","form","setForm","setObsGroupsToVoid","formInitialValues","setFormInitialValues","addScrollablePages","pages","isSubform","delete","tempInitVals","groupedField","existingVal","emptyValues","checkbox","toggle","default","hide","evalHide","subscription","unsubscribe","allValues","hideWhenExpression","addObs","obsList","formFieldNamespace","formFieldPath","obsChild","formHasErrors","fieldName","validators","basevalidatorConfig","validatorConfig","dep","dependant","fields_temp","form_temp","set","submit","obsForSubmission","hasValue","encounterForSubmission","assign","encProvider","encounterProviders","encounterRole","encounterDatetime","orders","abortController","payload","encounterUuid","signal","saveEncounter","AbortController","Provider","subform","onSubmit","currentProvider","setCurrentProvider","useCurrentPatient","session","useSessionUser","initialValues","setInitialValues","encDate","collapsed","setCollapsed","Map","copy","JSON","parse","stringify","i","extDetails","moduleName","slot","load","getAsyncLifecycle","featureName","handleCollapse","registerExtension","attach","detach","sessionLocation","enableReinitialize","validationSchema","Yup","setSubmitting","isSubmitable","submissions","showToast","critical","handleFormSubmit","props","closeWorkspace","onFormSubmit","updateParent","exports","___CSS_LOADER_API_IMPORT___","module","locals","webpackContext","req","webpackContextResolve","__webpack_require__","e","Error","code","resolve"],"sourceRoot":""}