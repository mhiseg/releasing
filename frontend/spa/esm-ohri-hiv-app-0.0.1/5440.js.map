{"version":3,"file":"5440.js","mappings":"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","sources":["webpack://esm-ohri-hiv-app/./src/components/loading/loading.component.scss?283e","webpack://esm-ohri-hiv-app/./src/components/loading/loading.component.tsx","webpack://esm-ohri-hiv-app/./src/components/patient-banner/patient-banner.scss?41c4","webpack://esm-ohri-hiv-app/./src/components/patient-banner/patient-banner.component.tsx","webpack://esm-ohri-hiv-app/./src/constants.ts","webpack://esm-ohri-hiv-app/./src/pages/hts/encounter-form/hts-encounter-form.scss?2679","webpack://esm-ohri-hiv-app/./src/pages/hts/encounter-form/hts-encounter-form.resource.tsx","webpack://esm-ohri-hiv-app/./src/components/identifier-generator/identifier-generator.scss?a088","webpack://esm-ohri-hiv-app/./src/components/identifier-generator/identifier-generator.component.tsx","webpack://esm-ohri-hiv-app/./src/pages/hts/encounter-form/hts-encounter-form.component.tsx","webpack://esm-ohri-hiv-app/./src/components/identifier-generator/identifier-generator.scss","webpack://esm-ohri-hiv-app/./src/components/loading/loading.component.scss","webpack://esm-ohri-hiv-app/./src/components/patient-banner/patient-banner.scss","webpack://esm-ohri-hiv-app/./src/pages/hts/encounter-form/hts-encounter-form.scss"],"sourcesContent":["\n      import API from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./loading.component.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./loading.component.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport Loading from 'carbon-components-react/es/components/Loading';\nimport styles from './loading.component.scss';\n\nconst LoadingIcon: React.FC = () => (\n  <div className={styles['centerLoadingSVG']}>\n    <Loading description=\"Active loading indicator\" withOverlay={false} small />\n  </div>\n);\n\nexport default LoadingIcon;\n","\n      import API from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./patient-banner.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./patient-banner.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { ExtensionSlot } from '@openmrs/esm-framework';\nimport React from 'react';\nimport styles from './patient-banner.scss';\n\nexport const PatientBanner: React.FC<{ patient: any }> = ({ patient }) => {\n  return (\n    <div className={styles.patientBannerContainer}>\n      <ExtensionSlot\n        extensionSlotName=\"patient-header-slot\"\n        state={{\n          patient,\n          patientUuid: patient.id,\n        }}\n      />\n    </div>\n  );\n};\n","export const careSetting = '6f0c9a92-6f24-11e3-af88-005056821db0';\n\nexport const daysDurationUnit = {\n  uuid: '1072AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA',\n  display: 'Days',\n};\n\nexport const basePath = '${openmrsSpaBase}/patient/';\nexport const encounterRepresentation =\n  'custom:(uuid,encounterDatetime,location:(uuid,name),' +\n  'encounterProviders:(uuid,provider:(uuid,name)),' +\n  'obs:(uuid,obsDatetime,groupMembers,concept:(uuid,name:(uuid,name)),value:(uuid,name:(uuid,name),' +\n  'names:(uuid,conceptNameType,name))))';\n\n// Final HIV Test Result Concepts\nexport const finalHIVCodeConcept = 'e16b0068-b6a2-46b7-aba9-e3be00a7b4ab';\nexport const finalPositiveHIVValueConcept = '6378487b-584d-4422-a6a6-56c8830873ff';\nexport const computedHIV_StatusConcept = 'a5261998-c635-4e27-870c-e837faf6cf9a';\n\n// Linked to Care Concepts\nexport const linkedToCareCodeConcept = 'e8e8fe71-adbb-48e7-b531-589985094d30';\nexport const linkedToCareYesValueConcept = '1065AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\n\n// Cohorts\nexport const preTestCounsellingCohort = 'e4d801f0-e2fd-11eb-8212-7d7156e00a1f';\nexport const waitingForHIVTestCohort = 'cdee0abe-e471-11eb-8212-7d7156e00a1f';\nexport const postTestCounsellingCohort = '01af2130-e472-11eb-8212-7d7156e00a1f';\nexport const clientsEnrolledToCare = '51bec6f7-df43-426e-a83e-c1ae5501372f';\nexport const todayzAppointmentsCT = 'ccbcf6d8-77b7-44a5-bb43-d352478ea4e9';\n\n// COVID Cohorts\nexport const clientsAssessedForCovid = 'ec373b01-4ba3-488e-a322-9dd6a50cfdf7';\nexport const covidClientsWithPendingLabResults = '166aa2b1-ce55-4d16-9643-ca9d2e2694ea';\nexport const clientsWithoutCovidOutcomes = 'db6c4a18-28c6-423c-9da0-58d19e364a7f';\nexport const allCovidAssessments = 'ec373b01-4ba3-488e-a322-9dd6a50cfdf7';\nexport const covidVaccinatedClients = 'b5d52da9-10c2-43af-ae23-552acc5e445b';\nexport const covid19PositiveClients = '1523b1e5-b6d0-44fb-bd9e-c91bfefb4d1c';\n\n// COVID Concepts\nexport const dateSpecimenCollected = '159951AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const covidTestType = '069f6dfe-88c1-4a45-a894-0d99549c8718';\nexport const covidOutcome = 'a845f3e6-4432-4de4-9fff-37fa270b1a06';\nexport const rapidAntigenResultDate = 'af159c77-bc5d-46dd-90d9-bcbffb22267f';\nexport const pcrTestResultDate = '4a77ab44-0323-490e-96be-e168c0e5c9de';\nexport const finalCovid19Result = '5da5c21b-969f-41bd-9091-e40d4c707544';\n\n// Service Enrollment Concepts\nexport const careAndTreatmentEncounterType = '7e54cd64-f9c3-11eb-8e6a-57478ce139b0';\nexport const dateOfServiceEnrollmentConcept = '160555AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const patientTypeEnrollmentConcept = '83e40f2c-c316-43e6-a12e-20a338100281';\nexport const studyPopulationTypeConcept = '166432AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const dateOfHIVDiagnosisConcept = '160554AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\n\n// Clinical visit\nexport const clinicalVisitEncounterType = 'cb0a65a7-0587-477e-89b9-cf2fd144f1d4';\nexport const dateOfEncounterConcept = '163137AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const visitTypeConcept = '8a9809e9-8a0b-4e0e-b1f6-80b0cbbe361b';\nexport const regimenConcept = 'dfbe256e-30ba-4033-837a-2e8477f2e7cd';\nexport const expressCareProgramStatusConcept = '159832AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'; // differentiated Care Services\nexport const returnVisitDateConcept = '5096AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'; // Next Appointment Date\n\n// Encounter types\nexport const htsRetrospectiveEncounterType = '79c1f50f-f77d-42e2-ad2a-d29304dde2fe';\nexport const covidCaseAssessmentEncType = '253a43d3-c99e-415c-8b78-ee7d4d3c1d54';\n\n// HTS Retrospective\nexport const htsRetrospectiveType = '79c1f50f-f77d-42e2-ad2a-d29304dde2fe';\n\n// Covid Restrospective\n//   const covidEncounterUUID = '902839fa-f58c-44a1-95a4-dba62d7263f8'; // Covid Case Report\nexport const covid_Assessment_EncounterUUID = '253a43d3-c99e-415c-8b78-ee7d4d3c1d54';\nexport const covidReasonsForTestingConcep_UUID = 'ae46f4b1-c15d-4bba-ab41-b9157b82b0ce'; // Reasons for testing\nexport const covidTestTypeUUID = '069f6dfe-88c1-4a45-a894-0d99549c8718'; // SARS2-Cov2 Test Type\nexport const covidTestResultUUID = '3f4ee14b-b4ab-4597-9fe9-406883b63d76'; // Diagnostic PCR Result\nexport const covidOutcomeUUID = 'a845f3e6-4432-4de4-9fff-37fa270b1a06';\n\nexport const covidSpecimenCollectiDate_UUID = '159951AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'; // Date specimen collected\nexport const covidPatientStatusUUID = 'de3bc9b7-05b5-41b6-a38d-8d2eec646c4f'; // Client Health Status\n\nexport const covidTreatementOutConcept_UUID = 'a845f3e6-4432-4de4-9fff-37fa270b1a06';\nexport const covidSARS_TestResultConcept_UUID = '89feed9c-1dd9-477a-ab1c-86f5f75f6762';\n\n// Covid Assessment\nexport const covidSARS_TestResult_Name_UUID = '0961651c-d52e-41dd-957a-94b9ce08e4eb';\nexport const covidReasonsForTestingUUID = '5793ad0f-d726-4918-a1b5-f25f4fb2b857';\nexport const covidTreatmenOutConceptName_UUID = '28d43e48-3673-4671-a6b1-3ed45fdfcba6';\nexport const covidSpecimentTestDate_UUID = '499df97a-2a34-4562-946a-3c4d5608b67f';\nexport const covidTypeofTestConcept_UUID = '069f6dfe-88c1-4a45-a894-0d99549c8718';\nexport const covidSymptosConcept_UUID = '';\nexport const covidPresentSymptonsConcept_UUID = '244b0dc0-eb1b-46ae-b62a-f580345d4f46';\nexport const covidComorbidityPresentConcept_UUID = '166020AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const covidUnderComorbidityConcept_UUID = '0651869c-6e90-48d6-b25c-406270c76bee';\nexport const covidPresentSymptonsName_UUID = '12568215-ae1c-42ec-b7e8-8818d2761f46';\nexport const covidPatientStatusConcept_UUID = 'de3bc9b7-05b5-41b6-a38d-8d2eec646c4f';\n\n//Covid Lab Order\nexport const covidLabOrderDate_UUID = '162078AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const covidLabOrderEncounterType_UUID = 'a77d3e7f-5c8f-4074-a207-77a70e197b0c';\n\n//Covid Lab Results\nexport const covidSpecimenCollectionDate_UUID = '159951AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const covidLabResultsEncounterType_UUID = '253a43d3-c99e-415c-8b78-ee7d4d3c1d54';\nexport const covidSpecimentTypeConcept_UUID = 'ae127f82-1861-4165-ac81-8554e5a3aac4';\nexport const covidTestResultConcept_UUID = '161934AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const covidRapidTestResultDate_UUID = 'af159c77-bc5d-46dd-90d9-bcbffb22267f';\nexport const covidDiagnosticPcrResult_UUID = '3f4ee14b-b4ab-4597-9fe9-406883b63d76';\nexport const covidDiagnorticPcrResultDate_UUID = '4a77ab44-0323-490e-96be-e168c0e5c9de';\nexport const covidTestStatusConcept_UUID = '6681366c-2174-489a-b951-13a1404935bf';\n\n// Covid Vaccination\nexport const covidVaccinationEncounterUUID = '5b37ce7a-c55e-4226-bdc8-5af04025a6de';\nexport const covidVaccinationStatusUUID = '40cb816f-797b-4cb4-a9fb-2727b2373623'; // Has the patient been vaccinated\nexport const covidVaccinationStatusConcept_UUID = 'de3bc9b7-05b5-41b6-a38d-8d2eec646c4f'; // What is the patient status with regard to COVID-19?\nexport const covidVaccination1stDoseDateConcept_UUID = 'c85eb064-5ef7-4ac6-8e56-4749bd58df44'; // What is COVID-19 vaccination date (1st dose)?\nexport const covidVaccination2ndDoseDateConcept_UUID = '42ee7f5c-fdd3-48c1-8d3a-5c6e248e6cb9'; // What is COVID-19 vaccination date (2nd dose)?\nexport const covidVaccinationTypeConcept_UUID = 'a31d1148-bbcc-4ad6-a015-8359d66bcfdc'; // What COVID-19 vaccine was administered?\nexport const covidVaccinationAdministeredConcept_UUID = '1410AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'; // Which date COVID-19 vaccine was administered?\nexport const covidVaccinationNextVacinationDateConcept_UUID = '5096AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const covidVaccinationDoseAdmininstered_UUID = '97bf47f9-0ba7-4d00-99bd-8939cd586072';\n\n// HTS HIV\nexport const hivTestResultConceptUUID = 'e16b0068-b6a2-46b7-aba9-e3be00a7b4ab';\nexport const hivTestDateConceptUUID = '140414BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB';\n\n// HIV Lab Results\nexport const hivLabResultsEncounterType_UUID = ' 15272be5-ae9c-4278-a303-4b8907eae73b';\nexport const hivLabTestResultConcept_UUID = '';\nexport const hivReasonViralLoadRequest_UUID = '86cc0cfe-bace-4969-94b6-d139f4971d13';\nexport const hivReasonCD4Request_UUID = '759e89a6-3260-4aee-9922-86a6301bcff3';\nexport const hivDateViralLoadResult_UUID = '163281AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const hivDateViralLoadInterpretation_UUID = '686dc1b2-68b5-4024-b311-bd2f5e3ce394';\nexport const hivDateCD4Result_UUID = '159376AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const hivCD4Result_UUID = '657AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nexport const hivCD4Count_UUID = '5497AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\n","\n      import API from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./hts-encounter-form.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./hts-encounter-form.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { openmrsFetch, openmrsObservableFetch } from '@openmrs/esm-framework';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AllergyData, Concept, HSTEncounter } from '../../../api/types';\n\nexport function getPatientAllergyByPatientUuid(\n  patientUuid: string,\n  allergyUuid: any,\n  abortController: AbortController,\n) {\n  return openmrsFetch<AllergyData>(`/ws/rest/v1/patient/${patientUuid}/allergy/${allergyUuid.allergyUuid}?v=full`, {\n    signal: abortController.signal,\n  });\n}\n\nexport function getAllergyAllergenByConceptUuid(allergyUuid: string) {\n  return openmrsObservableFetch(`/ws/rest/v1/concept/${allergyUuid}?v=full`).pipe(\n    map(({ data }) => data['setMembers']),\n  );\n}\n\nexport function saveHTSEncounter(abortController: AbortController, payload: HSTEncounter, encounterUuid?: string) {\n  let url = '/ws/rest/v1/encounter';\n  if (encounterUuid) {\n    url = url + `/${encounterUuid}`;\n  }\n  return openmrsFetch(url, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n    body: payload,\n    signal: abortController.signal,\n  });\n}\n\nexport function getHTSLocations(): Observable<{ uuid: string; display: string }[]> {\n  return openmrsObservableFetch(`/ws/rest/v1/location?tag=HTS%20Test%20Location&v=custom:(uuid,display)`).pipe(\n    map(({ data }) => data['results']),\n  );\n}\n\nexport function getConcept(conceptUuid: string, v: string): Observable<any> {\n  return openmrsObservableFetch(`/ws/rest/v1/concept/${conceptUuid}?v=${v}`).pipe(map(response => response['data']));\n}\n","\n      import API from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./identifier-generator.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./identifier-generator.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport { Renew32 } from '@carbon/icons-react';\nimport styles from './identifier-generator.scss';\n\nexport const IdentifierGenerator: React.FC = () => {\n  const generateId = () => {};\n  return (\n    <div>\n      <span className={styles.idLabel}>Unique HTS Number (generated)</span>\n      <div className={styles.container}>\n        <div style={{ width: '50%' }}>\n          <span className={styles.idText}>00008962B-12</span>\n        </div>\n        <div>\n          <Renew32 className={(styles.rotate, styles.renewSVG)} onClick={generateId} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n  Button,\n  ButtonSet,\n  Checkbox,\n  ContentSwitcher,\n  DatePicker,\n  DatePickerInput,\n  Dropdown,\n  Form,\n  FormGroup,\n  Switch,\n  Toggle,\n} from 'carbon-components-react';\nimport styles from './hts-encounter-form.scss';\n\nimport {\n  age,\n  createErrorHandler,\n  detach,\n  openmrsObservableFetch,\n  toDateObjectStrict,\n  useConfig,\n  useCurrentPatient,\n} from '@openmrs/esm-framework';\nimport { getConcept, getHTSLocations, saveHTSEncounter } from './hts-encounter-form.resource';\nimport { Concept, HSTEncounter } from '../../../api/types';\nimport LoadingIcon from '../../../components/loading/loading.component';\nimport { IdentifierGenerator } from '../../../components/identifier-generator/identifier-generator.component';\nimport { PatientBanner } from '../../../components/patient-banner/patient-banner.component';\nimport { encounterRepresentation } from '../../../constants';\n\n// TODO: Remove hardcoded values, configure through module config\nconst HTSEncounterType = '30b849bd-c4f4-4254-a033-fe9cf01001d8';\nconst populationTypeConceptUuid = '12584591-bc0d-4759-9c79-d292fa3f60bb';\nconst testOneConceptUuid = 'edbc886c-54f7-402b-a345-415e83e4f89a';\nconst patientConsentConceptUuid = '1710AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nconst confirmatoryTestConceptUuid = 'aafd3e2b-51b4-4607-86f8-097fb93c0dba';\nconst finalTestConceptUuid = 'f4470401-08e2-40e5-b52b-c9d1254a4d66';\n// This is a basic clinical role, replace with actual HTS Encounter role\nconst htsEncounterRole = '240b26f9-dd88-4172-823d-4a8bfeb7841f';\nconst possibleHSTCodedAnswers = [\n  '1138AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA',\n  '664AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA',\n  '703AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA',\n];\n\nconst HtsEncounterForm: React.FC<{\n  closeWorkspace: () => {};\n  state: any;\n  patientUuid: string;\n  encounterUuid: string;\n}> = ({ closeWorkspace, patientUuid, state, encounterUuid }, props) => {\n  // const config = useConfig();\n  // TODO: Configure all metadata through the config\n  // const { encounterType, concepts } = config['htsEntryFormConfig'];\n  const [, patient] = useCurrentPatient();\n  const [isLoading, setIsLoading] = useState(true);\n  const [encounter, setEncounter] = useState(null);\n  const [patientConsent, setPatientConsent] = useState(false);\n  const [testLocation, setTestLocation] = useState<{ uuid: string; display: string }>(null);\n  const [locationInvalid, setLocationInvalid] = useState(false);\n  const [htsLocations, setHtsLocations] = useState<{ uuid: string; display: string }[]>([]);\n  const [htsDate, setHTSDate] = useState(new Date());\n  const [populationTypeConcept, setPopulationTypeConcept] = useState<Concept>();\n  const [populationTypesObs, setPopulationTypeObs] = useState([]);\n  const [testOneResult, setTestOneResult] = useState({\n    concept: '1138AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA',\n    name: 'Not Performed',\n  });\n  const [confirmatoryTestResult, setConfirmatoryTestResult] = useState(null);\n  const [finalTestResult, setFinalTestResult] = useState(null);\n  const [currentProvider, setCurrentProvider] = useState();\n  const conductConfirmatoryTest = testOneResult?.concept === '703AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\n  const [populationTypeValueGroupObs, setPopulationTypeValueGroupObs] = useState([]);\n  const [obsForRetire, setObsForRetire] = useState([]);\n  // population types\n  const [generalPop, setGeneralPop] = useState(false);\n  const [msm, setMSM] = useState(false);\n  const [fsw, setFSW] = useState(false);\n  const [msw, setMSW] = useState(false);\n  const [pwid, setPWID] = useState(false);\n  const [pwud, setPWUD] = useState(false);\n  const [trangender, setTrangender] = useState(false);\n\n  useEffect(() => {\n    if (populationTypeValueGroupObs.length) {\n      const selectedPopulationTypeUuids = populationTypeValueGroupObs.map(obs => obs.value.uuid);\n      populationTypeConcept?.answers?.forEach((value, index) => {\n        const selected = selectedPopulationTypeUuids.includes(value.uuid);\n        switch (index) {\n          case 0:\n            setGeneralPop(selected);\n            break;\n          case 1:\n            setMSM(selected);\n            break;\n          case 2:\n            setFSW(selected);\n            break;\n          case 3:\n            setMSW(selected);\n            break;\n          case 4:\n            setPWID(selected);\n            break;\n          case 5:\n            setPWUD(selected);\n            break;\n          case 6:\n            setTrangender(selected);\n            break;\n        }\n      });\n    }\n  }, [populationTypeValueGroupObs]);\n\n  useEffect(() => {\n    const sub1 = getHTSLocations().subscribe(\n      results => setHtsLocations(results),\n      error => createErrorHandler(),\n    );\n\n    const sub2 = getConcept(\n      populationTypeConceptUuid,\n      'custom:(uuid,display,answers:(uuid,display))',\n    ).subscribe(result => setPopulationTypeConcept(result));\n\n    const sub3 = openmrsObservableFetch('/ws/rest/v1/appui/session').subscribe((user: any) => {\n      setCurrentProvider(user.data?.currentProvider?.uuid);\n    });\n\n    let sub4 = null;\n    if (encounterUuid) {\n      sub4 = openmrsObservableFetch(`/ws/rest/v1/encounter/${encounterUuid}?v=${encounterRepresentation}`).subscribe(\n        response => {\n          setEncounter(response.data);\n        },\n      );\n    }\n    return () => {\n      sub1.unsubscribe();\n      sub2.unsubscribe();\n      sub3.unsubscribe();\n      sub4?.unsubscribe();\n      detach('hts-encounter-form-slot', 'hts-encounter-form-ext');\n    };\n  }, []);\n\n  useEffect(() => {\n    setFinalTestResult(evaluateFinalTestResult());\n  }, [testOneResult, confirmatoryTestResult]);\n\n  useEffect(() => {\n    if (testLocation) {\n      setLocationInvalid(false);\n    }\n  }, [testLocation]);\n\n  useEffect(() => {\n    setIsLoading(!(encounter ? !!encounter && !!populationTypeConcept : !!populationTypeConcept));\n  }, [encounter, populationTypeConcept]);\n\n  useEffect(() => {\n    if (encounter) {\n      setIsLoading(false);\n      // edit mode\n      setHTSDate(toDateObjectStrict(encounter.encounterDatetime));\n      setTestLocation({ uuid: encounter.location.uuid, display: encounter.location.name });\n      // Initialize patient consent\n      const rawPatientConsentVal = encounter.obs.find(obs => obs.concept.uuid === patientConsentConceptUuid).value;\n      // check if backend return a boolean value\n      if (typeof JSON.parse(JSON.stringify(rawPatientConsentVal)) === 'boolean') {\n        setPatientConsent(rawPatientConsentVal);\n      } else {\n        // then a concept that represents either 'True' or 'False' was returned\n        setPatientConsent(rawPatientConsentVal.name.name.toLowerCase() === 'true');\n      }\n      setPopulationTypeValueGroupObs(encounter.obs.filter(obs => obs.concept.uuid === populationTypeConceptUuid));\n\n      const testOneObs = encounter.obs.find(obs => obs.concept.uuid === testOneConceptUuid);\n      testOneObs &&\n        setTestOneResult({\n          concept: testOneObs.value.uuid,\n          name:\n            testOneObs.value.uuid === '1138AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'\n              ? 'Not Performed'\n              : testOneObs.value.name.name,\n        });\n\n      const confirmatoryTestObs = encounter.obs.find(obs => obs.concept.uuid === confirmatoryTestConceptUuid);\n      if (confirmatoryTestObs) {\n        setConfirmatoryTestResult({\n          concept: confirmatoryTestObs.value.uuid,\n          name:\n            confirmatoryTestObs.value.uuid === '1138AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'\n              ? 'Not Performed'\n              : confirmatoryTestObs.value.name.name,\n        });\n      }\n    }\n  }, [encounter]);\n\n  const evaluateFinalTestResult = () => {\n    if (confirmatoryTestResult && confirmatoryTestResult.name !== 'Not Performed') {\n      return confirmatoryTestResult;\n    } else if (testOneResult && testOneResult.name !== 'Not Performed') {\n      return testOneResult;\n    }\n    return null;\n  };\n\n  const recordPopulationTypeObs = (checked, id, event) => {\n    const obs = populationTypeValueGroupObs.find(obs => obs.value.uuid === event.currentTarget.value);\n    if (obs) {\n      return voidObs(checked, obs, event.currentTarget.value);\n    }\n    if (checked === true) {\n      populationTypesObs.push({\n        person: patient.id,\n        obsDatetime: htsDate,\n        concept: populationTypeConcept.uuid,\n        location: testLocation.uuid,\n        order: null,\n        groupMembers: [],\n        voided: false,\n        value: event.currentTarget.value,\n      });\n      setPopulationTypeObs(populationTypesObs);\n    } else {\n      setPopulationTypeObs(populationTypesObs.filter(obs => obs.value !== event.currentTarget.value));\n    }\n  };\n\n  const voidObs = (checked, obs, answerConcept) => {\n    if (!checked) {\n      setObsForRetire([...obsForRetire, obs]);\n    } else {\n      setObsForRetire(obsForRetire.filter(obs => obs.value.uuid !== answerConcept));\n    }\n  };\n\n  const handleSubmissionEnterMode = () => {\n    const enc: HSTEncounter = {\n      patient: patient.id,\n      encounterDatetime: htsDate,\n      location: testLocation.uuid,\n      encounterType: HTSEncounterType,\n      encounterProviders: [\n        {\n          provider: currentProvider,\n          encounterRole: htsEncounterRole,\n        },\n      ],\n      obs: [\n        {\n          person: patient.id,\n          obsDatetime: htsDate,\n          concept: patientConsentConceptUuid,\n          location: testLocation.uuid,\n          order: null,\n          groupMembers: [],\n          voided: false,\n          value: patientConsent,\n        },\n        {\n          person: patient.id,\n          obsDatetime: htsDate,\n          concept: testOneConceptUuid,\n          location: testLocation.uuid,\n          order: null,\n          groupMembers: [],\n          voided: false,\n          value: testOneResult.concept,\n        },\n        ...populationTypesObs,\n      ],\n    };\n    if (finalTestResult) {\n      enc.obs.push({\n        person: patient.id,\n        obsDatetime: htsDate,\n        concept: finalTestConceptUuid,\n        location: testLocation.uuid,\n        order: null,\n        groupMembers: [],\n        voided: false,\n        value: finalTestResult.concept,\n      });\n    }\n    if (confirmatoryTestResult) {\n      enc.obs.push({\n        person: patient.id,\n        obsDatetime: htsDate,\n        concept: confirmatoryTestConceptUuid,\n        location: testLocation.uuid,\n        order: null,\n        groupMembers: [],\n        voided: false,\n        value: confirmatoryTestResult.concept,\n      });\n    }\n    saveHTSEncounter(new AbortController(), enc).then(response => {\n      if (response.ok) {\n        if (state.updateParent) {\n          state.updateParent();\n        }\n        closeWorkspace();\n      }\n    });\n  };\n\n  const handleSubmissionEditMode = () => {\n    encounter.location = testLocation.uuid;\n    if (encounter.encounterProviders.findIndex(p => currentProvider === p.provider.uuid) === -1) {\n      encounter.encounterProviders = [\n        ...encounter.encounterProviders,\n        {\n          provider: currentProvider,\n          encounterRole: htsEncounterRole,\n        },\n      ];\n    }\n    // patient consent\n    const consentIndex = encounter.obs.findIndex(o => o.concept.uuid === patientConsentConceptUuid);\n    encounter.obs[consentIndex].value = patientConsent;\n    obsForRetire.forEach(obs => {\n      const index = encounter.obs.findIndex(o => o.value.uuid === obs.value.uuid);\n      encounter.obs[index]['voided'] = true;\n    });\n    encounter.obs = [...encounter.obs, ...populationTypesObs];\n    // test one\n    const testOneResultIndex = encounter.obs.findIndex(o => o.concept.uuid === testOneConceptUuid);\n    encounter.obs[testOneResultIndex].value = testOneResult.concept;\n    // confirmatory test\n    const confirmatoryTestResultIndex = encounter.obs.findIndex(o => o.concept.uuid === confirmatoryTestConceptUuid);\n    if (confirmatoryTestResultIndex !== -1) {\n      encounter.obs[confirmatoryTestResultIndex].value = confirmatoryTestResult.concept;\n    } else if (confirmatoryTestResult) {\n      encounter.obs.push({\n        person: patient.id,\n        obsDatetime: htsDate,\n        concept: confirmatoryTestConceptUuid,\n        location: testLocation.uuid,\n        order: null,\n        groupMembers: [],\n        voided: false,\n        value: confirmatoryTestResult.concept,\n      });\n    }\n    // final\n    const finalTestResultIndex = encounter.obs.findIndex(o => o.concept.uuid === finalTestConceptUuid);\n    if (finalTestResultIndex !== -1) {\n      encounter.obs[finalTestResultIndex].value = finalTestResult.concept;\n    } else if (finalTestResult) {\n      encounter.obs.push({\n        person: patient.id,\n        obsDatetime: htsDate,\n        concept: finalTestConceptUuid,\n        location: testLocation.uuid,\n        order: null,\n        groupMembers: [],\n        voided: false,\n        value: finalTestResult.concept,\n      });\n    }\n    saveHTSEncounter(new AbortController(), encounter, encounter.uuid).then(response => {\n      if (response.ok) {\n        if (state.updateParent) {\n          state.updateParent();\n        }\n        closeWorkspace();\n      }\n    });\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    // do some soft field validation\n    if (!testLocation) {\n      setLocationInvalid(true);\n      return;\n    }\n    if (encounter) {\n      handleSubmissionEditMode();\n    } else {\n      handleSubmissionEnterMode();\n    }\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      {patient && (\n        <>\n          <div className={styles.container}>\n            <PatientBanner patient={patient} />\n            {isLoading ? (\n              <LoadingIcon />\n            ) : (\n              <div id=\"content-wrapper\" className={styles.contentWrapper}>\n                <Section title=\"Patient Details\" index={1}>\n                  <div>\n                    <Toggle\n                      labelText=\"Patient consent\"\n                      labelA=\"Not received\"\n                      labelB=\"Received\"\n                      id=\"patient-consent\"\n                      className={styles.customToggle}\n                      toggled={patientConsent}\n                      onToggle={event => setPatientConsent(event)}\n                    />\n                  </div>\n                  <div className={styles.sectionOneRow}>\n                    {htsLocations && (\n                      <div className={styles.chooseLocationColumn}>\n                        <Dropdown\n                          id=\"communityOutreach\"\n                          titleText=\"Test Location\"\n                          label=\"Choose location\"\n                          items={htsLocations}\n                          itemToString={item => item.display}\n                          className={styles.dropDownOverrides}\n                          selectedItem={testLocation}\n                          onChange={({ selectedItem }) => {\n                            setTestLocation(selectedItem);\n                          }}\n                          invalid={locationInvalid}\n                          invalidText=\"This field is required\"\n                        />\n                      </div>\n                    )}\n                    <div className={styles.htsDateInputColumn}>\n                      <DatePicker\n                        datePickerType=\"simple\"\n                        className={styles.datePickerOverrides}\n                        onChange={([date]) => setHTSDate(date)}>\n                        <DatePickerInput\n                          placeholder=\"dd/mm/yyyy\"\n                          labelText=\"Date of HTS Test\"\n                          id=\"hts-date\"\n                          value={htsDate.toLocaleDateString(window.navigator.language)}\n                        />\n                      </DatePicker>\n                    </div>\n                    <div className={styles.idGenColumn}>\n                      <IdentifierGenerator />\n                    </div>\n                  </div>\n                  <div className={styles.populationTypeWrapper}>\n                    <fieldset>\n                      <legend className={styles.label}>Patient Population Type</legend>\n                      <div style={{ display: 'flex' }}>\n                        <div style={{ width: '100%' }}>\n                          <Checkbox\n                            labelText=\"Generation Population\"\n                            id=\"generation-pop\"\n                            className={styles.checkboxLabelOverride}\n                            value={populationTypeConcept.answers[0].uuid}\n                            onChange={(checked, id, event) => {\n                              setGeneralPop(checked);\n                              recordPopulationTypeObs(checked, id, event);\n                            }}\n                            checked={generalPop}\n                          />\n                          <Checkbox\n                            labelText=\"MSM\"\n                            id=\"msm\"\n                            className={styles.checkboxLabelOverride}\n                            value={populationTypeConcept.answers[1].uuid}\n                            onChange={(checked, id, event) => {\n                              setMSM(checked);\n                              recordPopulationTypeObs(checked, id, event);\n                            }}\n                            checked={msm}\n                          />\n                          <Checkbox\n                            labelText=\"FSW\"\n                            id=\"fsw\"\n                            className={styles.checkboxLabelOverride}\n                            value={populationTypeConcept.answers[2].uuid}\n                            onChange={(checked, id, event) => {\n                              setFSW(checked);\n                              recordPopulationTypeObs(checked, id, event);\n                            }}\n                            checked={fsw}\n                          />\n                        </div>\n                        <div style={{ width: '100%' }}>\n                          <Checkbox\n                            labelText=\"MSW\"\n                            id=\"msw\"\n                            className={styles.checkboxLabelOverride}\n                            value={populationTypeConcept.answers[3].uuid}\n                            onChange={(checked, id, event) => {\n                              setMSW(checked);\n                              recordPopulationTypeObs(checked, id, event);\n                            }}\n                            checked={msw}\n                          />\n                          <Checkbox\n                            labelText=\"PWID\"\n                            id=\"pwid\"\n                            className={styles.checkboxLabelOverride}\n                            value={populationTypeConcept.answers[4].uuid}\n                            onChange={(checked, id, event) => {\n                              setPWID(checked);\n                              recordPopulationTypeObs(checked, id, event);\n                            }}\n                            checked={pwid}\n                          />\n                        </div>\n                        <div style={{ width: '100%' }}>\n                          <Checkbox\n                            labelText=\"PWUD\"\n                            id=\"pwud\"\n                            className={styles.checkboxLabelOverride}\n                            value={populationTypeConcept.answers[5].uuid}\n                            onChange={(checked, id, event) => {\n                              setPWUD(checked);\n                              recordPopulationTypeObs(checked, id, event);\n                            }}\n                            checked={pwud}\n                          />\n                          <Checkbox\n                            labelText=\"Transgender\"\n                            id=\"transgender\"\n                            className={styles.checkboxLabelOverride}\n                            value={populationTypeConcept.answers[6].uuid}\n                            onChange={(checked, id, event) => {\n                              setTrangender(checked);\n                              recordPopulationTypeObs(checked, id, event);\n                            }}\n                            checked={trangender}\n                          />\n                        </div>\n                      </div>\n                    </fieldset>\n                  </div>\n                </Section>\n                <Section title=\"HIV Testing\" index={2}>\n                  <div className={styles.label}>Test 1</div>\n                  <div className={styles.contentSwitchWrapper}>\n                    <ContentSwitcher\n                      onChange={({ name, text }) => {\n                        setTestOneResult({\n                          concept: name.toString(),\n                          name: text,\n                        });\n                      }}\n                      selectedIndex={possibleHSTCodedAnswers.indexOf(testOneResult.concept)}\n                      size=\"xl\">\n                      <Switch name=\"1138AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" text=\"Not Performed\" />\n                      <Switch name=\"664AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" text=\"Negative\" />\n                      <Switch name=\"703AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" text=\"Positive\" />\n                    </ContentSwitcher>\n                  </div>\n                  <div className={styles.label}>Confirmation Test</div>\n                  <div className={styles.contentSwitchWrapper}>\n                    <ContentSwitcher\n                      onChange={({ name, text }) => {\n                        setConfirmatoryTestResult({\n                          concept: name,\n                          name: text,\n                        });\n                      }}\n                      selectedIndex={possibleHSTCodedAnswers.indexOf(\n                        confirmatoryTestResult\n                          ? confirmatoryTestResult.concept\n                          : '1138AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA',\n                      )}>\n                      <Switch\n                        name=\"1138AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n                        text=\"Not Performed\"\n                        disabled={!conductConfirmatoryTest}\n                      />\n                      <Switch\n                        name=\"664AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n                        text=\"Negative\"\n                        disabled={!conductConfirmatoryTest}\n                      />\n                      <Switch\n                        name=\"703AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n                        text=\"Positive\"\n                        disabled={!conductConfirmatoryTest}\n                      />\n                    </ContentSwitcher>\n                  </div>\n                  <div className={styles.label}>Final Result</div>\n                  {finalTestResult ? <h6 className={styles.label}>{finalTestResult.name}</h6> : <EmptyValue />}\n                </Section>\n              </div>\n            )}\n          </div>\n          <div className={styles.submit}>\n            <ButtonSet className={styles.submitButtonsOverrides}>\n              <Button kind=\"secondary\" onClick={() => closeWorkspace()}>\n                Cancel\n              </Button>\n              <Button kind=\"primary\" type=\"submit\">\n                Save &amp; Close\n              </Button>\n            </ButtonSet>\n          </div>\n        </>\n      )}\n    </Form>\n  );\n};\n\nconst Section = ({ title, children, index }) => {\n  return (\n    <div className={styles.section}>\n      <FormGroup legendText={''}>\n        <h3 className={styles.sectionHeading}>\n          {index}. {title}\n        </h3>\n        {children}\n      </FormGroup>\n    </div>\n  );\n};\n\nconst EmptyValue = () => {\n  return (\n    <div>\n      <span style={{ fontSize: '1.75rem' }}>- -</span>\n    </div>\n  );\n};\n\nexport default HtsEncounterForm;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-light-01: #007d79}.esm-ohri-hiv__identifier-generator__productiveHeading01___1EXZf{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.esm-ohri-hiv__identifier-generator__productiveHeading02___3_kH1{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.esm-ohri-hiv__identifier-generator__productiveHeading03___1bW2c{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.esm-ohri-hiv__identifier-generator__productiveHeading04___3rJx6{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.esm-ohri-hiv__identifier-generator__productiveHeading05___3ZWaH{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}.esm-ohri-hiv__identifier-generator__productiveHeading06___1UM86{font-size:2rem;font-weight:300;line-height:1.199;letter-spacing:0}.esm-ohri-hiv__identifier-generator__bodyShort01___1-fRd{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.esm-ohri-hiv__identifier-generator__helperText01___3xn_4{font-size:.75rem;line-height:1.34;letter-spacing:.32px}.esm-ohri-hiv__identifier-generator__bodyShort02___35PPQ{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.esm-ohri-hiv__identifier-generator__bodyLong01___gKtzP{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.esm-ohri-hiv__identifier-generator__bodyLong02___-BpXf{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}.esm-ohri-hiv__identifier-generator__label01___1lqGf{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.esm-ohri-hiv__identifier-generator__text01___2grCO{color:#161616}.esm-ohri-hiv__identifier-generator__text02___26ckn{color:#525252}aside{background-color:#fff !important}.esm-ohri-hiv__identifier-generator__rotate___1KCym{animation:esm-ohri-hiv__identifier-generator__rotation___gOaqs 2s infinite linear}.esm-ohri-hiv__identifier-generator__renewSVG___1b5vN{width:1.5rem;fill:#0f62fe}.esm-ohri-hiv__identifier-generator__renewSVG___1b5vN:hover{cursor:pointer;fill:#525252}@keyframes esm-ohri-hiv__identifier-generator__rotation___gOaqs{from{transform:rotate(0deg)}to{transform:rotate(359deg)}}.esm-ohri-hiv__identifier-generator__idLabel___2GT6p{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px;color:#525252;font-size:1.1rem}.esm-ohri-hiv__identifier-generator__idText___K3Uvj{font-size:1.3rem}.esm-ohri-hiv__identifier-generator__container___1bL6M{display:flex;align-items:center}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"productiveHeading01\": \"esm-ohri-hiv__identifier-generator__productiveHeading01___1EXZf\",\n\t\"productiveHeading02\": \"esm-ohri-hiv__identifier-generator__productiveHeading02___3_kH1\",\n\t\"productiveHeading03\": \"esm-ohri-hiv__identifier-generator__productiveHeading03___1bW2c\",\n\t\"productiveHeading04\": \"esm-ohri-hiv__identifier-generator__productiveHeading04___3rJx6\",\n\t\"productiveHeading05\": \"esm-ohri-hiv__identifier-generator__productiveHeading05___3ZWaH\",\n\t\"productiveHeading06\": \"esm-ohri-hiv__identifier-generator__productiveHeading06___1UM86\",\n\t\"bodyShort01\": \"esm-ohri-hiv__identifier-generator__bodyShort01___1-fRd\",\n\t\"helperText01\": \"esm-ohri-hiv__identifier-generator__helperText01___3xn_4\",\n\t\"bodyShort02\": \"esm-ohri-hiv__identifier-generator__bodyShort02___35PPQ\",\n\t\"bodyLong01\": \"esm-ohri-hiv__identifier-generator__bodyLong01___gKtzP\",\n\t\"bodyLong02\": \"esm-ohri-hiv__identifier-generator__bodyLong02___-BpXf\",\n\t\"label01\": \"esm-ohri-hiv__identifier-generator__label01___1lqGf\",\n\t\"text01\": \"esm-ohri-hiv__identifier-generator__text01___2grCO\",\n\t\"text02\": \"esm-ohri-hiv__identifier-generator__text02___26ckn\",\n\t\"rotate\": \"esm-ohri-hiv__identifier-generator__rotate___1KCym\",\n\t\"rotation\": \"esm-ohri-hiv__identifier-generator__rotation___gOaqs\",\n\t\"renewSVG\": \"esm-ohri-hiv__identifier-generator__renewSVG___1b5vN\",\n\t\"idLabel\": \"esm-ohri-hiv__identifier-generator__idLabel___2GT6p\",\n\t\"idText\": \"esm-ohri-hiv__identifier-generator__idText___K3Uvj\",\n\t\"container\": \"esm-ohri-hiv__identifier-generator__container___1bL6M\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".esm-ohri-hiv__loading-component__centerLoadingSVG___Vme8M{display:flex;width:100vw;height:100vh;justify-content:center;align-items:center}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"centerLoadingSVG\": \"esm-ohri-hiv__loading-component__centerLoadingSVG___Vme8M\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-light-01: #007d79}.esm-ohri-hiv__patient-banner__productiveHeading01___3IV1N{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.esm-ohri-hiv__patient-banner__productiveHeading02___Fe3xU{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.esm-ohri-hiv__patient-banner__productiveHeading03___3sHJI{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.esm-ohri-hiv__patient-banner__productiveHeading04___1nh3V{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.esm-ohri-hiv__patient-banner__productiveHeading05___2Q8eh{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}.esm-ohri-hiv__patient-banner__productiveHeading06___2OEos{font-size:2rem;font-weight:300;line-height:1.199;letter-spacing:0}.esm-ohri-hiv__patient-banner__bodyShort01___1St_2{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.esm-ohri-hiv__patient-banner__helperText01___3fF-O{font-size:.75rem;line-height:1.34;letter-spacing:.32px}.esm-ohri-hiv__patient-banner__bodyShort02___3XbWf{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.esm-ohri-hiv__patient-banner__bodyLong01___1xcA0{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.esm-ohri-hiv__patient-banner__bodyLong02___1B3y2{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}.esm-ohri-hiv__patient-banner__label01___3xCQ6{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.esm-ohri-hiv__patient-banner__text01___E6Jpi{color:#161616}.esm-ohri-hiv__patient-banner__text02___1FL_i{color:#525252}aside{background-color:#fff !important}.esm-ohri-hiv__patient-banner__patientBannerContainer___3eDTi{align-items:baseline;padding:0;width:inherit}.esm-ohri-hiv__patient-banner__patientBannerContainer___3eDTi>div{width:100%}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"productiveHeading01\": \"esm-ohri-hiv__patient-banner__productiveHeading01___3IV1N\",\n\t\"productiveHeading02\": \"esm-ohri-hiv__patient-banner__productiveHeading02___Fe3xU\",\n\t\"productiveHeading03\": \"esm-ohri-hiv__patient-banner__productiveHeading03___3sHJI\",\n\t\"productiveHeading04\": \"esm-ohri-hiv__patient-banner__productiveHeading04___1nh3V\",\n\t\"productiveHeading05\": \"esm-ohri-hiv__patient-banner__productiveHeading05___2Q8eh\",\n\t\"productiveHeading06\": \"esm-ohri-hiv__patient-banner__productiveHeading06___2OEos\",\n\t\"bodyShort01\": \"esm-ohri-hiv__patient-banner__bodyShort01___1St_2\",\n\t\"helperText01\": \"esm-ohri-hiv__patient-banner__helperText01___3fF-O\",\n\t\"bodyShort02\": \"esm-ohri-hiv__patient-banner__bodyShort02___3XbWf\",\n\t\"bodyLong01\": \"esm-ohri-hiv__patient-banner__bodyLong01___1xcA0\",\n\t\"bodyLong02\": \"esm-ohri-hiv__patient-banner__bodyLong02___1B3y2\",\n\t\"label01\": \"esm-ohri-hiv__patient-banner__label01___3xCQ6\",\n\t\"text01\": \"esm-ohri-hiv__patient-banner__text01___E6Jpi\",\n\t\"text02\": \"esm-ohri-hiv__patient-banner__text02___1FL_i\",\n\t\"patientBannerContainer\": \"esm-ohri-hiv__patient-banner__patientBannerContainer___3eDTi\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-light-01: #007d79}.esm-ohri-hiv__hts-encounter-form__productiveHeading01___1db7g{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.esm-ohri-hiv__hts-encounter-form__productiveHeading02___3rf9G{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.esm-ohri-hiv__hts-encounter-form__productiveHeading03___BG9zb{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.esm-ohri-hiv__hts-encounter-form__productiveHeading04___1VYoJ{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.esm-ohri-hiv__hts-encounter-form__productiveHeading05___3FQhf{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}.esm-ohri-hiv__hts-encounter-form__productiveHeading06___2rqrT{font-size:2rem;font-weight:300;line-height:1.199;letter-spacing:0}.esm-ohri-hiv__hts-encounter-form__bodyShort01___2QIq3{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.esm-ohri-hiv__hts-encounter-form__helperText01___3xpA1{font-size:.75rem;line-height:1.34;letter-spacing:.32px}.esm-ohri-hiv__hts-encounter-form__bodyShort02___1zrwK{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.esm-ohri-hiv__hts-encounter-form__bodyLong01___3n-Dx{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.esm-ohri-hiv__hts-encounter-form__bodyLong02___11GFV{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}.esm-ohri-hiv__hts-encounter-form__label01___1SS2V{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.esm-ohri-hiv__hts-encounter-form__text01___1LVgQ{color:#161616}.esm-ohri-hiv__hts-encounter-form__text02___3s0tt{color:#525252}aside{background-color:#fff !important}.esm-ohri-hiv__hts-encounter-form__container___24Lff{background-color:#ededed;height:100%;width:100%;font-family:\\\"IBM Plex Sans\\\"}.esm-ohri-hiv__hts-encounter-form__contentWrapper___2MpYs{margin-left:1rem;padding-bottom:4rem}.esm-ohri-hiv__hts-encounter-form__sectionHeading___qB9RA{font-size:1.3rem;font-weight:600;line-height:1.375;letter-spacing:.18px;color:#161616;margin-bottom:1.7rem}.esm-ohri-hiv__hts-encounter-form__sectionLabel___AbZ20{font-size:1.1rem}.esm-ohri-hiv__hts-encounter-form__sectionOneRow___2GiXh{margin-top:3rem;display:flex}.esm-ohri-hiv__hts-encounter-form__chooseLocationColumn___3Oji3{width:30%;margin-right:2rem}.esm-ohri-hiv__hts-encounter-form__htsDateInputColumn___1DaIi{width:15%}.esm-ohri-hiv__hts-encounter-form__idGenColumn___3qvKc{width:30%}.esm-ohri-hiv__hts-encounter-form__customToggle___3eC2m label,.esm-ohri-hiv__hts-encounter-form__sectionOneRow___2GiXh label{font-size:1.1rem !important}.esm-ohri-hiv__hts-encounter-form__customToggle___3eC2m label span{font-size:1.35rem !important}.esm-ohri-hiv__hts-encounter-form__dropDownOverrides___2Hg_s{max-height:5rem;height:4rem}.esm-ohri-hiv__hts-encounter-form__dropDownOverrides___2Hg_s span{font-size:1.1rem}.esm-ohri-hiv__hts-encounter-form__datePickerOverrides___3gCkn input{max-height:5rem;height:4rem;width:9rem !important;font-size:1.1rem}.esm-ohri-hiv__hts-encounter-form__datePickerOverrides___3gCkn label{width:100% !important}.esm-ohri-hiv__hts-encounter-form__populationTypeWrapper___3zhX_{margin-top:3rem}.esm-ohri-hiv__hts-encounter-form__label___v31XS{width:100%;height:1rem;font-size:1.1rem;line-height:1.33;letter-spacing:.32px;color:#525252;margin-bottom:1rem}.esm-ohri-hiv__hts-encounter-form__checkboxLabelOverride___1ct4C{margin-bottom:1rem}.esm-ohri-hiv__hts-encounter-form__checkboxLabelOverride___1ct4C span{color:#161616;height:1.125rem;margin:0 0px .063rem .5rem;font-family:\\\"IBM Plex Sans\\\";font-size:1.1rem;line-height:1;letter-spacing:1px}.esm-ohri-hiv__hts-encounter-form__contentSwitchWrapper___2iDRG{margin-bottom:3rem;width:90%}.esm-ohri-hiv__hts-encounter-form__contentSwitchWrapper___2iDRG button{font-size:1.1rem !important}.esm-ohri-hiv__hts-encounter-form__submit___1WfuX{display:flex;justify-content:center;margin:2rem 0 2rem 0}.esm-ohri-hiv__hts-encounter-form__submitButtonsOverrides___2rrUs button{max-width:28rem !important;width:25rem !important;max-height:4rem !important;height:3.3rem !important;font-size:1rem !important;font-family:\\\"IBM Plex Sans\\\" !important}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"productiveHeading01\": \"esm-ohri-hiv__hts-encounter-form__productiveHeading01___1db7g\",\n\t\"productiveHeading02\": \"esm-ohri-hiv__hts-encounter-form__productiveHeading02___3rf9G\",\n\t\"productiveHeading03\": \"esm-ohri-hiv__hts-encounter-form__productiveHeading03___BG9zb\",\n\t\"productiveHeading04\": \"esm-ohri-hiv__hts-encounter-form__productiveHeading04___1VYoJ\",\n\t\"productiveHeading05\": \"esm-ohri-hiv__hts-encounter-form__productiveHeading05___3FQhf\",\n\t\"productiveHeading06\": \"esm-ohri-hiv__hts-encounter-form__productiveHeading06___2rqrT\",\n\t\"bodyShort01\": \"esm-ohri-hiv__hts-encounter-form__bodyShort01___2QIq3\",\n\t\"helperText01\": \"esm-ohri-hiv__hts-encounter-form__helperText01___3xpA1\",\n\t\"bodyShort02\": \"esm-ohri-hiv__hts-encounter-form__bodyShort02___1zrwK\",\n\t\"bodyLong01\": \"esm-ohri-hiv__hts-encounter-form__bodyLong01___3n-Dx\",\n\t\"bodyLong02\": \"esm-ohri-hiv__hts-encounter-form__bodyLong02___11GFV\",\n\t\"label01\": \"esm-ohri-hiv__hts-encounter-form__label01___1SS2V\",\n\t\"text01\": \"esm-ohri-hiv__hts-encounter-form__text01___1LVgQ\",\n\t\"text02\": \"esm-ohri-hiv__hts-encounter-form__text02___3s0tt\",\n\t\"container\": \"esm-ohri-hiv__hts-encounter-form__container___24Lff\",\n\t\"contentWrapper\": \"esm-ohri-hiv__hts-encounter-form__contentWrapper___2MpYs\",\n\t\"sectionHeading\": \"esm-ohri-hiv__hts-encounter-form__sectionHeading___qB9RA\",\n\t\"sectionLabel\": \"esm-ohri-hiv__hts-encounter-form__sectionLabel___AbZ20\",\n\t\"sectionOneRow\": \"esm-ohri-hiv__hts-encounter-form__sectionOneRow___2GiXh\",\n\t\"chooseLocationColumn\": \"esm-ohri-hiv__hts-encounter-form__chooseLocationColumn___3Oji3\",\n\t\"htsDateInputColumn\": \"esm-ohri-hiv__hts-encounter-form__htsDateInputColumn___1DaIi\",\n\t\"idGenColumn\": \"esm-ohri-hiv__hts-encounter-form__idGenColumn___3qvKc\",\n\t\"customToggle\": \"esm-ohri-hiv__hts-encounter-form__customToggle___3eC2m\",\n\t\"dropDownOverrides\": \"esm-ohri-hiv__hts-encounter-form__dropDownOverrides___2Hg_s\",\n\t\"datePickerOverrides\": \"esm-ohri-hiv__hts-encounter-form__datePickerOverrides___3gCkn\",\n\t\"populationTypeWrapper\": \"esm-ohri-hiv__hts-encounter-form__populationTypeWrapper___3zhX_\",\n\t\"label\": \"esm-ohri-hiv__hts-encounter-form__label___v31XS\",\n\t\"checkboxLabelOverride\": \"esm-ohri-hiv__hts-encounter-form__checkboxLabelOverride___1ct4C\",\n\t\"contentSwitchWrapper\": \"esm-ohri-hiv__hts-encounter-form__contentSwitchWrapper___2iDRG\",\n\t\"submit\": \"esm-ohri-hiv__hts-encounter-form__submit___1WfuX\",\n\t\"submitButtonsOverrides\": \"esm-ohri-hiv__hts-encounter-form__submitButtonsOverrides___2rrUs\"\n};\nmodule.exports = exports;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","className","styles","Loading","description","withOverlay","small","PatientBanner","patient","ExtensionSlot","extensionSlotName","state","patientUuid","id","basePath","encounterRepresentation","finalHIVCodeConcept","finalPositiveHIVValueConcept","computedHIV_StatusConcept","linkedToCareCodeConcept","linkedToCareYesValueConcept","preTestCounsellingCohort","waitingForHIVTestCohort","postTestCounsellingCohort","clientsEnrolledToCare","todayzAppointmentsCT","careAndTreatmentEncounterType","patientTypeEnrollmentConcept","studyPopulationTypeConcept","dateOfHIVDiagnosisConcept","clinicalVisitEncounterType","dateOfEncounterConcept","visitTypeConcept","regimenConcept","expressCareProgramStatusConcept","returnVisitDateConcept","htsRetrospectiveEncounterType","hivTestResultConceptUUID","hivLabResultsEncounterType_UUID","hivCD4Result_UUID","hivCD4Count_UUID","saveHTSEncounter","abortController","payload","encounterUuid","url","openmrsFetch","headers","method","body","signal","IdentifierGenerator","style","width","onClick","populationTypeConceptUuid","testOneConceptUuid","patientConsentConceptUuid","confirmatoryTestConceptUuid","finalTestConceptUuid","htsEncounterRole","possibleHSTCodedAnswers","Section","title","children","index","FormGroup","legendText","EmptyValue","fontSize","closeWorkspace","props","useCurrentPatient","isLoading","setIsLoading","useState","encounter","setEncounter","patientConsent","setPatientConsent","testLocation","setTestLocation","locationInvalid","setLocationInvalid","htsLocations","setHtsLocations","htsDate","setHTSDate","Date","populationTypeConcept","setPopulationTypeConcept","populationTypesObs","setPopulationTypeObs","testOneResult","setTestOneResult","concept","name","confirmatoryTestResult","setConfirmatoryTestResult","finalTestResult","setFinalTestResult","currentProvider","setCurrentProvider","conductConfirmatoryTest","populationTypeValueGroupObs","setPopulationTypeValueGroupObs","obsForRetire","setObsForRetire","generalPop","setGeneralPop","msm","setMSM","fsw","setFSW","msw","setMSW","pwid","setPWID","pwud","setPWUD","trangender","setTrangender","useEffect","length","selectedPopulationTypeUuids","map","obs","value","uuid","answers","forEach","selected","includes","sub1","openmrsObservableFetch","pipe","data","subscribe","results","error","createErrorHandler","sub2","response","result","sub3","user","sub4","unsubscribe","detach","evaluateFinalTestResult","toDateObjectStrict","encounterDatetime","location","display","rawPatientConsentVal","find","JSON","parse","stringify","toLowerCase","filter","testOneObs","confirmatoryTestObs","recordPopulationTypeObs","checked","event","currentTarget","voidObs","push","person","obsDatetime","order","groupMembers","voided","answerConcept","Form","onSubmit","preventDefault","encounterProviders","findIndex","p","provider","encounterRole","consentIndex","o","testOneResultIndex","confirmatoryTestResultIndex","finalTestResultIndex","AbortController","then","ok","updateParent","handleSubmissionEditMode","enc","encounterType","handleSubmissionEnterMode","Toggle","labelText","labelA","labelB","toggled","onToggle","Dropdown","titleText","label","items","itemToString","item","selectedItem","onChange","invalid","invalidText","DatePicker","datePickerType","date","DatePickerInput","placeholder","toLocaleDateString","window","navigator","language","Checkbox","ContentSwitcher","text","toString","selectedIndex","indexOf","size","Switch","disabled","ButtonSet","Button","kind","type","exports","___CSS_LOADER_API_IMPORT___","module","locals"],"sourceRoot":""}