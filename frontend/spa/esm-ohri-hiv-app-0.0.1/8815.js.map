{"version":3,"file":"8815.js","mappings":"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","sources":["webpack://esm-ohri-hiv-app/./src/components/empty-state/table-empty-state.component.tsx","webpack://esm-ohri-hiv-app/./src/pages/hts/home/summary-tiles/summary-tile.scss?82c2","webpack://esm-ohri-hiv-app/./src/pages/hts/home/summary-tiles/utils.ts","webpack://esm-ohri-hiv-app/./src/pages/hts/home/summary-tiles/today-client-list-tile.component.tsx","webpack://esm-ohri-hiv-app/./src/pages/hts/home/summary-tiles/positive-in-last-14-days-list-tile.component.tsx","webpack://esm-ohri-hiv-app/./src/pages/hts/home/summary-tiles/linked-to-care-in-last-14-days-list-tile.component.tsx","webpack://esm-ohri-hiv-app/./src/pages/hts/home/summary-tiles/hts-summary-tiles.component.tsx","webpack://esm-ohri-hiv-app/./src/pages/hts/home/summary-tiles/summary-tile.scss"],"sourcesContent":["import {\n  DataTable,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from 'carbon-components-react';\nimport React from 'react';\n\nconst TableEmptyState: React.FC<{ tableHeaders: Array<{ key: string; header: string }>; message: string }> = ({\n  tableHeaders,\n  message,\n}) => {\n  return (\n    <div style={{ marginLeft: '-16px' }}>\n      <DataTable rows={[]} headers={tableHeaders} isSortable={true} size=\"short\" useZebraStyles={true}>\n        {({ headers, getHeaderProps, getTableProps }) => (\n          <TableContainer>\n            <Table {...getTableProps()}>\n              <TableHead>\n                <TableRow>\n                  {headers.map(header => (\n                    <TableHeader\n                      {...getHeaderProps({\n                        header,\n                        isSortable: header.isSortable,\n                      })}>\n                      {header.header?.content ?? header.header}\n                    </TableHeader>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell colSpan={tableHeaders.length}>{message}</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n      </DataTable>\n    </div>\n  );\n};\n\nexport default TableEmptyState;\n","\n      import API from \"!../../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./summary-tile.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./summary-tile.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","export const filterFHIRPatientsByName = (searchTerm: string, patients: Array<any>) => {\n    return patients.filter(\n      patient =>\n        `${patient.name[0].given.join(' ')} ${patient.name[0].family}`.toLowerCase().search(searchTerm.toLowerCase()) !==\n        -1,\n    );\n  };\n  ","import { age, attach, ExtensionSlot } from '@openmrs/esm-framework';\nimport { capitalize } from 'lodash';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { fetchTodayClients } from '../../../../api/api';\nimport EmptyState from '../../../../components/empty-state/empty-state.component';\nimport TableEmptyState from '../../../../components/empty-state/table-empty-state.component';\nimport { basePath } from '../../../../constants';\nimport { filterFHIRPatientsByName } from './utils';\n\nexport const columns = [\n  {\n    key: 'name',\n    header: 'Name',\n    getValue: patient => {\n      return `${patient.name[0].given.join(' ')} ${patient.name[0].family}`;\n    },\n    link: {\n      getUrl: patient => `${basePath}${patient.id}/chart`,\n    },\n  },\n  {\n    key: 'gender',\n    header: 'Sex',\n    getValue: patient => {\n      return capitalize(patient.gender);\n    },\n  },\n  {\n    key: 'age',\n    header: 'Age',\n    getValue: patient => {\n      return age(patient.birthDate);\n    },\n  },\n  {\n    key: 'phoneNumber',\n    header: 'Phone Number',\n    getValue: patient => {\n      return '--';\n    },\n  },\n  {\n    key: 'dateOfEncounter',\n    header: 'Date Of Encounter',\n    getValue: patient => {\n      return '--';\n    },\n  },\n  {\n    key: 'location',\n    header: 'Location',\n    getValue: patient => {\n      return '--';\n    },\n  },\n  {\n    key: 'provider',\n    header: 'Provider',\n    getValue: patient => {\n      return '--';\n    },\n  },\n  {\n    key: 'finalHivResult',\n    header: 'Final HIV Result',\n    getValue: patient => {\n      return '--';\n    },\n  },\n  {\n    key: 'currentWaitingList',\n    header: 'Current Waiting List',\n    getValue: patient => {\n      return '--';\n    },\n  },\n  {\n    key: 'id',\n    header: 'Patient ID',\n    getValue: patient => {\n      return patient.identifier[0].value;\n    },\n  },\n];\nexport const TodaysClientList: React.FC<{}> = () => {\n  const [patients, setPatients] = useState([]);\n  const [totalPatientCount, setTotalPatientCount] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const [searchTerm, setSearchTerm] = useState(null);\n  const [counter, setCounter] = useState(0);\n  const [filteredResults, setFilteredResults] = useState([]);\n  const [filteredResultsCounts, setFilteredResultsCounts] = useState(0);\n\n  useEffect(() => {\n    fetchTodayClients().then((response: Array<any>) => {\n      setPatients(response.map(pat => pat.data));\n      setTotalPatientCount(response.length);\n      setIsLoading(false);\n    });\n  }, [pageSize, currentPage]);\n\n  useEffect(() => {\n    attach('today-clients-table-slot', 'patient-table');\n  }, []);\n\n  const pagination = useMemo(() => {\n    return {\n      usePagination: false,\n      currentPage: currentPage,\n      onChange: props => {\n        setCurrentPage(props.page);\n        setPageSize(props.pageSize);\n      },\n      pageSize: pageSize,\n      totalItems: searchTerm ? filteredResultsCounts : totalPatientCount,\n    };\n  }, [currentPage, filteredResultsCounts, pageSize, totalPatientCount, searchTerm]);\n\n  const handleSearch = useCallback(\n    searchTerm => {\n      setSearchTerm(searchTerm);\n      if (searchTerm) {\n        const filtrate = filterFHIRPatientsByName(searchTerm, patients);\n        setFilteredResults(filtrate);\n        setFilteredResultsCounts(filtrate.length);\n      }\n    },\n    [patients],\n  );\n\n  const state = useMemo(\n    () => ({\n      patients: searchTerm ? filteredResults : patients,\n      columns,\n      search: { placeHolder: 'Search client list', onSearch: handleSearch, currentSearchTerm: searchTerm },\n      pagination,\n      isLoading,\n      autoFocus: true,\n    }),\n    [searchTerm, filteredResults, patients, handleSearch, pagination, isLoading],\n  );\n\n  useEffect(() => {\n    setCounter(counter + 1);\n  }, [state]);\n\n  return (\n    <div style={{ width: '100%', marginBottom: '2rem' }}>\n      {!isLoading && !patients.length ? (\n        <TableEmptyState tableHeaders={columns} message=\"There are no patients in this list.\" />\n      ) : (\n        <ExtensionSlot extensionSlotName=\"today-clients-table-slot\" state={state} key={counter} />\n      )}\n    </div>\n  );\n};\n","import { age, attach, detach, ExtensionSlot } from '@openmrs/esm-framework';\nimport { capitalize } from 'lodash';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { fetchPatientsFromObservationCodeConcept, fetchTodayClients } from '../../../../api/api';\nimport EmptyState from '../../../../components/empty-state/empty-state.component';\nimport { filterFHIRPatientsByName } from './utils';\nimport { basePath, finalHIVCodeConcept, finalPositiveHIVValueConcept } from '../../../../constants';\nimport TableEmptyState from '../../../../components/empty-state/table-empty-state.component';\n\nexport const columns = [\n  {\n    key: 'name',\n    header: 'Name',\n    getValue: patient => {\n      return `${patient.name[0].given.join(' ')} ${patient.name[0].family}`;\n    },\n    link: {\n      getUrl: patient => `${basePath}${patient.id}/chart`,\n    },\n  },\n  {\n    key: 'gender',\n    header: 'Sex',\n    getValue: patient => {\n      return capitalize(patient.gender);\n    },\n  },\n  {\n    key: 'age',\n    header: 'Age',\n    getValue: patient => {\n      return age(patient.birthDate);\n    },\n  },\n  {\n    key: 'phoneNumber',\n    header: 'Phone Number',\n    getValue: patient => {\n      return '--';\n    },\n  },\n  {\n    key: 'dateOfEncounter',\n    header: 'Date Of Encounter',\n    getValue: patient => {\n      return '--';\n    },\n  },\n  {\n    key: 'location',\n    header: 'Location',\n    getValue: patient => {\n      return '--';\n    },\n  },\n  {\n    key: 'finalHivResult',\n    header: 'Final HIV Result',\n    getValue: patient => {\n      return '--';\n    },\n  },\n  {\n    key: 'linkedToCare',\n    header: 'Linked To Care',\n    getValue: patient => {\n      return 'Yes/No';\n    },\n  },\n  {\n    key: 'id',\n    header: 'Patient ID',\n    getValue: patient => {\n      return patient.identifier[0].value;\n    },\n  },\n];\nexport const PositiveInLast14Days: React.FC<{}> = () => {\n  const [patients, setPatients] = useState([]);\n  const [totalPatientCount, setTotalPatientCount] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const [searchTerm, setSearchTerm] = useState(null);\n  const [counter, setCounter] = useState(0);\n  const [filteredResults, setFilteredResults] = useState([]);\n  const [filteredResultsCounts, setFilteredResultsCounts] = useState(0);\n\n  useEffect(() => {\n    fetchPatientsFromObservationCodeConcept(finalHIVCodeConcept, finalPositiveHIVValueConcept, 14).then(\n      (response: Array<any>) => {\n        setPatients(response.map(pat => pat.data));\n        setTotalPatientCount(response.length);\n        setIsLoading(false);\n      },\n    );\n  }, [pageSize, currentPage]);\n\n  useEffect(() => {\n    attach('positive-in-last-14-days-table-slot', 'patient-table');\n    return () => {\n      detach('positive-in-last-14-days-table-slot', 'patient-table');\n    };\n  }, []);\n\n  const pagination = useMemo(() => {\n    return {\n      usePagination: false,\n      currentPage: currentPage,\n      onChange: props => {\n        setCurrentPage(props.page);\n        setPageSize(props.pageSize);\n      },\n      pageSize: pageSize,\n      totalItems: searchTerm ? filteredResultsCounts : totalPatientCount,\n    };\n  }, [currentPage, filteredResultsCounts, pageSize, totalPatientCount, searchTerm]);\n\n  const handleSearch = useCallback(\n    searchTerm => {\n      setSearchTerm(searchTerm);\n      if (searchTerm) {\n        const filtrate = filterFHIRPatientsByName(searchTerm, patients);\n        setFilteredResults(filtrate);\n        setFilteredResultsCounts(filtrate.length);\n      }\n    },\n    [patients],\n  );\n\n  const state = useMemo(\n    () => ({\n      patients: searchTerm ? filteredResults : patients,\n      columns,\n      search: { placeHolder: 'Search client list', onSearch: handleSearch, currentSearchTerm: searchTerm },\n      pagination,\n      isLoading,\n      autoFocus: true,\n    }),\n    [searchTerm, filteredResults, patients, handleSearch, pagination, isLoading],\n  );\n\n  useEffect(() => {\n    setCounter(counter + 1);\n  }, [state]);\n\n  return (\n    <div style={{ width: '100%', marginBottom: '2rem' }}>\n      {!isLoading && !patients.length ? (\n        <TableEmptyState tableHeaders={columns} message=\"There are no patients in this list.\" />\n      ) : (\n        <ExtensionSlot extensionSlotName=\"positive-in-last-14-days-table-slot\" state={state} key={counter} />\n      )}\n    </div>\n  );\n};\n","import { age, attach, detach, ExtensionSlot } from '@openmrs/esm-framework';\nimport { capitalize } from 'lodash';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { fetchPatientsFromObservationCodeConcept, fetchTodayClients } from '../../../../api/api';\nimport EmptyState from '../../../../components/empty-state/empty-state.component';\nimport { filterFHIRPatientsByName } from './utils';\nimport { basePath, linkedToCareCodeConcept, linkedToCareYesValueConcept } from '../../../../constants';\nimport TableEmptyState from '../../../../components/empty-state/table-empty-state.component';\n\nexport const columns = [\n  {\n    key: 'name',\n    header: 'Name',\n    getValue: patient => {\n      return `${patient.name[0].given.join(' ')} ${patient.name[0].family}`;\n    },\n    link: {\n      getUrl: patient => `${basePath}${patient.id}/chart`,\n    },\n  },\n  {\n    key: 'gender',\n    header: 'Sex',\n    getValue: patient => {\n      return capitalize(patient.gender);\n    },\n  },\n  {\n    key: 'age',\n    header: 'Age',\n    getValue: patient => {\n      return age(patient.birthDate);\n    },\n  },\n  {\n    key: 'phoneNumber',\n    header: 'Phone Number',\n    getValue: patient => {\n      return '--';\n    },\n  },\n  {\n    key: 'dateOfEncounter',\n    header: 'Date Of Encounter',\n    getValue: patient => {\n      return '--';\n    },\n  },\n  {\n    key: 'location',\n    header: 'Location',\n    getValue: patient => {\n      return '--';\n    },\n  },\n  {\n    key: 'finalHivResult',\n    header: 'Final HIV Result',\n    getValue: patient => {\n      return '--';\n    },\n  },\n  {\n    key: 'linkedToCare',\n    header: 'Linked To Care',\n    getValue: patient => {\n      return 'Yes';\n    },\n  },\n  {\n    key: 'id',\n    header: 'Patient ID',\n    getValue: patient => {\n      return patient.identifier[0].value;\n    },\n  },\n];\nexport const LinkedToCareInLast14Days: React.FC<{}> = () => {\n  const [patients, setPatients] = useState([]);\n  const [totalPatientCount, setTotalPatientCount] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const [searchTerm, setSearchTerm] = useState(null);\n  const [counter, setCounter] = useState(0);\n  const [filteredResults, setFilteredResults] = useState([]);\n  const [filteredResultsCounts, setFilteredResultsCounts] = useState(0);\n\n  useEffect(() => {\n    fetchPatientsFromObservationCodeConcept(linkedToCareCodeConcept, linkedToCareYesValueConcept, 14).then(\n      (response: Array<any>) => {\n        setPatients(response.map(pat => pat.data));\n        setTotalPatientCount(response.length);\n        setIsLoading(false);\n      },\n    );\n  }, [pageSize, currentPage]);\n\n  useEffect(() => {\n    attach('linked-to-care-last-14-days-table-slot', 'patient-table');\n    return () => {\n      detach('linked-to-care-last-14-days-table-slot', 'patient-table');\n    };\n  }, []);\n\n  const pagination = useMemo(() => {\n    return {\n      usePagination: false,\n      currentPage: currentPage,\n      onChange: props => {\n        setCurrentPage(props.page);\n        setPageSize(props.pageSize);\n      },\n      pageSize: pageSize,\n      totalItems: searchTerm ? filteredResultsCounts : totalPatientCount,\n    };\n  }, [currentPage, filteredResultsCounts, pageSize, totalPatientCount, searchTerm]);\n\n  const handleSearch = useCallback(\n    searchTerm => {\n      setSearchTerm(searchTerm);\n      if (searchTerm) {\n        const filtrate = filterFHIRPatientsByName(searchTerm, patients);\n        setFilteredResults(filtrate);\n        setFilteredResultsCounts(filtrate.length);\n      }\n    },\n    [patients],\n  );\n\n  const state = useMemo(\n    () => ({\n      patients: searchTerm ? filteredResults : patients,\n      columns,\n      search: { placeHolder: 'Search client list', onSearch: handleSearch, currentSearchTerm: searchTerm },\n      pagination,\n      isLoading,\n      autoFocus: true,\n    }),\n    [searchTerm, filteredResults, patients, handleSearch, pagination, isLoading],\n  );\n\n  useEffect(() => {\n    setCounter(counter + 1);\n  }, [state]);\n\n  return (\n    <div style={{ width: '100%', marginBottom: '2rem' }}>\n      {!isLoading && !patients.length ? (\n        <TableEmptyState tableHeaders={columns} message=\"There are no patients in this list.\" />\n      ) : (\n        <ExtensionSlot extensionSlotName=\"linked-to-care-last-14-days-table-slot\" state={state} key={counter} />\n      )}\n    </div>\n  );\n};\n","import { Column, Row } from 'carbon-components-react';\nimport React, { useEffect, useState } from 'react';\nimport OHRISummaryTile from '../../../../components/tile/ohri-summary-tile.component';\nimport { fetchTodayClients, fetchPatientsFromObservationCodeConcept } from '../../../../api/api';\nimport {\n  finalHIVCodeConcept,\n  finalPositiveHIVValueConcept,\n  linkedToCareCodeConcept,\n  linkedToCareYesValueConcept,\n} from '../../../../constants';\nimport OHRISummaryTileTablet from '../../../../components/tile/ohri-summary-tile-tablet.component';\nimport styles from './summary-tile.scss';\nimport { TodaysClientList } from './today-client-list-tile.component';\nimport { PositiveInLast14Days } from './positive-in-last-14-days-list-tile.component';\nimport { LinkedToCareInLast14Days } from './linked-to-care-in-last-14-days-list-tile.component';\n\nfunction HTSSummaryTiles({ launchWorkSpace }) {\n  const [todayPatientCount, setTodayPatientCount] = useState(0);\n  const [positiveInLast14Days, setPositiveInLast14Days] = useState(0);\n  const [linkedToCareInLast14Days, setLinkedToCareInLast14Days] = useState(0);\n\n  const tiles = [\n    {\n      title: \"Today's Clients\",\n      linkAddress: '#',\n      subTitle: 'Active Visits',\n      value: todayPatientCount,\n      onClick: () => {\n        launchWorkSpace(\"Today's clients\", <TodaysClientList />, {\n          numberOfClients: todayPatientCount,\n          subTitle: \"Today's clients\",\n          dateLastUpdated: '--',\n        });\n      },\n    },\n    {\n      title: 'Positive in last 14 days',\n      linkAddress: '#',\n      subTitle: 'Clients',\n      value: positiveInLast14Days,\n      onClick: () => {\n        launchWorkSpace('Positive in last 14 days', <PositiveInLast14Days />, {\n          numberOfClients: positiveInLast14Days,\n          subTitle: 'Clients who tested positive in the last 14 days',\n          dateLastUpdated: '--',\n        });\n      },\n    },\n    {\n      title: 'Linked to care in last 14 days',\n      linkAddress: '#',\n      subTitle: 'Last 14 days',\n      value: linkedToCareInLast14Days,\n      onClick: () => {\n        launchWorkSpace('Linked to care in last 14 days', <LinkedToCareInLast14Days />, {\n          numberOfClients: linkedToCareInLast14Days,\n          subTitle: 'Clients linked to care in the last 14 days',\n          dateLastUpdated: '--',\n        });\n      },\n    },\n  ];\n\n  useEffect(() => {\n    getTodayClientCount();\n    getPositiveInLast14days();\n    getLinkedToCareInLast14days();\n  });\n\n  function getTodayClientCount() {\n    return fetchTodayClients().then(response => {\n      setTodayPatientCount(response.length);\n    });\n  }\n\n  function getPositiveInLast14days() {\n    return fetchPatientsFromObservationCodeConcept(finalHIVCodeConcept, finalPositiveHIVValueConcept, 14).then(\n      response => {\n        setPositiveInLast14Days(response.length);\n      },\n    );\n  }\n\n  function getLinkedToCareInLast14days() {\n    return fetchPatientsFromObservationCodeConcept(linkedToCareCodeConcept, linkedToCareYesValueConcept, 14).then(\n      response => {\n        setLinkedToCareInLast14Days(response.length);\n      },\n    );\n  }\n\n  return (\n    <>\n      <Row className={styles.desktopView}>\n        {tiles.map((tile, index) => {\n          return (\n            <div style={{ width: '321px', marginLeft: '16px' }} key={index}>\n              <OHRISummaryTile\n                title={tile.title}\n                subTitle={tile.subTitle}\n                value={tile.value}\n                onClickView={tile.onClick}\n              />\n            </div>\n          );\n        })}\n      </Row>\n      <Row className={styles.tileView}>\n        <OHRISummaryTileTablet details={tiles} />\n      </Row>\n    </>\n  );\n}\n\nexport default HTSSummaryTiles;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".esm-ohri-hiv__summary-tile__desktopView___2a-91{display:flex}.esm-ohri-hiv__summary-tile__tileView___3c1EZ{display:none}@media(max-width: 1024px){.esm-ohri-hiv__summary-tile__desktopView___2a-91{display:none}.esm-ohri-hiv__summary-tile__tileView___3c1EZ{display:flex}}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"desktopView\": \"esm-ohri-hiv__summary-tile__desktopView___2a-91\",\n\t\"tileView\": \"esm-ohri-hiv__summary-tile__tileView___3c1EZ\"\n};\nmodule.exports = exports;\n"],"names":["tableHeaders","message","style","marginLeft","rows","headers","isSortable","size","useZebraStyles","getHeaderProps","getTableProps","map","header","content","colSpan","length","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","filterFHIRPatientsByName","searchTerm","patients","filter","patient","name","given","join","family","toLowerCase","search","columns","key","getValue","link","getUrl","basePath","id","capitalize","gender","age","birthDate","identifier","value","TodaysClientList","setPatients","useState","totalPatientCount","setTotalPatientCount","isLoading","setIsLoading","currentPage","setCurrentPage","pageSize","setPageSize","setSearchTerm","counter","setCounter","filteredResults","setFilteredResults","filteredResultsCounts","setFilteredResultsCounts","useEffect","fetchTodayClients","then","response","pat","data","attach","pagination","useMemo","usePagination","onChange","props","page","totalItems","handleSearch","useCallback","filtrate","state","placeHolder","onSearch","currentSearchTerm","autoFocus","width","marginBottom","ExtensionSlot","extensionSlotName","PositiveInLast14Days","fetchPatientsFromObservationCodeConcept","finalHIVCodeConcept","finalPositiveHIVValueConcept","detach","LinkedToCareInLast14Days","linkedToCareCodeConcept","linkedToCareYesValueConcept","launchWorkSpace","todayPatientCount","setTodayPatientCount","positiveInLast14Days","setPositiveInLast14Days","linkedToCareInLast14Days","setLinkedToCareInLast14Days","tiles","title","linkAddress","subTitle","onClick","numberOfClients","dateLastUpdated","Row","className","styles","tile","index","onClickView","details","exports","___CSS_LOADER_API_IMPORT___","push","module","locals"],"sourceRoot":""}