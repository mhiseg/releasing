{"version":3,"file":"867.js","mappings":"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","sources":["webpack://@pih/esm-pathology-app/./src/config-schema.ts","webpack://@pih/esm-pathology-app/./src/index.ts","webpack://@pih/esm-pathology-app//home/joshua/Projects/pih-esm-pathology-app/translations|lazy|nonrecursive|/.json$/"],"sourcesContent":["import { Type, validator } from \"@openmrs/esm-framework\";\n\n/**\n *\n * In OpenMRS Microfrontends, all config parameters are optional. Thus,\n * all elements must have a reasonable default. A good default is one\n * that works well with the reference application.\n *\n * To understand the schema below, please read the configuration system\n * documentation:\n *   https://openmrs.github.io/openmrs-esm-core/#/main/config\n * Note especially the section \"How do I make my module configurable?\"\n *   https://openmrs.github.io/openmrs-esm-core/#/main/config?id=im-developing-an-esm-module-how-do-i-make-it-configurable\n * and the Schema Reference\n *   https://openmrs.github.io/openmrs-esm-core/#/main/config?id=schema-reference\n */\nexport const configSchema = {\n  pathologyEncTypeUUID: {\n    _type: Type.String,\n    _default: \"70f18a24-92ec-4de5-acdc-7cae77414e32\",\n    _description:\n      \"This is to determine the UUID of the Pathology encounterType in the instance\",\n  },\n  healthCenterAttrTypeUUID: {\n    _type: Type.String,\n    _default: \"8d87236c-c2cc-11de-8d13-0010c6dffd0f\",\n    _description:\n      \"This is to determine the UUID of the Health center attribute type in the instance\",\n  },\n  pathologyFullAllowedLocationUUID: {\n    _type: Type.String,\n    _default: \"a62fd59a-6577-43e0-b39c-ba42ac8cfbc9\",\n    _description:\n      \"This is to determine the location allowed to view all other location data\",\n  },\n  sampleStatusConceptUUID: {\n    _type: Type.String,\n    _default: \"3adca58e-9334-4be5-9bd3-74f7bbf82776\",\n    _description:\n      \"This is to determine the UUID of the sample status concept in the instance\",\n  },\n  referralStatusConceptUUID: {\n    _type: Type.String,\n    _default: \"5a7a931f-97b8-4d59-b0de-3a83603aaad9\",\n    _description:\n      \"This is to determine the UUID of the referral status concept in the instance\",\n  },\n  sampleDropOffconceptUUID: {\n    _type: Type.String,\n    _default: \"dc288e6c-84a4-4fd3-9136-ef9e13961b1e\",\n    _description:\n      \"This is to determine the UUID of the sample drop off concept in the instance\",\n  },\n  yesConceptUUID: {\n    _type: Type.String,\n    _default: \"3cd6f600-26fe-102b-80cb-0017a47871b2\",\n    _description:\n      \"This is to determine the UUID of the Yes concept in the instance\",\n  },\n  yesConceptName: {\n    _type: Type.String,\n    _default: \"YES\",\n    _description:\n      \"This is to determine the Name of the Yes concept in the instance\",\n  },\n\n  pathologyResultsFromID: {\n    _type: Type.Number,\n    _default: 5613,\n    _description:\n      \"This is to determine the ID of the pathology results form in the instance\",\n  },\n  pathologyResultsApprovedconceptUUID: {\n    _type: Type.String,\n    _default: \"1f7742f0-4571-44d8-a88b-8bc60dc11e29\",\n    _description:\n      \"This is to determine the pathology results approved concept uuid\",\n  },\n  AccessionNumberconceptUUID: {\n    _type: Type.String,\n    _default: \"0e466f59-8070-45b5-97d1-575ec5cfd85d\",\n    _description:\n      \"This is to determine the Accession Number concept uuid\",\n  },\n  DateBiopsySpecimenTakenconceptUUID: {\n    _type: Type.String,\n    _default: \"e0436a5b-dc19-4cb9-ac1b-acc005272c08\",\n    _description:\n      \"This is to determine the Date Biopsy Specimen Taken concept uuid\",\n  },\n  SpecimenSubmissionDateconceptUUID: {\n    _type: Type.String,\n    _default: \"3928b7fc-b3ae-40a5-846f-d480120b04f6\",\n    _description:\n      \"This is to determine the Specimen Submission Date concept uuid\",\n  },\n  SendingPhysicianconceptUUID: {\n    _type: Type.String,\n    _default: \"0a4a22db-0e82-4669-9aba-086d841505b5\",\n    _description:\n      \"This is to determine the Sending Physician concept uuid\",\n  },\n  OtherBiopsyLocationconceptUUID: {\n    _type: Type.String,\n    _default: \"7c4650ee-45d5-435a-b968-511ef127a016\",\n    _description:\n      \"This is to determine the Other Biopsy Location concept uuid\",\n  },\n  OrganSystemconceptUUID: {\n    _type: Type.String,\n    _default: \"b88f9524-6b39-41b3-9b3a-f9a7a4b08fed\",\n    _description:\n      \"This is to determine the Organ System concept uuid\",\n  },\n  OrganconceptUUID: {\n    _type: Type.String,\n    _default: \"488fe4a2-7903-41da-b21e-fb236a1ee356\",\n    _description:\n      \"This is to determine the Organ concept uuid\",\n  },\n  SpecimenDetailconceptUUID: {\n    _type: Type.String,\n    _default: \"e99170a5-f46b-490b-8fbb-bb9eacba3500\",\n    _description:\n      \"This is to determine the Specimen Detail concept uuid\",\n  },\n  OtherTestsOrProceduresconceptUUID: {\n    _type: Type.String,\n    _default: \"66ad3230-59b2-4232-821e-a9ae86819e03\",\n    _description:\n      \"This is to determine the Other tests or procedures concept uuid\",\n  },\n  GrossDescriptionconceptUUID: {\n    _type: Type.String,\n    _default: \"1e97a4d3-1691-4fb7-be78-18e526e82b0b\",\n    _description:\n      \"This is to determine the Gross Description concept uuid\",\n  },\n  MacroscopicExaminationconceptUUID: {\n    _type: Type.String,\n    _default: \"5d149510-0767-4da7-82cd-be406b34877d\",\n    _description:\n      \"This is to determine the Macroscopic Examination concept uuid\",\n  },\n  COMMENTSATCONCLUSIONOFEXAMINATIONconceptUUID: {\n    _type: Type.String,\n    _default: \"3cdc5938-26fe-102b-80cb-0017a47871b2\",\n    _description:\n      \"This is to determine the COMMENTS AT CONCLUSION OF EXAMINATION concept uuid\",\n  },\n  CanregCodeconceptUUID: {\n    _type: Type.String,\n    _default: \"16931672-e068-4ea8-a89c-2ee7dbc07ad1\",\n    _description:\n      \"This is to determine the Canreg Code concept uuid\",\n  },\n};\n\nexport type Config = {\n  pathologyEncTypeUUID: string;\n  healthCenterAttrTypeUUID: string;\n  pathologyFullAllowedLocationUUID: string;\n  sampleStatusConceptUUID: string;\n  referralStatusConceptUUID: string;\n  sampleDropOffconceptUUID: string;\n  yesConceptUUID: string;\n  yesConceptName: string;\n  pathologyResultsFromID: number;\n  pathologyResultsApprovedconceptUUID: string;\n\n  AccessionNumberconceptUUID: string;\n  DateBiopsySpecimenTakenconceptUUID: string;\n  SpecimenSubmissionDateconceptUUID: string;\n  SendingPhysicianconceptUUID: string;\n  OtherBiopsyLocationconceptUUID: string;\n  OrganSystemconceptUUID: string;\n  OrganconceptUUID: string;\n  SpecimenDetailconceptUUID: string;\n  OtherTestsOrProceduresconceptUUID: string;\n  GrossDescriptionconceptUUID: string;\n  MacroscopicExaminationconceptUUID: string;\n  COMMENTSATCONCLUSIONOFEXAMINATIONconceptUUID: string;\n  CanregCodeconceptUUID: string;\n};\n","/**\n * This is the entrypoint file of the application. It communicates the\n * important features of this microfrontend to the app shell. It\n * connects the app shell to the React application(s) that make up this\n * microfrontend.\n */\n\nimport { getAsyncLifecycle, defineConfigSchema } from \"@openmrs/esm-framework\";\nimport { configSchema } from \"./config-schema\";\n\n/**\n * This tells the app shell how to obtain translation files: that they\n * are JSON files in the directory `../translations` (which you should\n * see in the directory structure).\n */\nconst importTranslation = require.context(\n  \"../translations\",\n  false,\n  /.json$/,\n  \"lazy\"\n);\n\n/**\n * This tells the app shell what versions of what OpenMRS backend modules\n * are expected. Warnings will appear if suitable modules are not\n * installed. The keys are the part of the module name after\n * `openmrs-module-`; e.g., `openmrs-module-fhir2` becomes `fhir2`.\n */\nconst backendDependencies = {\n  fhir2: \"^1.2.0\",\n  \"webservices.rest\": \"^2.2.0\",\n};\n\n/**\n * This function performs any setup that should happen at microfrontend\n * load-time (such as defining the config schema) and then returns an\n * object which describes how the React application(s) should be\n * rendered.\n *\n * In this example, our return object contains a single page definition.\n * It tells the app shell that the default export of `greeter.tsx`\n * should be rendered when the route matches `hello`. The full route\n * will be `openmrsSpaBase() + 'hello'`, which is usually\n * `/openmrs/spa/hello`.\n */\nfunction setupOpenMRS() {\n  const moduleName = \"@pih/esm-pathology-app\";\n\n  const options = {\n    featureName: \"pathology-app\",\n    moduleName,\n  };\n\n  defineConfigSchema(moduleName, configSchema);\n\n  return {\n    pages: [\n      {\n        load: getAsyncLifecycle(() => import(\"./PathologySystem\"), options),\n        route: \"pathology\",\n      },\n    ],\n  };\n}\n\nexport { backendDependencies, importTranslation, setupOpenMRS };\n","var map = {\n\t\"./en.json\": [\n\t\t13574,\n\t\t574\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 23979;\nmodule.exports = webpackAsyncContext;"],"names":["configSchema","pathologyEncTypeUUID","_type","Type","_default","_description","healthCenterAttrTypeUUID","pathologyFullAllowedLocationUUID","sampleStatusConceptUUID","referralStatusConceptUUID","sampleDropOffconceptUUID","yesConceptUUID","yesConceptName","pathologyResultsFromID","pathologyResultsApprovedconceptUUID","AccessionNumberconceptUUID","DateBiopsySpecimenTakenconceptUUID","SpecimenSubmissionDateconceptUUID","SendingPhysicianconceptUUID","OtherBiopsyLocationconceptUUID","OrganSystemconceptUUID","OrganconceptUUID","SpecimenDetailconceptUUID","OtherTestsOrProceduresconceptUUID","GrossDescriptionconceptUUID","MacroscopicExaminationconceptUUID","COMMENTSATCONCLUSIONOFEXAMINATIONconceptUUID","CanregCodeconceptUUID","importTranslation","require","backendDependencies","fhir2","setupOpenMRS","moduleName","options","featureName","defineConfigSchema","pages","load","getAsyncLifecycle","route","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports"],"sourceRoot":""}