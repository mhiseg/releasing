{"version":3,"sources":["webpack://openmrs-esm-ohri-hts-app/./src/components/loading/loading.component.tsx","webpack://openmrs-esm-ohri-hts-app/./src/components/patient-banner/patient-banner.component.tsx","webpack://openmrs-esm-ohri-hts-app/./src/hts/encounter-form/hts-encounter-form.resource.tsx","webpack://openmrs-esm-ohri-hts-app/./src/components/identifier-generator/identifier-generator.component.tsx","webpack://openmrs-esm-ohri-hts-app/./src/hts/encounter-form/hts-encounter-form.component.tsx","webpack://openmrs-esm-ohri-hts-app/./src/components/identifier-generator/identifier-generator.scss","webpack://openmrs-esm-ohri-hts-app/./src/components/loading/loading.component.scss","webpack://openmrs-esm-ohri-hts-app/./src/components/patient-banner/patient-banner.scss","webpack://openmrs-esm-ohri-hts-app/./src/hts/encounter-form/hts-encounter-form.scss","webpack://openmrs-esm-ohri-hts-app/./src/components/identifier-generator/identifier-generator.scss?b3c1","webpack://openmrs-esm-ohri-hts-app/./src/components/loading/loading.component.scss?2334","webpack://openmrs-esm-ohri-hts-app/./src/components/patient-banner/patient-banner.scss?367b","webpack://openmrs-esm-ohri-hts-app/./src/hts/encounter-form/hts-encounter-form.scss?7a27"],"names":["className","styles","description","withOverlay","small","PatientBanner","patient","id","name","given","join","family","capitalize","gender","age","birthDate","dayjs","format","saveHTSEncounter","abortController","payload","encounterUuid","url","openmrsFetch","headers","method","body","signal","IdentifierGenerator","style","width","onClick","populationTypeConceptUuid","testOneConceptUuid","patientConsentConceptUuid","confirmatoryTestConceptUuid","finalTestConceptUuid","htsEncounterRole","possibleHSTCodedAnswers","Section","title","children","index","FormGroup","legendText","EmptyValue","fontSize","closeWorkspace","patientUuid","state","props","useCurrentPatient","isLoading","setIsLoading","useState","encounter","setEncounter","patientConsent","setPatientConsent","testLocation","setTestLocation","locationInvalid","setLocationInvalid","htsLocations","setHtsLocations","htsDate","setHTSDate","Date","populationTypeConcept","setPopulationTypeConcept","populationTypesObs","setPopulationTypeObs","testOneResult","setTestOneResult","concept","confirmatoryTestResult","setConfirmatoryTestResult","finalTestResult","setFinalTestResult","currentProvider","setCurrentProvider","conductConfirmatoryTest","populationTypeValueGroupObs","setPopulationTypeValueGroupObs","obsForRetire","setObsForRetire","generalPop","setGeneralPop","msm","setMSM","fsw","setFSW","msw","setMSW","pwid","setPWID","pwud","setPWUD","trangender","setTrangender","useEffect","length","selectedPopulationTypeUuids","map","obs","value","uuid","answers","forEach","selected","includes","sub1","openmrsObservableFetch","pipe","data","subscribe","results","error","createErrorHandler","sub2","response","result","sub3","user","sub4","htsEncounterRepresentation","unsubscribe","detach","htsFormSlot","evaluateFinalTestResult","toDateObjectStrict","encounterDatetime","location","display","rawPatientConsentVal","find","JSON","parse","stringify","toLowerCase","filter","testOneObs","confirmatoryTestObs","recordPopulationTypeObs","checked","event","currentTarget","voidObs","push","person","obsDatetime","order","groupMembers","voided","answerConcept","Form","onSubmit","preventDefault","encounterProviders","findIndex","p","provider","encounterRole","consentIndex","o","testOneResultIndex","confirmatoryTestResultIndex","finalTestResultIndex","AbortController","then","ok","updateParent","handleSubmissionEditMode","enc","encounterType","handleSubmissionEnterMode","Toggle","labelText","labelA","labelB","toggled","onToggle","Dropdown","titleText","label","items","itemToString","item","selectedItem","onChange","invalid","invalidText","DatePicker","datePickerType","date","DatePickerInput","placeholder","toLocaleDateString","window","navigator","language","Checkbox","ContentSwitcher","text","toString","selectedIndex","indexOf","size","Switch","disabled","ButtonSet","Button","kind","type","exports","___CSS_LOADER_API_IMPORT___","module","locals","api","content","__esModule","default"],"mappings":"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","file":"199.openmrs-esm-ohri-app.js","sourcesContent":["import React from 'react';\nimport Loading from 'carbon-components-react/es/components/Loading';\nimport styles from './loading.component.scss';\n\nconst LoadingIcon: React.FC = () => (\n  <div className={styles['centerLoadingSVG']}>\n    <Loading description=\"Active loading indicator\" withOverlay={false} small />\n  </div>\n);\n\nexport default LoadingIcon;\n","import { age } from '@openmrs/esm-framework';\nimport dayjs from 'dayjs';\nimport { capitalize } from 'lodash';\nimport React from 'react';\nimport styles from './patient-banner.scss';\n\nexport const PatientBanner: React.FC<{ patient: any }> = ({ patient }) => {\n  const getPatientNames = () => {\n    return `${patient.name[0].given.join(' ')} ${patient.name[0].family}`;\n  };\n  return (\n    <div id=\"header-wrapper\" className={styles.headerWrapper}>\n      <div className={`${styles.column} ${styles.demo}`}>\n        <div className={styles.row}>\n          <span className={styles.name}>{getPatientNames()}</span>\n        </div>\n        <div className={`${styles.row} ${styles.details}`}>\n          <span>\n            {capitalize(patient.gender)} &middot; {age(patient.birthDate)} &middot;{' '}\n            {dayjs(patient.birthDate).format('DD - MMM - YYYY')}\n          </span>\n        </div>\n      </div>\n      <div className={`${styles.column} ${styles.weight}`}>\n        <div className={`${styles.row} ${styles.weightLabel}`}>\n          <span>Weight</span>\n        </div>\n        <div className={styles.row}>\n          <span className={styles.weightValue}>60</span>\n          <span className={styles.weightUnit}>kg</span>\n        </div>\n      </div>\n      <div className={`${styles.column} ${styles.allergies}`}>\n        <div className={styles.row}>\n          <span className={styles.allergiesLabel}>Allergies</span>\n        </div>\n        <div className={styles.row}>\n          <span className={styles.allergiesValue}>Peanuts, Fructose</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { openmrsFetch, openmrsObservableFetch } from '@openmrs/esm-framework';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AllergyData, Concept, HSTEncounter } from '../../api/types';\n\nexport function getPatientAllergyByPatientUuid(\n  patientUuid: string,\n  allergyUuid: any,\n  abortController: AbortController,\n) {\n  return openmrsFetch<AllergyData>(`/ws/rest/v1/patient/${patientUuid}/allergy/${allergyUuid.allergyUuid}?v=full`, {\n    signal: abortController.signal,\n  });\n}\n\nexport function getAllergyAllergenByConceptUuid(allergyUuid: string) {\n  return openmrsObservableFetch(`/ws/rest/v1/concept/${allergyUuid}?v=full`).pipe(\n    map(({ data }) => data['setMembers']),\n  );\n}\n\nexport function saveHTSEncounter(abortController: AbortController, payload: HSTEncounter, encounterUuid?: string) {\n  let url = '/ws/rest/v1/encounter';\n  if (encounterUuid) {\n    url = url + `/${encounterUuid}`;\n  }\n  return openmrsFetch(url, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n    body: payload,\n    signal: abortController.signal,\n  });\n}\n\nexport function getHTSLocations(): Observable<{ uuid: string; display: string }[]> {\n  return openmrsObservableFetch(`/ws/rest/v1/location?tag=HTS%20Test%20Location&v=custom:(uuid,display)`).pipe(\n    map(({ data }) => data['results']),\n  );\n}\n\nexport function getConcept(conceptUuid: string, v: string): Observable<any> {\n  return openmrsObservableFetch(`/ws/rest/v1/concept/${conceptUuid}?v=${v}`).pipe(map(response => response['data']));\n}\n","import React from 'react';\nimport { Renew32 } from '@carbon/icons-react';\nimport styles from './identifier-generator.scss';\n\nexport const IdentifierGenerator: React.FC = () => {\n  const generateId = () => {};\n  return (\n    <div>\n      <span className={styles.idLabel}>Unique HTS Number (generated)</span>\n      <div className={styles.container}>\n        <div style={{ width: '50%' }}>\n          <span className={styles.idText}>00008962B-12</span>\n        </div>\n        <div>\n          <Renew32 className={(styles.rotate, styles.renewSVG)} onClick={generateId} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n  Button,\n  ButtonSet,\n  Checkbox,\n  ContentSwitcher,\n  DatePicker,\n  DatePickerInput,\n  Dropdown,\n  Form,\n  FormGroup,\n  Switch,\n  Toggle,\n} from 'carbon-components-react';\nimport styles from './hts-encounter-form.scss';\n\nimport {\n  age,\n  createErrorHandler,\n  detach,\n  openmrsObservableFetch,\n  toDateObjectStrict,\n  useConfig,\n  useCurrentPatient,\n} from '@openmrs/esm-framework';\nimport { htsEncounterRepresentation, htsFormSlot } from '../encounters-list/hts-overview-list.component';\nimport { getConcept, getHTSLocations, saveHTSEncounter } from './hts-encounter-form.resource';\nimport { Concept, HSTEncounter } from '../../api/types';\nimport LoadingIcon from '../../components/loading/loading.component';\nimport { IdentifierGenerator } from '../../components/identifier-generator/identifier-generator.component';\nimport { PatientBanner } from '../../components/patient-banner/patient-banner.component';\n\n// TODO: Remove hardcoded values, configure through module config\nconst HTSEncounterType = '30b849bd-c4f4-4254-a033-fe9cf01001d8';\nconst populationTypeConceptUuid = '12584591-bc0d-4759-9c79-d292fa3f60bb';\nconst testOneConceptUuid = 'edbc886c-54f7-402b-a345-415e83e4f89a';\nconst patientConsentConceptUuid = '1710AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\nconst confirmatoryTestConceptUuid = 'aafd3e2b-51b4-4607-86f8-097fb93c0dba';\nconst finalTestConceptUuid = 'f4470401-08e2-40e5-b52b-c9d1254a4d66';\n// This is a basic clinical role, replace with actual HTS Encounter role\nconst htsEncounterRole = '240b26f9-dd88-4172-823d-4a8bfeb7841f';\nconst possibleHSTCodedAnswers = [\n  '1138AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA',\n  '664AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA',\n  '703AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA',\n];\n\nconst HtsEncounterForm: React.FC<{\n  closeWorkspace: () => {};\n  state: any;\n  patientUuid: string;\n  encounterUuid: string;\n}> = ({ closeWorkspace, patientUuid, state, encounterUuid }, props) => {\n  // const config = useConfig();\n  // TODO: Configure all metadata through the config\n  // const { encounterType, concepts } = config['htsEntryFormConfig'];\n  const [, patient] = useCurrentPatient();\n  const [isLoading, setIsLoading] = useState(true);\n  const [encounter, setEncounter] = useState(null);\n  const [patientConsent, setPatientConsent] = useState(false);\n  const [testLocation, setTestLocation] = useState<{ uuid: string; display: string }>(null);\n  const [locationInvalid, setLocationInvalid] = useState(false);\n  const [htsLocations, setHtsLocations] = useState<{ uuid: string; display: string }[]>([]);\n  const [htsDate, setHTSDate] = useState(new Date());\n  const [populationTypeConcept, setPopulationTypeConcept] = useState<Concept>();\n  const [populationTypesObs, setPopulationTypeObs] = useState([]);\n  const [testOneResult, setTestOneResult] = useState({\n    concept: '1138AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA',\n    name: 'Not Performed',\n  });\n  const [confirmatoryTestResult, setConfirmatoryTestResult] = useState(null);\n  const [finalTestResult, setFinalTestResult] = useState(null);\n  const [currentProvider, setCurrentProvider] = useState();\n  const conductConfirmatoryTest = testOneResult?.concept === '703AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';\n  const [populationTypeValueGroupObs, setPopulationTypeValueGroupObs] = useState([]);\n  const [obsForRetire, setObsForRetire] = useState([]);\n  // population types\n  const [generalPop, setGeneralPop] = useState(false);\n  const [msm, setMSM] = useState(false);\n  const [fsw, setFSW] = useState(false);\n  const [msw, setMSW] = useState(false);\n  const [pwid, setPWID] = useState(false);\n  const [pwud, setPWUD] = useState(false);\n  const [trangender, setTrangender] = useState(false);\n\n  useEffect(() => {\n    if (populationTypeValueGroupObs.length) {\n      const selectedPopulationTypeUuids = populationTypeValueGroupObs.map(obs => obs.value.uuid);\n      populationTypeConcept?.answers?.forEach((value, index) => {\n        const selected = selectedPopulationTypeUuids.includes(value.uuid);\n        switch (index) {\n          case 0:\n            setGeneralPop(selected);\n            break;\n          case 1:\n            setMSM(selected);\n            break;\n          case 2:\n            setFSW(selected);\n            break;\n          case 3:\n            setMSW(selected);\n            break;\n          case 4:\n            setPWID(selected);\n            break;\n          case 5:\n            setPWUD(selected);\n            break;\n          case 6:\n            setTrangender(selected);\n            break;\n        }\n      });\n    }\n  }, [populationTypeValueGroupObs]);\n\n  useEffect(() => {\n    const sub1 = getHTSLocations().subscribe(\n      results => setHtsLocations(results),\n      error => createErrorHandler(),\n    );\n\n    const sub2 = getConcept(\n      populationTypeConceptUuid,\n      'custom:(uuid,display,answers:(uuid,display))',\n    ).subscribe(result => setPopulationTypeConcept(result));\n\n    const sub3 = openmrsObservableFetch('/ws/rest/v1/appui/session').subscribe((user: any) => {\n      setCurrentProvider(user.data?.currentProvider?.uuid);\n    });\n\n    let sub4 = null;\n    if (encounterUuid) {\n      sub4 = openmrsObservableFetch(`/ws/rest/v1/encounter/${encounterUuid}?v=${htsEncounterRepresentation}`).subscribe(\n        response => {\n          setEncounter(response.data);\n        },\n      );\n    }\n    return () => {\n      sub1.unsubscribe();\n      sub2.unsubscribe();\n      sub3.unsubscribe();\n      sub4?.unsubscribe();\n      detach(htsFormSlot, 'hts-encounter-form-ext');\n    };\n  }, []);\n\n  useEffect(() => {\n    setFinalTestResult(evaluateFinalTestResult());\n  }, [testOneResult, confirmatoryTestResult]);\n\n  useEffect(() => {\n    if (testLocation) {\n      setLocationInvalid(false);\n    }\n  }, [testLocation]);\n\n  useEffect(() => {\n    setIsLoading(!(encounter ? !!encounter && !!populationTypeConcept : !!populationTypeConcept));\n  }, [encounter, populationTypeConcept]);\n\n  useEffect(() => {\n    if (encounter) {\n      setIsLoading(false);\n      // edit mode\n      setHTSDate(toDateObjectStrict(encounter.encounterDatetime));\n      setTestLocation({ uuid: encounter.location.uuid, display: encounter.location.name });\n      // Initialize patient consent\n      const rawPatientConsentVal = encounter.obs.find(obs => obs.concept.uuid === patientConsentConceptUuid).value;\n      // check if backend return a boolean value\n      if (typeof JSON.parse(JSON.stringify(rawPatientConsentVal)) === 'boolean') {\n        setPatientConsent(rawPatientConsentVal);\n      } else {\n        // then a concept that represents either 'True' or 'False' was returned\n        setPatientConsent(rawPatientConsentVal.name.name.toLowerCase() === 'true');\n      }\n      setPopulationTypeValueGroupObs(encounter.obs.filter(obs => obs.concept.uuid === populationTypeConceptUuid));\n\n      const testOneObs = encounter.obs.find(obs => obs.concept.uuid === testOneConceptUuid);\n      testOneObs &&\n        setTestOneResult({\n          concept: testOneObs.value.uuid,\n          name:\n            testOneObs.value.uuid === '1138AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'\n              ? 'Not Performed'\n              : testOneObs.value.name.name,\n        });\n\n      const confirmatoryTestObs = encounter.obs.find(obs => obs.concept.uuid === confirmatoryTestConceptUuid);\n      if (confirmatoryTestObs) {\n        setConfirmatoryTestResult({\n          concept: confirmatoryTestObs.value.uuid,\n          name:\n            confirmatoryTestObs.value.uuid === '1138AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'\n              ? 'Not Performed'\n              : confirmatoryTestObs.value.name.name,\n        });\n      }\n    }\n  }, [encounter]);\n\n  const evaluateFinalTestResult = () => {\n    if (confirmatoryTestResult && confirmatoryTestResult.name !== 'Not Performed') {\n      return confirmatoryTestResult;\n    } else if (testOneResult && testOneResult.name !== 'Not Performed') {\n      return testOneResult;\n    }\n    return null;\n  };\n\n  const recordPopulationTypeObs = (checked, id, event) => {\n    const obs = populationTypeValueGroupObs.find(obs => obs.value.uuid === event.currentTarget.value);\n    if (obs) {\n      return voidObs(checked, obs, event.currentTarget.value);\n    }\n    if (checked === true) {\n      populationTypesObs.push({\n        person: patient.id,\n        obsDatetime: htsDate,\n        concept: populationTypeConcept.uuid,\n        location: testLocation.uuid,\n        order: null,\n        groupMembers: [],\n        voided: false,\n        value: event.currentTarget.value,\n      });\n      setPopulationTypeObs(populationTypesObs);\n    } else {\n      setPopulationTypeObs(populationTypesObs.filter(obs => obs.value !== event.currentTarget.value));\n    }\n  };\n\n  const voidObs = (checked, obs, answerConcept) => {\n    if (!checked) {\n      setObsForRetire([...obsForRetire, obs]);\n    } else {\n      setObsForRetire(obsForRetire.filter(obs => obs.value.uuid !== answerConcept));\n    }\n  };\n\n  const handleSubmissionEnterMode = () => {\n    const enc: HSTEncounter = {\n      patient: patient.id,\n      encounterDatetime: htsDate,\n      location: testLocation.uuid,\n      encounterType: HTSEncounterType,\n      encounterProviders: [\n        {\n          provider: currentProvider,\n          encounterRole: htsEncounterRole,\n        },\n      ],\n      obs: [\n        {\n          person: patient.id,\n          obsDatetime: htsDate,\n          concept: patientConsentConceptUuid,\n          location: testLocation.uuid,\n          order: null,\n          groupMembers: [],\n          voided: false,\n          value: patientConsent,\n        },\n        {\n          person: patient.id,\n          obsDatetime: htsDate,\n          concept: testOneConceptUuid,\n          location: testLocation.uuid,\n          order: null,\n          groupMembers: [],\n          voided: false,\n          value: testOneResult.concept,\n        },\n        ...populationTypesObs,\n      ],\n    };\n    if (finalTestResult) {\n      enc.obs.push({\n        person: patient.id,\n        obsDatetime: htsDate,\n        concept: finalTestConceptUuid,\n        location: testLocation.uuid,\n        order: null,\n        groupMembers: [],\n        voided: false,\n        value: finalTestResult.concept,\n      });\n    }\n    if (confirmatoryTestResult) {\n      enc.obs.push({\n        person: patient.id,\n        obsDatetime: htsDate,\n        concept: confirmatoryTestConceptUuid,\n        location: testLocation.uuid,\n        order: null,\n        groupMembers: [],\n        voided: false,\n        value: confirmatoryTestResult.concept,\n      });\n    }\n    saveHTSEncounter(new AbortController(), enc).then(response => {\n      if (response.ok) {\n        if (state.updateParent) {\n          state.updateParent();\n        }\n        closeWorkspace();\n      }\n    });\n  };\n\n  const handleSubmissionEditMode = () => {\n    encounter.location = testLocation.uuid;\n    if (encounter.encounterProviders.findIndex(p => currentProvider === p.provider.uuid) === -1) {\n      encounter.encounterProviders = [\n        ...encounter.encounterProviders,\n        {\n          provider: currentProvider,\n          encounterRole: htsEncounterRole,\n        },\n      ];\n    }\n    // patient consent\n    const consentIndex = encounter.obs.findIndex(o => o.concept.uuid === patientConsentConceptUuid);\n    encounter.obs[consentIndex].value = patientConsent;\n    obsForRetire.forEach(obs => {\n      const index = encounter.obs.findIndex(o => o.value.uuid === obs.value.uuid);\n      encounter.obs[index]['voided'] = true;\n    });\n    encounter.obs = [...encounter.obs, ...populationTypesObs];\n    // test one\n    const testOneResultIndex = encounter.obs.findIndex(o => o.concept.uuid === testOneConceptUuid);\n    encounter.obs[testOneResultIndex].value = testOneResult.concept;\n    // confirmatory test\n    const confirmatoryTestResultIndex = encounter.obs.findIndex(o => o.concept.uuid === confirmatoryTestConceptUuid);\n    if (confirmatoryTestResultIndex !== -1) {\n      encounter.obs[confirmatoryTestResultIndex].value = confirmatoryTestResult.concept;\n    } else if (confirmatoryTestResult) {\n      encounter.obs.push({\n        person: patient.id,\n        obsDatetime: htsDate,\n        concept: confirmatoryTestConceptUuid,\n        location: testLocation.uuid,\n        order: null,\n        groupMembers: [],\n        voided: false,\n        value: confirmatoryTestResult.concept,\n      });\n    }\n    // final\n    const finalTestResultIndex = encounter.obs.findIndex(o => o.concept.uuid === finalTestConceptUuid);\n    if (finalTestResultIndex !== -1) {\n      encounter.obs[finalTestResultIndex].value = finalTestResult.concept;\n    } else if (finalTestResult) {\n      encounter.obs.push({\n        person: patient.id,\n        obsDatetime: htsDate,\n        concept: finalTestConceptUuid,\n        location: testLocation.uuid,\n        order: null,\n        groupMembers: [],\n        voided: false,\n        value: finalTestResult.concept,\n      });\n    }\n    saveHTSEncounter(new AbortController(), encounter, encounter.uuid).then(response => {\n      if (response.ok) {\n        if (state.updateParent) {\n          state.updateParent();\n        }\n        closeWorkspace();\n      }\n    });\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    // do some soft field validation\n    if (!testLocation) {\n      setLocationInvalid(true);\n      return;\n    }\n    if (encounter) {\n      handleSubmissionEditMode();\n    } else {\n      handleSubmissionEnterMode();\n    }\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      {patient && (\n        <>\n          <div className={styles.container}>\n            <PatientBanner patient={patient} />\n            {isLoading ? (\n              <LoadingIcon />\n            ) : (\n              <div id=\"content-wrapper\" className={styles.contentWrapper}>\n                <Section title=\"Patient Details\" index={1}>\n                  <div>\n                    <Toggle\n                      labelText=\"Patient consent\"\n                      labelA=\"Not received\"\n                      labelB=\"Received\"\n                      id=\"patient-consent\"\n                      className={styles.customToggle}\n                      toggled={patientConsent}\n                      onToggle={event => setPatientConsent(event)}\n                    />\n                  </div>\n                  <div className={styles.sectionOneRow}>\n                    {htsLocations && (\n                      <div className={styles.chooseLocationColumn}>\n                        <Dropdown\n                          id=\"communityOutreach\"\n                          titleText=\"Test Location\"\n                          label=\"Choose location\"\n                          items={htsLocations}\n                          itemToString={item => item.display}\n                          className={styles.dropDownOverrides}\n                          selectedItem={testLocation}\n                          onChange={({ selectedItem }) => {\n                            setTestLocation(selectedItem);\n                          }}\n                          invalid={locationInvalid}\n                          invalidText=\"This field is required\"\n                        />\n                      </div>\n                    )}\n                    <div className={styles.htsDateInputColumn}>\n                      <DatePicker\n                        datePickerType=\"simple\"\n                        className={styles.datePickerOverrides}\n                        onChange={([date]) => setHTSDate(date)}>\n                        <DatePickerInput\n                          placeholder=\"dd/mm/yyyy\"\n                          labelText=\"Date of HTS Test\"\n                          id=\"hts-date\"\n                          value={htsDate.toLocaleDateString(window.navigator.language)}\n                        />\n                      </DatePicker>\n                    </div>\n                    <div className={styles.idGenColumn}>\n                      <IdentifierGenerator />\n                    </div>\n                  </div>\n                  <div className={styles.populationTypeWrapper}>\n                    <fieldset>\n                      <legend className={styles.label}>Patient Population Type</legend>\n                      <div style={{ display: 'flex' }}>\n                        <div style={{ width: '100%' }}>\n                          <Checkbox\n                            labelText=\"Generation Population\"\n                            id=\"generation-pop\"\n                            className={styles.checkboxLabelOverride}\n                            value={populationTypeConcept.answers[0].uuid}\n                            onChange={(checked, id, event) => {\n                              setGeneralPop(checked);\n                              recordPopulationTypeObs(checked, id, event);\n                            }}\n                            checked={generalPop}\n                          />\n                          <Checkbox\n                            labelText=\"MSM\"\n                            id=\"msm\"\n                            className={styles.checkboxLabelOverride}\n                            value={populationTypeConcept.answers[1].uuid}\n                            onChange={(checked, id, event) => {\n                              setMSM(checked);\n                              recordPopulationTypeObs(checked, id, event);\n                            }}\n                            checked={msm}\n                          />\n                          <Checkbox\n                            labelText=\"FSW\"\n                            id=\"fsw\"\n                            className={styles.checkboxLabelOverride}\n                            value={populationTypeConcept.answers[2].uuid}\n                            onChange={(checked, id, event) => {\n                              setFSW(checked);\n                              recordPopulationTypeObs(checked, id, event);\n                            }}\n                            checked={fsw}\n                          />\n                        </div>\n                        <div style={{ width: '100%' }}>\n                          <Checkbox\n                            labelText=\"MSW\"\n                            id=\"msw\"\n                            className={styles.checkboxLabelOverride}\n                            value={populationTypeConcept.answers[3].uuid}\n                            onChange={(checked, id, event) => {\n                              setMSW(checked);\n                              recordPopulationTypeObs(checked, id, event);\n                            }}\n                            checked={msw}\n                          />\n                          <Checkbox\n                            labelText=\"PWID\"\n                            id=\"pwid\"\n                            className={styles.checkboxLabelOverride}\n                            value={populationTypeConcept.answers[4].uuid}\n                            onChange={(checked, id, event) => {\n                              setPWID(checked);\n                              recordPopulationTypeObs(checked, id, event);\n                            }}\n                            checked={pwid}\n                          />\n                        </div>\n                        <div style={{ width: '100%' }}>\n                          <Checkbox\n                            labelText=\"PWUD\"\n                            id=\"pwud\"\n                            className={styles.checkboxLabelOverride}\n                            value={populationTypeConcept.answers[5].uuid}\n                            onChange={(checked, id, event) => {\n                              setPWUD(checked);\n                              recordPopulationTypeObs(checked, id, event);\n                            }}\n                            checked={pwud}\n                          />\n                          <Checkbox\n                            labelText=\"Transgender\"\n                            id=\"transgender\"\n                            className={styles.checkboxLabelOverride}\n                            value={populationTypeConcept.answers[6].uuid}\n                            onChange={(checked, id, event) => {\n                              setTrangender(checked);\n                              recordPopulationTypeObs(checked, id, event);\n                            }}\n                            checked={trangender}\n                          />\n                        </div>\n                      </div>\n                    </fieldset>\n                  </div>\n                </Section>\n                <Section title=\"HIV Testing\" index={2}>\n                  <div className={styles.label}>Test 1</div>\n                  <div className={styles.contentSwitchWrapper}>\n                    <ContentSwitcher\n                      onChange={({ name, text }) => {\n                        setTestOneResult({\n                          concept: name.toString(),\n                          name: text,\n                        });\n                      }}\n                      selectedIndex={possibleHSTCodedAnswers.indexOf(testOneResult.concept)}\n                      size=\"xl\">\n                      <Switch name=\"1138AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" text=\"Not Performed\" />\n                      <Switch name=\"664AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" text=\"Negative\" />\n                      <Switch name=\"703AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" text=\"Positive\" />\n                    </ContentSwitcher>\n                  </div>\n                  <div className={styles.label}>Confirmation Test</div>\n                  <div className={styles.contentSwitchWrapper}>\n                    <ContentSwitcher\n                      onChange={({ name, text }) => {\n                        setConfirmatoryTestResult({\n                          concept: name,\n                          name: text,\n                        });\n                      }}\n                      selectedIndex={possibleHSTCodedAnswers.indexOf(\n                        confirmatoryTestResult\n                          ? confirmatoryTestResult.concept\n                          : '1138AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA',\n                      )}>\n                      <Switch\n                        name=\"1138AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n                        text=\"Not Performed\"\n                        disabled={!conductConfirmatoryTest}\n                      />\n                      <Switch\n                        name=\"664AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n                        text=\"Negative\"\n                        disabled={!conductConfirmatoryTest}\n                      />\n                      <Switch\n                        name=\"703AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n                        text=\"Positive\"\n                        disabled={!conductConfirmatoryTest}\n                      />\n                    </ContentSwitcher>\n                  </div>\n                  <div className={styles.label}>Final Result</div>\n                  {finalTestResult ? <h6 className={styles.label}>{finalTestResult.name}</h6> : <EmptyValue />}\n                </Section>\n              </div>\n            )}\n          </div>\n          <div className={styles.submit}>\n            <ButtonSet className={styles.submitButtonsOverrides}>\n              <Button kind=\"secondary\" onClick={() => closeWorkspace()}>\n                Cancel\n              </Button>\n              <Button kind=\"primary\" type=\"submit\">\n                Save &amp; Close\n              </Button>\n            </ButtonSet>\n          </div>\n        </>\n      )}\n    </Form>\n  );\n};\n\nconst Section = ({ title, children, index }) => {\n  return (\n    <div className={styles.section}>\n      <FormGroup legendText={''}>\n        <h3 className={styles.sectionHeading}>\n          {index}. {title}\n        </h3>\n        {children}\n      </FormGroup>\n    </div>\n  );\n};\n\nconst EmptyValue = () => {\n  return (\n    <div>\n      <span style={{ fontSize: '1.75rem' }}>- -</span>\n    </div>\n  );\n};\n\nexport default HtsEncounterForm;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".openmrs-esm-ohri-hts__identifier-generator__productiveHeading01___1EXZf{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.openmrs-esm-ohri-hts__identifier-generator__productiveHeading02___3_kH1{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.openmrs-esm-ohri-hts__identifier-generator__productiveHeading03___1bW2c{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.openmrs-esm-ohri-hts__identifier-generator__productiveHeading04___3rJx6{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.openmrs-esm-ohri-hts__identifier-generator__productiveHeading05___3ZWaH{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}.openmrs-esm-ohri-hts__identifier-generator__productiveHeading06___1UM86{font-size:2rem;font-weight:300;line-height:1.199;letter-spacing:0}.openmrs-esm-ohri-hts__identifier-generator__bodyShort01___1-fRd{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.openmrs-esm-ohri-hts__identifier-generator__helperText01___3xn_4{font-size:.75rem;line-height:1.34;letter-spacing:.32px}.openmrs-esm-ohri-hts__identifier-generator__bodyShort02___35PPQ{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.openmrs-esm-ohri-hts__identifier-generator__bodyLong01___gKtzP{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.openmrs-esm-ohri-hts__identifier-generator__bodyLong02___-BpXf{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}.openmrs-esm-ohri-hts__identifier-generator__label01___1lqGf{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.openmrs-esm-ohri-hts__identifier-generator__text01___2grCO{color:#161616}.openmrs-esm-ohri-hts__identifier-generator__text02___26ckn{color:#525252}.openmrs-esm-ohri-hts__identifier-generator__rotate___1KCym{animation:openmrs-esm-ohri-hts__identifier-generator__rotation___gOaqs 2s infinite linear}.openmrs-esm-ohri-hts__identifier-generator__renewSVG___1b5vN{width:1.5rem;fill:#0f62fe}.openmrs-esm-ohri-hts__identifier-generator__renewSVG___1b5vN:hover{cursor:pointer;fill:#525252}@keyframes openmrs-esm-ohri-hts__identifier-generator__rotation___gOaqs{from{transform:rotate(0deg)}to{transform:rotate(359deg)}}.openmrs-esm-ohri-hts__identifier-generator__idLabel___2GT6p{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px;color:#525252;font-size:1.1rem}.openmrs-esm-ohri-hts__identifier-generator__idText___K3Uvj{font-size:1.3rem}.openmrs-esm-ohri-hts__identifier-generator__container___1bL6M{display:flex;align-items:center}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"productiveHeading01\": \"openmrs-esm-ohri-hts__identifier-generator__productiveHeading01___1EXZf\",\n\t\"productiveHeading02\": \"openmrs-esm-ohri-hts__identifier-generator__productiveHeading02___3_kH1\",\n\t\"productiveHeading03\": \"openmrs-esm-ohri-hts__identifier-generator__productiveHeading03___1bW2c\",\n\t\"productiveHeading04\": \"openmrs-esm-ohri-hts__identifier-generator__productiveHeading04___3rJx6\",\n\t\"productiveHeading05\": \"openmrs-esm-ohri-hts__identifier-generator__productiveHeading05___3ZWaH\",\n\t\"productiveHeading06\": \"openmrs-esm-ohri-hts__identifier-generator__productiveHeading06___1UM86\",\n\t\"bodyShort01\": \"openmrs-esm-ohri-hts__identifier-generator__bodyShort01___1-fRd\",\n\t\"helperText01\": \"openmrs-esm-ohri-hts__identifier-generator__helperText01___3xn_4\",\n\t\"bodyShort02\": \"openmrs-esm-ohri-hts__identifier-generator__bodyShort02___35PPQ\",\n\t\"bodyLong01\": \"openmrs-esm-ohri-hts__identifier-generator__bodyLong01___gKtzP\",\n\t\"bodyLong02\": \"openmrs-esm-ohri-hts__identifier-generator__bodyLong02___-BpXf\",\n\t\"label01\": \"openmrs-esm-ohri-hts__identifier-generator__label01___1lqGf\",\n\t\"text01\": \"openmrs-esm-ohri-hts__identifier-generator__text01___2grCO\",\n\t\"text02\": \"openmrs-esm-ohri-hts__identifier-generator__text02___26ckn\",\n\t\"rotate\": \"openmrs-esm-ohri-hts__identifier-generator__rotate___1KCym\",\n\t\"rotation\": \"openmrs-esm-ohri-hts__identifier-generator__rotation___gOaqs\",\n\t\"renewSVG\": \"openmrs-esm-ohri-hts__identifier-generator__renewSVG___1b5vN\",\n\t\"idLabel\": \"openmrs-esm-ohri-hts__identifier-generator__idLabel___2GT6p\",\n\t\"idText\": \"openmrs-esm-ohri-hts__identifier-generator__idText___K3Uvj\",\n\t\"container\": \"openmrs-esm-ohri-hts__identifier-generator__container___1bL6M\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".openmrs-esm-ohri-hts__loading-component__centerLoadingSVG___Vme8M{display:flex;width:100vw;height:100vh;justify-content:center;align-items:center}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"centerLoadingSVG\": \"openmrs-esm-ohri-hts__loading-component__centerLoadingSVG___Vme8M\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".openmrs-esm-ohri-hts__patient-banner__productiveHeading01___3IV1N{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.openmrs-esm-ohri-hts__patient-banner__productiveHeading02___Fe3xU{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.openmrs-esm-ohri-hts__patient-banner__productiveHeading03___3sHJI{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.openmrs-esm-ohri-hts__patient-banner__productiveHeading04___1nh3V{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.openmrs-esm-ohri-hts__patient-banner__productiveHeading05___2Q8eh{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}.openmrs-esm-ohri-hts__patient-banner__productiveHeading06___2OEos{font-size:2rem;font-weight:300;line-height:1.199;letter-spacing:0}.openmrs-esm-ohri-hts__patient-banner__bodyShort01___1St_2{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.openmrs-esm-ohri-hts__patient-banner__helperText01___3fF-O{font-size:.75rem;line-height:1.34;letter-spacing:.32px}.openmrs-esm-ohri-hts__patient-banner__bodyShort02___3XbWf{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.openmrs-esm-ohri-hts__patient-banner__bodyLong01___1xcA0{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.openmrs-esm-ohri-hts__patient-banner__bodyLong02___1B3y2{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}.openmrs-esm-ohri-hts__patient-banner__label01___3xCQ6{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.openmrs-esm-ohri-hts__patient-banner__text01___E6Jpi{color:#161616}.openmrs-esm-ohri-hts__patient-banner__text02___1FL_i{color:#525252}.openmrs-esm-ohri-hts__patient-banner__headerWrapper___1lOvD{display:flex;width:100%;height:100%;margin:0 0 1rem;padding:1rem .5rem 1rem;border-bottom:.063rem solid #c6c6c6}.openmrs-esm-ohri-hts__patient-banner__row___FGEDh{display:flex;flex-direction:row;align-items:baseline}.openmrs-esm-ohri-hts__patient-banner__demo___Jzt5P{width:50%;border-right:.1rem solid #c6c6c6;margin-left:1rem}.openmrs-esm-ohri-hts__patient-banner__name___X1dOw{margin:0 8.375rem .5rem 0;font-family:\\\"IBM Plex Sans\\\";font-size:1.4rem;line-height:1.5;color:#161616}.openmrs-esm-ohri-hts__patient-banner__details___1qHz-{font-size:1.2rem;color:#525252;font-family:\\\"IBM Plex Sans\\\"}.openmrs-esm-ohri-hts__patient-banner__weight___14-od{width:10rem;margin-left:2rem}.openmrs-esm-ohri-hts__patient-banner__weightLabel___i3zds,.openmrs-esm-ohri-hts__patient-banner__allergiesLabel___4MEzp{margin:0 0 .5rem 0;font-family:\\\"IBM Plex Sans\\\";font-size:1.2rem;line-height:1.5;color:#525252}.openmrs-esm-ohri-hts__patient-banner__weightValue___xmEWS,.openmrs-esm-ohri-hts__patient-banner__allergiesValue___3iSbX{font-family:\\\"IBM Plex Sans\\\";font-size:1.3rem;color:#161616}.openmrs-esm-ohri-hts__patient-banner__weightUnit___2uzEo{margin-left:.5rem;font-size:1.2rem;font-family:\\\"IBM Plex Sans\\\";color:#525252}.openmrs-esm-ohri-hts__patient-banner__allergies___7YAiM{width:60%}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"productiveHeading01\": \"openmrs-esm-ohri-hts__patient-banner__productiveHeading01___3IV1N\",\n\t\"productiveHeading02\": \"openmrs-esm-ohri-hts__patient-banner__productiveHeading02___Fe3xU\",\n\t\"productiveHeading03\": \"openmrs-esm-ohri-hts__patient-banner__productiveHeading03___3sHJI\",\n\t\"productiveHeading04\": \"openmrs-esm-ohri-hts__patient-banner__productiveHeading04___1nh3V\",\n\t\"productiveHeading05\": \"openmrs-esm-ohri-hts__patient-banner__productiveHeading05___2Q8eh\",\n\t\"productiveHeading06\": \"openmrs-esm-ohri-hts__patient-banner__productiveHeading06___2OEos\",\n\t\"bodyShort01\": \"openmrs-esm-ohri-hts__patient-banner__bodyShort01___1St_2\",\n\t\"helperText01\": \"openmrs-esm-ohri-hts__patient-banner__helperText01___3fF-O\",\n\t\"bodyShort02\": \"openmrs-esm-ohri-hts__patient-banner__bodyShort02___3XbWf\",\n\t\"bodyLong01\": \"openmrs-esm-ohri-hts__patient-banner__bodyLong01___1xcA0\",\n\t\"bodyLong02\": \"openmrs-esm-ohri-hts__patient-banner__bodyLong02___1B3y2\",\n\t\"label01\": \"openmrs-esm-ohri-hts__patient-banner__label01___3xCQ6\",\n\t\"text01\": \"openmrs-esm-ohri-hts__patient-banner__text01___E6Jpi\",\n\t\"text02\": \"openmrs-esm-ohri-hts__patient-banner__text02___1FL_i\",\n\t\"headerWrapper\": \"openmrs-esm-ohri-hts__patient-banner__headerWrapper___1lOvD\",\n\t\"row\": \"openmrs-esm-ohri-hts__patient-banner__row___FGEDh\",\n\t\"demo\": \"openmrs-esm-ohri-hts__patient-banner__demo___Jzt5P\",\n\t\"name\": \"openmrs-esm-ohri-hts__patient-banner__name___X1dOw\",\n\t\"details\": \"openmrs-esm-ohri-hts__patient-banner__details___1qHz-\",\n\t\"weight\": \"openmrs-esm-ohri-hts__patient-banner__weight___14-od\",\n\t\"weightLabel\": \"openmrs-esm-ohri-hts__patient-banner__weightLabel___i3zds\",\n\t\"allergiesLabel\": \"openmrs-esm-ohri-hts__patient-banner__allergiesLabel___4MEzp\",\n\t\"weightValue\": \"openmrs-esm-ohri-hts__patient-banner__weightValue___xmEWS\",\n\t\"allergiesValue\": \"openmrs-esm-ohri-hts__patient-banner__allergiesValue___3iSbX\",\n\t\"weightUnit\": \"openmrs-esm-ohri-hts__patient-banner__weightUnit___2uzEo\",\n\t\"allergies\": \"openmrs-esm-ohri-hts__patient-banner__allergies___7YAiM\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".openmrs-esm-ohri-hts__hts-encounter-form__productiveHeading01___VpqOH{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.openmrs-esm-ohri-hts__hts-encounter-form__productiveHeading02___o6vYB{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.openmrs-esm-ohri-hts__hts-encounter-form__productiveHeading03___3lWcv{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.openmrs-esm-ohri-hts__hts-encounter-form__productiveHeading04___3W1OY{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.openmrs-esm-ohri-hts__hts-encounter-form__productiveHeading05___2fbmB{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}.openmrs-esm-ohri-hts__hts-encounter-form__productiveHeading06___1oywm{font-size:2rem;font-weight:300;line-height:1.199;letter-spacing:0}.openmrs-esm-ohri-hts__hts-encounter-form__bodyShort01___2AqD6{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.openmrs-esm-ohri-hts__hts-encounter-form__helperText01___8j0uy{font-size:.75rem;line-height:1.34;letter-spacing:.32px}.openmrs-esm-ohri-hts__hts-encounter-form__bodyShort02___3y3tJ{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.openmrs-esm-ohri-hts__hts-encounter-form__bodyLong01___OXWrL{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.openmrs-esm-ohri-hts__hts-encounter-form__bodyLong02___5837c{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}.openmrs-esm-ohri-hts__hts-encounter-form__label01___1_rRU{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.openmrs-esm-ohri-hts__hts-encounter-form__text01___2pSLO{color:#161616}.openmrs-esm-ohri-hts__hts-encounter-form__text02___ZxUaX{color:#525252}.openmrs-esm-ohri-hts__hts-encounter-form__container___3yA3z{background-color:#ededed;height:100%;width:100%;font-family:\\\"IBM Plex Sans\\\"}.openmrs-esm-ohri-hts__hts-encounter-form__contentWrapper___CxMGm{margin-left:1rem;padding-bottom:4rem}.openmrs-esm-ohri-hts__hts-encounter-form__sectionHeading___2tP92{font-size:1.3rem;font-weight:600;line-height:1.375;letter-spacing:.18px;color:#161616;margin-bottom:1.7rem}.openmrs-esm-ohri-hts__hts-encounter-form__sectionLabel___2kxmM{font-size:1.1rem}.openmrs-esm-ohri-hts__hts-encounter-form__sectionOneRow___eaVTk{margin-top:3rem;display:flex}.openmrs-esm-ohri-hts__hts-encounter-form__chooseLocationColumn___3QtQ9{width:30%;margin-right:2rem}.openmrs-esm-ohri-hts__hts-encounter-form__htsDateInputColumn___1OMKZ{width:15%}.openmrs-esm-ohri-hts__hts-encounter-form__idGenColumn___2DU8i{width:30%}.openmrs-esm-ohri-hts__hts-encounter-form__customToggle___1Ant3 label,.openmrs-esm-ohri-hts__hts-encounter-form__sectionOneRow___eaVTk label{font-size:1.1rem !important}.openmrs-esm-ohri-hts__hts-encounter-form__customToggle___1Ant3 label span{font-size:1.35rem !important}.openmrs-esm-ohri-hts__hts-encounter-form__dropDownOverrides___38aA5{max-height:5rem;height:4rem}.openmrs-esm-ohri-hts__hts-encounter-form__dropDownOverrides___38aA5 span{font-size:1.1rem}.openmrs-esm-ohri-hts__hts-encounter-form__datePickerOverrides___VVSTj input{max-height:5rem;height:4rem;width:9rem !important;font-size:1.1rem}.openmrs-esm-ohri-hts__hts-encounter-form__datePickerOverrides___VVSTj label{width:100% !important}.openmrs-esm-ohri-hts__hts-encounter-form__populationTypeWrapper___1tYA7{margin-top:3rem}.openmrs-esm-ohri-hts__hts-encounter-form__label___2s3OE{width:100%;height:1rem;font-size:1.1rem;line-height:1.33;letter-spacing:.32px;color:#525252;margin-bottom:1rem}.openmrs-esm-ohri-hts__hts-encounter-form__checkboxLabelOverride___1fj4E{margin-bottom:1rem}.openmrs-esm-ohri-hts__hts-encounter-form__checkboxLabelOverride___1fj4E span{color:#161616;height:1.125rem;margin:0 0px .063rem .5rem;font-family:\\\"IBM Plex Sans\\\";font-size:1.1rem;line-height:1;letter-spacing:1px}.openmrs-esm-ohri-hts__hts-encounter-form__contentSwitchWrapper___Neb6h{margin-bottom:3rem;width:90%}.openmrs-esm-ohri-hts__hts-encounter-form__contentSwitchWrapper___Neb6h button{font-size:1.1rem !important}.openmrs-esm-ohri-hts__hts-encounter-form__submit___1vOVC{display:flex;justify-content:center;margin:2rem 0 2rem 0}.openmrs-esm-ohri-hts__hts-encounter-form__submitButtonsOverrides___rmwhM button{max-width:28rem !important;width:25rem !important;max-height:4rem !important;height:3.3rem !important;font-size:1rem !important;font-family:\\\"IBM Plex Sans\\\" !important}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"productiveHeading01\": \"openmrs-esm-ohri-hts__hts-encounter-form__productiveHeading01___VpqOH\",\n\t\"productiveHeading02\": \"openmrs-esm-ohri-hts__hts-encounter-form__productiveHeading02___o6vYB\",\n\t\"productiveHeading03\": \"openmrs-esm-ohri-hts__hts-encounter-form__productiveHeading03___3lWcv\",\n\t\"productiveHeading04\": \"openmrs-esm-ohri-hts__hts-encounter-form__productiveHeading04___3W1OY\",\n\t\"productiveHeading05\": \"openmrs-esm-ohri-hts__hts-encounter-form__productiveHeading05___2fbmB\",\n\t\"productiveHeading06\": \"openmrs-esm-ohri-hts__hts-encounter-form__productiveHeading06___1oywm\",\n\t\"bodyShort01\": \"openmrs-esm-ohri-hts__hts-encounter-form__bodyShort01___2AqD6\",\n\t\"helperText01\": \"openmrs-esm-ohri-hts__hts-encounter-form__helperText01___8j0uy\",\n\t\"bodyShort02\": \"openmrs-esm-ohri-hts__hts-encounter-form__bodyShort02___3y3tJ\",\n\t\"bodyLong01\": \"openmrs-esm-ohri-hts__hts-encounter-form__bodyLong01___OXWrL\",\n\t\"bodyLong02\": \"openmrs-esm-ohri-hts__hts-encounter-form__bodyLong02___5837c\",\n\t\"label01\": \"openmrs-esm-ohri-hts__hts-encounter-form__label01___1_rRU\",\n\t\"text01\": \"openmrs-esm-ohri-hts__hts-encounter-form__text01___2pSLO\",\n\t\"text02\": \"openmrs-esm-ohri-hts__hts-encounter-form__text02___ZxUaX\",\n\t\"container\": \"openmrs-esm-ohri-hts__hts-encounter-form__container___3yA3z\",\n\t\"contentWrapper\": \"openmrs-esm-ohri-hts__hts-encounter-form__contentWrapper___CxMGm\",\n\t\"sectionHeading\": \"openmrs-esm-ohri-hts__hts-encounter-form__sectionHeading___2tP92\",\n\t\"sectionLabel\": \"openmrs-esm-ohri-hts__hts-encounter-form__sectionLabel___2kxmM\",\n\t\"sectionOneRow\": \"openmrs-esm-ohri-hts__hts-encounter-form__sectionOneRow___eaVTk\",\n\t\"chooseLocationColumn\": \"openmrs-esm-ohri-hts__hts-encounter-form__chooseLocationColumn___3QtQ9\",\n\t\"htsDateInputColumn\": \"openmrs-esm-ohri-hts__hts-encounter-form__htsDateInputColumn___1OMKZ\",\n\t\"idGenColumn\": \"openmrs-esm-ohri-hts__hts-encounter-form__idGenColumn___2DU8i\",\n\t\"customToggle\": \"openmrs-esm-ohri-hts__hts-encounter-form__customToggle___1Ant3\",\n\t\"dropDownOverrides\": \"openmrs-esm-ohri-hts__hts-encounter-form__dropDownOverrides___38aA5\",\n\t\"datePickerOverrides\": \"openmrs-esm-ohri-hts__hts-encounter-form__datePickerOverrides___VVSTj\",\n\t\"populationTypeWrapper\": \"openmrs-esm-ohri-hts__hts-encounter-form__populationTypeWrapper___1tYA7\",\n\t\"label\": \"openmrs-esm-ohri-hts__hts-encounter-form__label___2s3OE\",\n\t\"checkboxLabelOverride\": \"openmrs-esm-ohri-hts__hts-encounter-form__checkboxLabelOverride___1fj4E\",\n\t\"contentSwitchWrapper\": \"openmrs-esm-ohri-hts__hts-encounter-form__contentSwitchWrapper___Neb6h\",\n\t\"submit\": \"openmrs-esm-ohri-hts__hts-encounter-form__submit___1vOVC\",\n\t\"submitButtonsOverrides\": \"openmrs-esm-ohri-hts__hts-encounter-form__submitButtonsOverrides___rmwhM\"\n};\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../node_modules/sass-loader/dist/cjs.js!./identifier-generator.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../node_modules/sass-loader/dist/cjs.js!./loading.component.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../node_modules/sass-loader/dist/cjs.js!./patient-banner.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../node_modules/sass-loader/dist/cjs.js!./hts-encounter-form.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};"],"sourceRoot":""}