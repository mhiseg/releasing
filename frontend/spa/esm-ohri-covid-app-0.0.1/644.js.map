{"version":3,"file":"644.js","mappings":"4OAWO,MAAMA,EACX,2LAgBIC,EAAiC,CACrC,CACEC,IAAK,gBACLC,OAAQ,qBACRC,SAAUC,IACDC,EAAAA,EAAAA,IAAmBD,EAAW,qBAAqB,GAE5DE,KAAM,CACJC,eAAgBH,IACdA,EAAUI,mBAAmBC,mBAInC,CACER,IAAK,oBACLC,OAAQ,qBACRC,SAAUC,IACDM,EAAAA,EAAAA,IAAoBN,EAAWO,EAAAA,KAG1C,CACEV,IAAK,cACLC,OAAQ,cACRC,SAAUC,IACDM,EAAAA,EAAAA,IAAoBN,EAAWQ,EAAAA,IAAkC,GAAO,IAGnF,CACEX,IAAK,WACLC,OAAQ,cACRC,SAAUC,IACDM,EAAAA,EAAAA,IAAoBN,EAAWS,EAAAA,IAAmC,GAAO,IAGpF,CACEZ,IAAK,iBACLC,OAAQ,cACRC,SAAUC,IACDM,EAAAA,EAAAA,IAAoBN,EAAWU,EAAAA,IAG1C,CACEb,IAAK,UACLC,OAAQ,SACRC,SAAUC,IACDM,EAAAA,EAAAA,IAAoBN,EAAWW,EAAAA,KAG1C,CACEd,IAAK,UACLC,OAAQ,UACRC,SAAUC,GAAa,CACrB,CACEY,KAAM,CAAEC,KAAM,aAAcC,QAAS,SACrCC,cAAef,EAAUgB,KACzBC,OAAQ,IACRC,MAAO,iBACPC,KAAM,QAER,CACEP,KAAM,CAAEC,KAAM,aAAcC,QAAS,SACrCC,cAAef,EAAUgB,KACzBC,OAAQ,IACRC,MAAO,iBACPC,KAAM,QAER,CACEP,KAAM,CAAEC,KAAM,gBAAiBC,QAAS,SACxCC,cAAef,EAAUgB,KACzBC,OAAQ,IACRC,MAAO,oBACPC,KAAM,WA2Bd,EArB8D,EAAGC,YAAAA,MAC/D,MAAM,IAAQC,EAAAA,EAAAA,kBACRC,EAAcC,EAAE,mBAAoB,oBACpCC,EAAcD,EAAE,mBAAoB,oBAC1C,OACE,kBAAC,KAAD,CACEH,YAAaA,EACbL,cAAeU,EAAAA,GACfb,KAAM,CAAEE,QAAS,QAASD,KAAM,mBAAoBa,KAAM,4BAC1DC,MAAO,CACL,CAAEb,QAAS,QAASD,KAAM,mBAAoBe,gBAAiB,CAAC,+BAChE,CAAEd,QAAS,QAASD,KAAM,aAAce,gBAAiB,KAE3DhC,QAASA,EACTiC,YAAaL,EACbF,YAAaA,EACbQ,aAAa","sources":["webpack://esm-ohri-covid-app/./src/covid/pages/case-assessment.encounter-lists.tsx"],"sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  covid_Assessment_EncounterUUID,\n  covidReasonsForTestingConcep_UUID,\n  covidSARS_TestResultConcept_UUID,\n  covidPresentSymptonsConcept_UUID,\n  covidUnderComorbidityConcept_UUID,\n  covidPatientStatusConcept_UUID,\n} from '../../constants';\n\nexport const covidEncounterRepresentation =\n  'custom:(uuid,encounterDatetime,location:(uuid,name),' +\n  'encounterProviders:(uuid,provider:(uuid,name)),' +\n  'obs:(uuid,obsDatetime,concept:(uuid,name:(uuid,name)),value:(uuid,name:(uuid,name))))';\n\ninterface CovidAssessmentWidgetProps {\n  patientUuid: string;\n}\n\n//Generic Component Import\n\nimport EncounterList, {\n  EncounterListColumn,\n  getObsFromEncounter,\n  getEncounterValues,\n} from '../../components/encounter-list/encounter-list.component';\n\nconst columns: EncounterListColumn[] = [\n  {\n    key: 'encounterDate',\n    header: 'Date of Assessment',\n    getValue: encounter => {\n      return getEncounterValues(encounter, 'encounterDatetime', true);\n    },\n    link: {\n      handleNavigate: encounter => {\n        encounter.launchFormActions?.viewEncounter();\n      },\n    },\n  },\n  {\n    key: 'reasonsForTesting',\n    header: 'Reason for testing',\n    getValue: encounter => {\n      return getObsFromEncounter(encounter, covidReasonsForTestingConcep_UUID);\n    },\n  },\n  {\n    key: 'symptomatic',\n    header: 'Symptomatic',\n    getValue: encounter => {\n      return getObsFromEncounter(encounter, covidPresentSymptonsConcept_UUID, false, true);\n    },\n  },\n  {\n    key: 'testDate',\n    header: 'Comorbidity',\n    getValue: encounter => {\n      return getObsFromEncounter(encounter, covidUnderComorbidityConcept_UUID, false, true);\n    },\n  },\n  {\n    key: 'lastTestResult',\n    header: 'Test Result',\n    getValue: encounter => {\n      return getObsFromEncounter(encounter, covidSARS_TestResultConcept_UUID);\n    },\n  },\n  {\n    key: 'outcome',\n    header: 'Status',\n    getValue: encounter => {\n      return getObsFromEncounter(encounter, covidPatientStatusConcept_UUID);\n    },\n  },\n  {\n    key: 'actions',\n    header: 'Actions',\n    getValue: encounter => [\n      {\n        form: { name: 'covid_case', package: 'covid' },\n        encounterUuid: encounter.uuid,\n        intent: '*',\n        label: 'View Case Form',\n        mode: 'view',\n      },\n      {\n        form: { name: 'covid_case', package: 'covid' },\n        encounterUuid: encounter.uuid,\n        intent: '*',\n        label: 'Edit Case Form',\n        mode: 'edit',\n      },\n      {\n        form: { name: 'covid_outcome', package: 'covid' },\n        encounterUuid: encounter.uuid,\n        intent: '*',\n        label: 'Edit Outcome Form',\n        mode: 'edit',\n      },\n    ],\n  },\n];\n\nconst CovidAssessment: React.FC<CovidAssessmentWidgetProps> = ({ patientUuid }) => {\n  const { t } = useTranslation();\n  const headerTitle = t('covidAssessments', 'COVID Assessment');\n  const displayText = t('covidAssessments', 'COVID Assessment');\n  return (\n    <EncounterList\n      patientUuid={patientUuid}\n      encounterUuid={covid_Assessment_EncounterUUID}\n      form={{ package: 'covid', name: 'covid_assessment', view: 'covid_assessment_summary' }}\n      forms={[\n        { package: 'covid', name: 'covid_assessment', excludedIntents: ['COVID_LAB_ASSESSMENT_EMBED'] },\n        { package: 'covid', name: 'covid_case', excludedIntents: [] },\n      ]}\n      columns={columns}\n      description={displayText}\n      headerTitle={headerTitle}\n      dropdownText='Add'\n    />\n  );\n};\n\nexport default CovidAssessment;\n"],"names":["covidEncounterRepresentation","columns","key","header","getValue","encounter","getEncounterValues","link","handleNavigate","launchFormActions","viewEncounter","getObsFromEncounter","covidReasonsForTestingConcep_UUID","covidPresentSymptonsConcept_UUID","covidUnderComorbidityConcept_UUID","covidSARS_TestResultConcept_UUID","covidPatientStatusConcept_UUID","form","name","package","encounterUuid","uuid","intent","label","mode","patientUuid","useTranslation","headerTitle","t","displayText","covid_Assessment_EncounterUUID","view","forms","excludedIntents","description","dropdownText"],"sourceRoot":""}