{"version":3,"file":"867.js","mappings":"kMAsBO,MAAMA,EAAe,CAC1BC,eAAgB,CACdC,MAAOC,EAAAA,KAAAA,QACPC,UAAU,EACVC,aAAc,uDAEhBC,WAAY,CACVJ,MAAOC,EAAAA,KAAAA,MACPC,SAAU,CAAC,SACXC,aACE,uEACFE,UAAW,CACTL,MAAOC,EAAAA,KAAAA,QAETK,YAAa,EACXC,EAAAA,EAAAA,YAAWC,GAAMA,EAAEC,OAAS,GAAG,2CClC/BC,EAAoBC,EAAAA,KAG1B,SAASC,IACP,MAAMC,EAAa,uBACbC,EAAW,OAEXC,EAAU,CACdC,YAAaF,EACbD,WAAAA,GAaF,OAVAI,EAAAA,EAAAA,oBAAmBJ,EAAYf,IAG/BoB,EAAAA,EAAAA,qBAAoB,CAClB,CACEC,KAAO,GAAEC,OAAOC,eAChBC,MAAO,UAIJ,CACLC,MAAO,CACL,CACEC,MAAMC,EAAAA,EAAAA,oBAAkB,IAAM,sDAA4BV,GAC1DW,MAAOZ,O,cC7Bf,IAAIa,EAAM,CACT,YAAa,CACZ,IACA,MAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,KAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,IAClCJ,EAAoBS,KAG7BX,EAAoBY,KAAO,IAAOC,OAAOD,KAAKb,GAC9CC,EAAoBW,GAAK,IACzBG,EAAOC,QAAUf","sources":["webpack://@mhiseg/esm-home-app/./src/config-schema.ts","webpack://@mhiseg/esm-home-app/./src/index.ts","webpack://@mhiseg/esm-home-app//home/rony/workspace/mhiseg/mhiseg-esm-home-app/translations|lazy|nonrecursive|/.json$/"],"sourcesContent":["import { Type, validator } from \"@openmrs/esm-framework\";\n\n/**\n * This is the config schema. It expects a configuration object which\n * looks like this:\n *\n * ```json\n * { \"casualGreeting\": true, \"whoToGreet\": [\"Mom\"] }\n * ```\n *\n * In OpenMRS Microfrontends, all config parameters are optional. Thus,\n * all elements must have a reasonable default. A good default is one\n * that works well with the reference application.\n *\n * To understand the schema below, please read the configuration system\n * documentation:\n *   https://openmrs.github.io/openmrs-esm-core/#/main/config\n * Note especially the section \"How do I make my module configurable?\"\n *   https://openmrs.github.io/openmrs-esm-core/#/main/config?id=im-developing-an-esm-module-how-do-i-make-it-configurable\n * and the Schema Reference\n *   https://openmrs.github.io/openmrs-esm-core/#/main/config?id=schema-reference\n */\nexport const configSchema = {\n  casualGreeting: {\n    _type: Type.Boolean,\n    _default: true,\n    _description: \"Whether to use a casual greeting (or a formal one).\",\n  },\n  whoToGreet: {\n    _type: Type.Array,\n    _default: [\"World\"],\n    _description:\n      \"Who should be greeted. Names will be separated by a comma and space.\",\n    _elements: {\n      _type: Type.String,\n    },\n    _validators: [\n      validator((v) => v.length > 0, \"At least one person must be greeted.\"),\n    ],\n  },\n};\n\nexport type Config = {\n  casualGreeting: boolean;\n  whoToGreet: Array<String>;\n};\n","import {getAsyncLifecycle, defineConfigSchema, registerBreadcrumbs} from '@openmrs/esm-framework';\nimport { configSchema } from \"./config-schema\";\n\nconst importTranslation = require.context('../translations', false, /.json$/, 'lazy');\n\n\nfunction setupOpenMRS(){\n  const moduleName = '@mhiseg/esm-home-app';\n  const pageName = 'home';\n\n  const options = {\n    featureName: pageName,\n    moduleName\n  };\n\n  defineConfigSchema(moduleName, configSchema);\n\n\n  registerBreadcrumbs([\n    {\n      path: `${window.spaBase}/${pageName}`,\n      title: 'Home'\n    }\n  ]);\n\n  return {\n    pages: [\n      {\n        load: getAsyncLifecycle(() => import('./root.component'), options),\n        route: pageName\n      }\n    ]\n  }\n}\n\nexport {importTranslation, setupOpenMRS};\n\n\n\n\n\n\n\n\n\n\n//\n//\n// import { getAsyncLifecycle, defineConfigSchema } from \"@openmrs/esm-framework\";\n// import { configSchema } from \"./config-schema\";\n//\n// const importTranslation = require.context('../translations', false, /.json$/, 'lazy');\n//\n// function setupOpenMRS() {\n//   const moduleName = '@mhiseg/esm-home-app';\n//   const pageName = 'home'\n//\n//   const options = {\n//     featureName: pageName,\n//     moduleName,\n//   };\n//\n//   defineConfigSchema(moduleName, configSchema);\n//\n//   return {\n//     pages: [\n//       {\n//         load: getAsyncLifecycle(() => import(\"./hello\"), options),\n//         route: \"hellos\",\n//       },\n//     ]\n//   };\n// }\n//\n// export {importTranslation, setupOpenMRS };\n","var map = {\n\t\"./en.json\": [\n\t\t574,\n\t\t574\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 979;\nmodule.exports = webpackAsyncContext;"],"names":["configSchema","casualGreeting","_type","Type","_default","_description","whoToGreet","_elements","_validators","validator","v","length","importTranslation","require","setupOpenMRS","moduleName","pageName","options","featureName","defineConfigSchema","registerBreadcrumbs","path","window","spaBase","title","pages","load","getAsyncLifecycle","route","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports"],"sourceRoot":""}